import { CollectionViewer, SelectionChange } from '@angular/cdk/collections';
import { FlatTreeControl } from '@angular/cdk/tree';
import { EventEmitter, OnInit } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { OrganizationServiceNoAuth } from '../../backend/public-api';
import { Hit } from '../../entities/common';
import { Organization } from '../../entities/public-api';
/** Flat node with expandable and level information */
export declare class OrganizationFlatNode {
    item: Hit<Organization>;
    parent: OrganizationFlatNode;
    level: number;
    expandable: boolean;
    isLoading: boolean;
    constructor(item: Hit<Organization>, parent: OrganizationFlatNode, level?: number, expandable?: boolean, isLoading?: boolean);
}
export declare class OrganizationDataSource {
    private _treeControl;
    private orgService;
    dataChange: BehaviorSubject<OrganizationFlatNode[]>;
    orgRelationshipType: string;
    constructor(_treeControl: FlatTreeControl<OrganizationFlatNode>, orgService: OrganizationServiceNoAuth);
    data: OrganizationFlatNode[];
    connect(collectionViewer: CollectionViewer): Observable<OrganizationFlatNode[]>;
    /** Handle expand/collapse behaviors */
    handleTreeControl(change: SelectionChange<OrganizationFlatNode>): void;
    /**
     * Toggle the node, remove from display list
     */
    toggleNode(node: OrganizationFlatNode, expand: boolean): void;
}
export declare class OrgTreeViewerComponent implements OnInit {
    private orgService;
    organizations: Array<Hit<Organization>>;
    orgRelationshipType: string;
    iconAction: string;
    labelAction: string;
    ngStyle: any;
    action: EventEmitter<OrganizationFlatNode>;
    error: boolean;
    treeControl: FlatTreeControl<OrganizationFlatNode>;
    dataSource: OrganizationDataSource;
    getLevel: (node: OrganizationFlatNode) => number;
    isExpandable: (node: OrganizationFlatNode) => boolean;
    hasChild: (_: number, _nodeData: OrganizationFlatNode) => boolean;
    constructor(orgService: OrganizationServiceNoAuth);
    ngOnInit(): void;
    emitAction(org: any): void;
}
