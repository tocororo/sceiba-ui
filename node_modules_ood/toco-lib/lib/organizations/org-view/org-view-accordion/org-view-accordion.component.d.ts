import { OnInit } from '@angular/core';
import { MatAccordion } from '@angular/material';
/**
 * The `OrgViewAccordionComponent` type.
 */
export declare enum OrgViewAccordionType {
    /**
     * The `OrgViewAccordionComponent` is used to show relationships.
     */
    Relationships = "Relaci\u00F3n",
    /**
     * The `OrgViewAccordionComponent` is used to show addresses.
     */
    Addresses = "Direcci\u00F3n"
}
export declare class OrgViewAccordionComponent implements OnInit {
    /**
     * Represents the `OrgViewAccordionType` enum for internal use.
     */
    readonly orgViewAccordion_Type: typeof OrgViewAccordionType;
    /**
     * The control's appearance.
     * By default, its value is `'outline'`.
     */
    appearance: string;
    /**
     * The control's description.
     * By default, its value is `undefined` and it is not showed.
     */
    desc: string;
    /**
     * The array of data that should be rendered by the accordion, where each object represents one row.
     * This array has the same length than the `panelsTitle` field.
     * By default, its value is `[]`.
     */
    value: any[];
    /**
     * The `OrgViewAccordionComponent` type.
     * By default, its value is `OrgViewAccordionType.Relationships`.
     */
    orgViewAccordionType: OrgViewAccordionType;
    /**
     * The panels title.
     * This array has the same length than the `value` field.
     * By default, its value is `[]`.
     */
    panelsTitle: string[];
    private _accordion;
    constructor();
    ngOnInit(): void;
    /**
     * Returns the `MatAccordion` control.
     */
    readonly getAccordion: MatAccordion;
    /**
     * Returns true if the panel has element; otherwise, false.
     * The panel always has element by default.
     * @param pos The panel position.
     */
    panelHasElement(pos: number): boolean;
}
