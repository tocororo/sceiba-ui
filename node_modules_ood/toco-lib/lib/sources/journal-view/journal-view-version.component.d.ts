import { OnInit, OnChanges, EventEmitter } from '@angular/core';
import { MatSnackBar } from '@angular/material';
import { JournalVersion, SourceClasification } from '../../entities/public-api';
import { JournalDataType } from './journal-view.component';
export declare class JournalViewVersionComponent implements OnInit, OnChanges {
    private _snackBar;
    currentJournal: JournalVersion;
    type: number;
    editingJournal: JournalVersion;
    journalDataType: typeof JournalDataType;
    currentInstitutionTerms: Array<SourceClasification>;
    currentDataBaseTerms: Array<SourceClasification>;
    currentGroupTerms: Array<SourceClasification>;
    currentProvinceTerms: Array<SourceClasification>;
    currentSubjectTerms: Array<SourceClasification>;
    currentLicenceTerms: Array<SourceClasification>;
    vocabularies: any;
    panelOpenState: boolean;
    currentJournalChecked: boolean;
    editingJournalChange: EventEmitter<JournalVersion>;
    constructor(_snackBar: MatSnackBar);
    ngOnInit(): void;
    ngOnChanges(): void;
    loadJournalData(): void;
    /**
     * Changes the field `reviewed` of a `Journal`, that means the user saw these version
     * and consider it not has more information.
     */
    markAsViewed(): void;
    fieldEditingJournalChange(): void;
    replace(): void;
    /**
     * Concats a `Journal` property by a equal property in `JournalData`.
     * @param type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.
     * @param termId is a `Term` identifyer, only needs if `type` is `JournalDataType.term`.
     * @NOTE this function call `replace(..., true)`
     */
    concat(type: JournalDataType, termSource: SourceClasification): void;
    replaceSubjects(): void;
    replaceIndexes(): void;
    replaceClassifications(vocab: string): void;
    replaceOrganizations(): void;
}
