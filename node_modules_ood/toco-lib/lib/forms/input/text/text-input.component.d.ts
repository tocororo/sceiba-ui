import { OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { InputControl } from '../input.control';
import { ValidatorArguments } from '../../form-field.control';
/**
 * Represents a control that allows the writing of a text.
 */
export declare class InputTextComponent extends InputControl implements OnInit {
    /**
     * Returns a `FormControl` by default.
     * It is used to initialized the `InputTextComponent`'s `content.formControl` value by default.
     * @param validatorArguments An object that has only one field of `pattern` name and its value is a string.
     * The `pattern` name is the validator name and the value is the value that the validator needs to check.
     * For example, you can call the `getFormControlByDefault` method in this way:
     * InputTextComponent.getFormControlByDefault({ 'pattern': '^[a-zA-Z][a-zA-Z\-\_\ 0-9]*$' });
     * If this argument is not specified, by default its value is `undefined`.
     */
    static getFormControlByDefault(validatorArguments?: ValidatorArguments): FormControl;
    constructor();
    ngOnInit(): void;
    /**
     * Returns an error string if the control is in an error state; otherwise, empty string.
     */
    getErrorMessage(): string;
}
