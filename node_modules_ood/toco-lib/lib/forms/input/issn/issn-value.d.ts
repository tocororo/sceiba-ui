/**
 * Represents the abbreviation for an ISSN type.
 */
export declare enum IssnType_Abbreviation {
    /**
     * The ISSN abbreviation by default.
     */
    ISSN = "ISSN",
    /**
     * The ISSN abbreviation for the print media (paper) version of a serial.
     * Usually it is the "default media", so the "default ISSN".
     */
    p_ISSN = "p-ISSN",
    /**
     * The ISSN abbreviation for the electronic media (online) version of a serial.
     */
    e_ISSN = "e-ISSN",
    /**
     * The ISSN abbreviation for the linking ISSN.
     * It is a specific ISSN that groups the different media of the same serial publication.
     * A single ISSN-L is designated for all media of a serial publication, irrespective of how many there are.
     * A serial publication is associated with a single ISSN-L.
     */
    ISSN_L = "ISSN-L"
}
/**
 * Represents the label for an ISSN type.
 */
export declare enum IssnType_Label {
    /**
     * The ISSN label.
     */
    ISSN = "TOCO_NG_ISSN",
    /**
     * The ISSN label for the print ISSN.
     */
    p_ISSN = "TOCO_NG_P_ISSN",
    /**
     * The ISSN label for the electronic ISSN.
     */
    e_ISSN = "TOCO_NG_E_ISSN",
    /**
     * The ISSN label for the linking ISSN.
     */
    ISSN_L = "TOCO_NG_ISSN_L"
}
/**
 * Data structure for holding an ISSN.
 * An ISSN (International Standard Serial Number) is an 8-digit code.
 * This control stores the code as a string of length 11, with the form 'XXXX – XXXX'.
 * It is used to identify newspapers, journals, magazines and periodicals
 * of all kinds and on all media–print and electronic. For more information
 * follow the link: https://www.issn.org/understanding-the-issn/what-is-an-issn/.
 */
export declare class IssnValue {
    /**
     * Represents the ISSN placeholder.
     */
    static readonly issn_Placeholder: string;
    /**
     * The amount of characters in the code.
     */
    static readonly codeLength: number;
    /**
     * The amount of characters in the code as string value.
     */
    static readonly codeLengthAsString: string;
    /**
     * The character that represents the code group separator.
     */
    static readonly codeGroupSeparator: string;
    /**
     * The string that represents the code group separator with space.
     */
    static readonly codeGroupSeparatorWithSpace: string;
    /**
     * The regular expression that matches an ISSN code as a string of length 11, with the form 'XXXX – XXXX'.
     */
    static readonly regExpIssnWithLength_11: string;
    /**
     * The regular expression that matches an ISSN code as a string of length 9, with the form 'XXXX–XXXX'.
     */
    static readonly regExpIssnWithLength_9: string;
    /**
     * The regular expression that matches an ISSN code as a string of length 8, with the form 'XXXXXXXX'.
     */
    static readonly regExpIssnWithLength_8: string;
    /**
     * General purpose method.
     * Converts the specified ISSN code to a code with length 11 with the form 'XXXX – XXXX'.
     * @param code The code to convert.
     */
    static convertIssnToLength_11(code: string): string;
    /**
     * General purpose method.
     * Converts the specified ISSN code to a code with length 9 with the form 'XXXX–XXXX'.
     * @param code The code to convert.
     */
    static convertIssnToLength_9(code: string): string;
    /**
     * General purpose method.
     * Converts the specified ISSN code to a code with length 8 with the form 'XXXXXXXX'.
     * @param code The code to convert.
     */
    static convertIssnToLength_8(code: string): string;
    /**
     * The code of `IssnValue.codeLength` characters.
     */
    code: string;
    constructor(c: string);
    /**
     * Returns true if the ISSN is complete; otherwise, false.
     * It is complete if the code of characters has the correct length. It does not check if the ISSN has
     * the correct digits.
     */
    isComplete(): boolean;
    /**
     * Returns a string representation of this `IssnValue` object.
     * @param acronym The acronym to use.
     */
    toString(acronym: IssnType_Abbreviation | IssnType_Label): string;
}
