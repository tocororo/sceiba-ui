import { EventEmitter, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { InputControl } from '../../input/input.control';
import { OrganizationServiceNoAuth } from '../../../backend/organization.service';
import { HttpParams } from '@angular/common/http';
import { Hit, HitList } from '../../../entities/common';
import { Organization } from '../../../entities/organization.entity';
interface SelectOrgsComponentExtraContent {
    multiple: boolean;
    selectedOrgsIds: [];
    /**
      * Input `orgFilter` is a dict with `type` and `value` to filter the organizations,
      * @Example { type: 'country' , value: 'Cuba" }
      */
    orgFilter: {
        type: string;
        value: string;
    };
}
export declare class SelectOrgsComponent extends InputControl implements OnInit {
    private _orgService;
    /**
     * Input `orgCtrl` is a FormControl
     */
    orgCtrl: FormControl;
    filteredOrg: HitList<Organization>;
    params: HttpParams;
    placeholder: string;
    label: string;
    appearance: string;
    /**
     * Input `cleaning` is a boolen, if true then clean the search
     */
    cleaning: boolean;
    selectedOrg: EventEmitter<Organization>;
    chipsList: Hit<Organization>[];
    extraContent: SelectOrgsComponentExtraContent;
    loading: boolean;
    toSearch: number;
    constructor(_orgService: OrganizationServiceNoAuth);
    ngOnInit(): void;
    displayFn(org?: Organization): string | undefined;
    addChips(value: Hit<Organization>): void;
    removeChip(index: number): void;
}
export {};
