import { OnInit } from "@angular/core";
import { FormControl } from "@angular/forms";
import { Observable } from "rxjs";
import { TaxonomyService } from '../../../backend/public-api';
import { VocabulariesInmutableNames, TermNode } from '../../../entities/public-api';
import { InputControl } from '../../input/input.control';
interface VocabularyComponentExtraContent {
    multiple: boolean;
    selectedTermsIds: [];
    excludeTermsIds: [];
    level: number;
    vocab: VocabulariesInmutableNames;
}
/**
 * A control to select a term or terms in a vocabulary.
 */
export declare class VocabularyComponent extends InputControl implements OnInit {
    private service;
    chipsFormControl: FormControl;
    inputId: string;
    filteredOptions: Observable<TermNode[]>;
    chipsList: TermNode[];
    selectOptions: TermNode[];
    terms: TermNode[];
    loading: boolean;
    extraContent: VocabularyComponentExtraContent;
    searchText: string;
    private termsTreeObserver;
    constructor(service: TaxonomyService);
    ngOnInit(): void;
    private setValidation;
    private addTermToValue;
    private removeTermFromValue;
    private _updateFilteredOptions;
    private _get_terms;
    addChips(value: TermNode): void;
    removeChip(index: number): void;
    getTermNameInATree(node: TermNode): any;
}
export {};
