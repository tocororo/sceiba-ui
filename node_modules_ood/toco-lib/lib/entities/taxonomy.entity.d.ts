import { Entity, EntityBase } from './common';
export declare enum VocabulariesInmutableNames {
    CUBAN_INTITUTIONS = "CUBAN_INTITUTIONS",
    SUBJECTS = "SUBJECTS",
    CUBAN_PROVINCES = "CUBAN_PROVINCES",
    LICENCES = "LICENCES",
    INDEXES_CLASIFICATION = "INDEXES_CLASIFICATION",
    INDEXES = "INDEXES",
    UNESCO_VOCAB = "UNESCO_VOCAB",
    RECOD_SETS = "RECOD_SETS",
    RECORD_TYPES = "RECORD_TYPES",
    EXTRA_INSTITUTIONS = "EXTRA_INSTITUTIONS",
    SUBJECT_COVER = "SUBJECT_COVER",
    COUNTRIES = "COUNTRIES"
}
export declare class Term extends Entity {
    uuid: string;
    identifier: string;
    description: string;
    data: EntityBase;
    vocabulary_id: string;
    parent_id: string;
    clasified_ids: number[];
    class_ids: number[];
}
export declare class TermInstitutionData extends EntityBase {
    grid: string;
    email: string;
    website: string;
    address: string;
}
export declare class TermIndexData extends EntityBase {
    url: string;
    abrev: string;
    initial_cover: string;
    end_cover: string;
}
export declare class Vocabulary extends Entity {
    name: string;
    description: string;
    human_name: string;
    identifier: string;
}
/** File node data with possible child nodes. */
export interface TermNode {
    term: Term;
    parent: TermNode;
    children?: TermNode[];
}
