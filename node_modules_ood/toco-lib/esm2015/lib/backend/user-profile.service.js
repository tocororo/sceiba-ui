/**
 * @fileoverview added by tsickle
 * Generated from: lib/backend/user-profile.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Environment } from '../core/public-api';
import * as i0 from "@angular/core";
import * as i1 from "../core/env";
import * as i2 from "@angular/common/http";
export class UserProfileService {
    /**
     * @param {?} env
     * @param {?} http
     */
    constructor(env, http) {
        this.env = env;
        this.http = http;
    }
    /**
     * gives information about an user authenticated
     * @return {?}
     */
    getUserInfo() {
        return this.http.get(this.env.sceibaApi + 'me');
    }
    /**
     * @param {?=} size
     * @param {?=} page
     * @param {?=} query
     * @return {?}
     */
    getUsers(size = 10, page = 1, query = '') {
        /** @type {?} */
        let params = new HttpParams();
        params = params.set('size', size.toString(10));
        params = params.set('page', page.toString(10));
        params = params.set('query', query);
        /** @type {?} */
        const options = {
            params: params
        };
        return this.http.get(this.env.sceibaApi + 'users/search', options);
    }
}
UserProfileService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
UserProfileService.ctorParameters = () => [
    { type: Environment },
    { type: HttpClient }
];
/** @nocollapse */ UserProfileService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function UserProfileService_Factory() { return new UserProfileService(i0.ɵɵinject(i1.Environment), i0.ɵɵinject(i2.HttpClient)); }, token: UserProfileService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    UserProfileService.prototype.env;
    /**
     * @type {?}
     * @protected
     */
    UserProfileService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wcm9maWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9iYWNrZW5kL3VzZXItcHJvZmlsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7OztBQU9qRCxNQUFNLE9BQU8sa0JBQWtCOzs7OztJQUU3QixZQUNZLEdBQWdCLEVBQ2QsSUFBZ0I7UUFEbEIsUUFBRyxHQUFILEdBQUcsQ0FBYTtRQUNkLFNBQUksR0FBSixJQUFJLENBQVk7SUFBSSxDQUFDOzs7OztJQUtuQyxXQUFXO1FBQ1QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBZ0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDakUsQ0FBQzs7Ozs7OztJQUVELFFBQVEsQ0FBQyxJQUFJLEdBQUUsRUFBRSxFQUFFLElBQUksR0FBRSxDQUFDLEVBQUUsS0FBSyxHQUFFLEVBQUU7O1lBQy9CLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRTtRQUM3QixNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQy9DLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDOztjQUM5QixPQUFPLEdBQUc7WUFDZCxNQUFNLEVBQUUsTUFBTTtTQUNmO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBZ0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BGLENBQUM7OztZQXpCRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7WUFOUSxXQUFXO1lBRlgsVUFBVTs7Ozs7Ozs7SUFZYixpQ0FBd0I7Ozs7O0lBQ3hCLGtDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7IEVudmlyb25tZW50IH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcblxuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tICcuLi9jb3JlL3B1YmxpYy1hcGknO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBVc2VyUHJvZmlsZVNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgcHJpdmF0ZSBlbnY6IEVudmlyb25tZW50LFxuICAgICAgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQpIHsgfVxuXG4gIC8qKlxuICAgKiBnaXZlcyBpbmZvcm1hdGlvbiBhYm91dCBhbiB1c2VyIGF1dGhlbnRpY2F0ZWRcbiAgICovXG4gIGdldFVzZXJJbmZvKCk6IE9ic2VydmFibGU8UmVzcG9uc2U8YW55Pj4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICdtZScpO1xuICB9XG5cbiAgZ2V0VXNlcnMoc2l6ZT0gMTAsIHBhZ2U9IDEsIHF1ZXJ5PSAnJyk6IE9ic2VydmFibGU8UmVzcG9uc2U8YW55Pj4ge1xuICAgIGxldCBwYXJhbXMgPSBuZXcgSHR0cFBhcmFtcygpO1xuICAgIHBhcmFtcyA9IHBhcmFtcy5zZXQoJ3NpemUnLCBzaXplLnRvU3RyaW5nKDEwKSk7XG4gICAgcGFyYW1zID0gcGFyYW1zLnNldCgncGFnZScsIHBhZ2UudG9TdHJpbmcoMTApKTtcbiAgICBwYXJhbXMgPSBwYXJhbXMuc2V0KCdxdWVyeScsIHF1ZXJ5KTtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgcGFyYW1zOiBwYXJhbXNcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICd1c2Vycy9zZWFyY2gnLCBvcHRpb25zKTtcbiAgfVxuXG5cbn1cbiJdfQ==