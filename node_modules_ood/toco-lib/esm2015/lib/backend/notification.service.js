/**
 * @fileoverview added by tsickle
 * Generated from: lib/backend/notification.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { HttpService } from '../core/public-api';
import { Environment } from '../core/public-api';
export class NotificationService extends HttpService {
    /**
     * @param {?} env
     * @param {?} http
     */
    constructor(env, http) {
        super(http);
        this.env = env;
        this.http = http;
    }
    /**
     * @param {?} count
     * @param {?} page
     * @return {?}
     */
    getNotificationsList(count, page) {
        return this.http.get(this.env.sceibaApi + 'notification/list');
    }
    /**
     * @param {?} id
     * @return {?}
     */
    setNotificationViewed(id) {
        return this.http.get(this.env.sceibaApi + 'notification/viewed/' + id);
    }
}
NotificationService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NotificationService.ctorParameters = () => [
    { type: Environment },
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    NotificationService.prototype.env;
    /**
     * @type {?}
     * @protected
     */
    NotificationService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9iYWNrZW5kL25vdGlmaWNhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFHbEQsT0FBTyxFQUFFLFdBQVcsRUFBWSxNQUFNLG9CQUFvQixDQUFDO0FBQzNELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUdqRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsV0FBVzs7Ozs7SUFHaEQsWUFBb0IsR0FBZ0IsRUFBWSxJQUFnQjtRQUM1RCxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFESSxRQUFHLEdBQUgsR0FBRyxDQUFhO1FBQVksU0FBSSxHQUFKLElBQUksQ0FBWTtJQUVoRSxDQUFDOzs7Ozs7SUFFRCxvQkFBb0IsQ0FBQyxLQUFhLEVBQUUsSUFBWTtRQUM1QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFnQixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7Ozs7O0lBR0QscUJBQXFCLENBQUMsRUFBVTtRQUM1QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFnQixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBQyxzQkFBc0IsR0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0RixDQUFDOzs7WUFmSixVQUFVOzs7O1lBRkYsV0FBVztZQUpYLFVBQVU7Ozs7Ozs7SUFVSCxrQ0FBd0I7Ozs7O0lBQUUsbUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSHR0cFNlcnZpY2UsIFJlc3BvbnNlIH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcbmltcG9ydCB7IEVudmlyb25tZW50IH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvblNlcnZpY2UgZXh0ZW5kcyBIdHRwU2VydmljZSB7XG5cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZW52OiBFbnZpcm9ubWVudCwgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQpIHtcbiAgICAgICAgc3VwZXIoaHR0cCk7XG4gICAgfVxuXG4gICAgZ2V0Tm90aWZpY2F0aW9uc0xpc3QoY291bnQ6IG51bWJlciwgcGFnZTogbnVtYmVyKTogT2JzZXJ2YWJsZTxSZXNwb25zZTxhbnk+PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICdub3RpZmljYXRpb24vbGlzdCcpO1xuICAgIH1cblxuXG4gICAgc2V0Tm90aWZpY2F0aW9uVmlld2VkKGlkOiBudW1iZXIpOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+e1xuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxSZXNwb25zZTxhbnk+Pih0aGlzLmVudi5zY2VpYmFBcGkrJ25vdGlmaWNhdGlvbi92aWV3ZWQvJytpZCk7XG4gICAgfVxufVxuIl19