/**
 * @fileoverview added by tsickle
 * Generated from: lib/taxonomy/taxonomy/taxonomy.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 *   Copyright (c) 2020 Universidad de Pinar del Río "Hermanos Saíz Montes de Oca"
 *   All rights reserved.

 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *   of this software and associated documentation files (the "Software"), to deal
 *   in the Software without restriction, including without limitation the rights
 *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the Software is
 *   furnished to do so, subject to the following conditions:

 *   The above copyright notice and this permission notice shall be included in all
 *   copies or substantial portions of the Software.

 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *   SOFTWARE.
 */
import { Component } from '@angular/core';
export class TaxonomyComponent {
    constructor() {
        this.vocabs = { title: 'Vocabularios', cols: 1, rows: 1 };
        this.terms = { title: 'Terminos de', cols: 1, rows: 2 };
        this.current_vocab = { name: '', description: '' };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} vocab
     * @return {?}
     */
    vocabChange(vocab) {
        this.currentVocab = vocab;
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
}
TaxonomyComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-taxonomy',
                template: "<div class=\"grid-container\">\n  <!-- <h1 class=\"mat-h1\">Taxonom\u00EDa</h1> -->\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\u201D32px\u201D fxLayoutAlign=\"space-around none\">\n    \n    <toco-vocabularies \n      fxFlex=\"38%\" \n      (selectedVocab)=\"vocabChange($event)\"\n    ></toco-vocabularies>\n\n    <toco-terms \n      fxFlex=\"58%\" \n      [currentVocab]=\"currentVocab\"\n    ></toco-terms>\n  </div>\n</div>",
                styles: [".grid-container{margin:20px}.dashboard-card{position:absolute;top:15px;left:15px;right:15px;bottom:15px;overflow:hidden;display:flex;flex-direction:column}.dashboard-card>.mat-card-title-group{display:block}.dashboard-card>.mat-card-content{overflow-y:auto}"]
            }] }
];
/** @nocollapse */
TaxonomyComponent.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    TaxonomyComponent.prototype.vocabs;
    /** @type {?} */
    TaxonomyComponent.prototype.terms;
    /** @type {?} */
    TaxonomyComponent.prototype.current_vocab;
    /** @type {?} */
    TaxonomyComponent.prototype.currentVocab;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGF4b25vbXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdG9jby1saWIvIiwic291cmNlcyI6WyJsaWIvdGF4b25vbXkvdGF4b25vbXkvdGF4b25vbXkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQVM3RCxNQUFNLE9BQU8saUJBQWlCO0lBUzFCO1FBUEEsV0FBTSxHQUFHLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNyRCxVQUFLLEdBQUcsRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBRW5ELGtCQUFhLEdBQUcsRUFBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUsxQyxDQUFDOzs7O0lBRUgsUUFBUTtJQUNSLENBQUM7Ozs7O0lBQ0QsV0FBVyxDQUFDLEtBQWlCO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQzlCLENBQUM7Ozs7SUFDRCxXQUFXO0lBQ1gsQ0FBQzs7O1lBdkJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZUFBZTtnQkFDekIseWNBQXdDOzthQUUzQzs7Ozs7O0lBR0csbUNBQXFEOztJQUNyRCxrQ0FBbUQ7O0lBRW5ELDBDQUE0Qzs7SUFFNUMseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqICAgQ29weXJpZ2h0IChjKSAyMDIwIFVuaXZlcnNpZGFkIGRlIFBpbmFyIGRlbCBSw61vIFwiSGVybWFub3MgU2HDrXogTW9udGVzIGRlIE9jYVwiXG4gKiAgIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5cbiAqICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogICBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4gKiAgIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbiAqICAgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogICBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbiAqICAgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuICogICBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbiAqICAgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuICogICBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiAgIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogICBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbiAqICAgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogICBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogICBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuICogICBTT0ZUV0FSRS5cbiAqL1xuXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZvY2FidWxhcnkgfSBmcm9tICcuLi8uLi9lbnRpdGllcy9wdWJsaWMtYXBpJztcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RvY28tdGF4b25vbXknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90YXhvbm9teS5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGF4b25vbXkuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUYXhvbm9teUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95e1xuXG4gICAgdm9jYWJzID0geyB0aXRsZTogJ1ZvY2FidWxhcmlvcycsIGNvbHM6IDEsIHJvd3M6IDEgfTtcbiAgICB0ZXJtcyA9IHsgdGl0bGU6ICdUZXJtaW5vcyBkZScsIGNvbHM6IDEsIHJvd3M6IDIgfTtcblxuICAgIGN1cnJlbnRfdm9jYWIgPSB7bmFtZTogJycsIGRlc2NyaXB0aW9uOiAnJ307XG5cbiAgICBjdXJyZW50Vm9jYWI6IFZvY2FidWxhcnk7XG5cbiAgICBjb25zdHJ1Y3RvcigpXG4gICAgeyB9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB9XG4gICAgdm9jYWJDaGFuZ2Uodm9jYWI6IFZvY2FidWxhcnkpe1xuICAgICAgICB0aGlzLmN1cnJlbnRWb2NhYiA9IHZvY2FiO1xuICAgIH1cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB9XG59XG4iXX0=