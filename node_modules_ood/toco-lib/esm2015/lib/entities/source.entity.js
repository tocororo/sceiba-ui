/**
 * @fileoverview added by tsickle
 * Generated from: lib/entities/source.entity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 *   Copyright (c) 2020 Universidad de Pinar del Río "Hermanos Saíz Montes de Oca"
 *   All rights reserved.
 */
import { Entity, EntityBase } from './common';
import { Organization } from './organization.entity';
import { UserProfile } from './person.entity';
/** @type {?} */
export const SourceSystems = {
    OJS: { label: 'Open Journal System', value: 'OJS' },
    CMS: { label: 'Content Management System (Wordpress, Joomla, Drupal, etc)', value: 'CMS' },
    DSPACE: { label: 'Dspace', value: 'DSPACE' },
    OTHER: { label: 'Otro', value: 'OTHER' },
};
/** @type {?} */
export const SourceTypes = {
    JOURNAL: { label: 'Revista Científica', value: 'JOURNAL' },
    SERIAL: { label: 'Publicación Seriada', value: 'SERIAL' },
    STUDENT: { label: 'Revista Científico Estudiantil', value: 'STUDENT' },
    POPULARIZATION: { label: 'Revista de Divulgación', value: 'POPULARIZATION' },
    REPOSITORY: { label: 'Repositorio Institucional', value: 'REPOSITORY' },
    WEBSITE: { label: 'Sitio Web', value: 'WEBSITE' },
    OTHER: { label: 'Otro', value: 'OTHER' },
};
/** @type {?} */
export const SourceOrganizationRole = {
    MAIN: { label: 'Principal', value: 'MAIN' },
    COLABORATOR: { label: 'Colaborador', value: 'COLABORATOR' }
};
/** @type {?} */
export const SourcePersonRole = {
    ADMINISTRATOR: { label: 'Administrador', value: 'ADMINISTRATOR' },
    JOURNALMANAGER: { label: 'Gestor de Revista', value: 'JOURNALMANAGER' },
    AUTHOR: { label: 'Autor', value: 'AUTHOR' },
    EDITOR: { label: 'Editor', value: 'EDITOR' },
    SECTIONEDITOR: { label: 'Editor de Sección', value: 'SECTIONEDITOR' },
    REVIEWER: { label: 'Revisor', value: 'REVIEWER' },
    COPYEDITOR: { label: 'Editor de Copias', value: 'COPYEDITOR' },
    LAYOUTEDITOR: { label: 'Editor de Formato', value: 'LAYOUTEDITOR' },
    PROOFREADER: { label: 'Corrector de Pruebas', value: 'PROOFREADER' },
    READER: { label: 'Lector', value: 'READER' }
};
/** @type {?} */
export const SourceStatus = {
    APPROVED: { label: 'Aprobado', value: 'APPROVED' },
    TO_REVIEW: { label: 'En revision', value: 'TO_REVIEW' },
    UNOFFICIAL: { label: 'Incluido Extraoficialmente', value: 'UNOFFICIAL' }
};
export class SourceOrganization extends Organization {
    constructor() {
        super(...arguments);
        this.role = '';
    }
}
if (false) {
    /** @type {?} */
    SourceOrganization.prototype.role;
}
export class SourceClasification extends EntityBase {
    constructor() {
        super(...arguments);
        this.id = '';
        this.description = '';
        this.vocabulary = '';
        this.data = new Object();
    }
}
if (false) {
    /** @type {?} */
    SourceClasification.prototype.id;
    /** @type {?} */
    SourceClasification.prototype.description;
    /** @type {?} */
    SourceClasification.prototype.vocabulary;
    /** @type {?} */
    SourceClasification.prototype.data;
}
export class SavingInfoSchema extends EntityBase {
    constructor() {
        super(...arguments);
        this.user_id = '';
        this.comment = '';
    }
}
if (false) {
    /** @type {?} */
    SavingInfoSchema.prototype.user_id;
    /** @type {?} */
    SavingInfoSchema.prototype.comment;
}
export class SourceData extends Entity {
    constructor() {
        super(...arguments);
        this.name = '';
        this.title = '';
        this.description = '';
        // term_sources ?: Array<TermSource> = new Array<TermSource>();
        this.oaiurl = '';
        this.source_system = '';
        this.source_type = '';
        this.source_status = '';
        this.organizations = new Array();
        this.classifications = new Array();
        this._save_info = new SavingInfoSchema();
        this.reviewed = false;
        // public deepcopy(data: any, exclude: string[] = []): void {
        //   if (data['organizations'] && data['organizations'].length > 0){
        //     for (let index = 0; index < data['organizations'].length; index++) {
        //       const element = data['organizations'][index];
        //       this.organizations.push(new SourceOrganization());
        //     }
        //   }
        //   if (data['classifications'] && data['classifications'].length > 0){
        //     for (let index = 0; index < data['classifications'].length; index++) {
        //       const element = data['classifications'][index];
        //       this.classifications.push(new SourceClasification());
        //     }
        //   }
        //   super.deepcopy(data, exclude);
        // }
    }
}
if (false) {
    /** @type {?} */
    SourceData.prototype.name;
    /** @type {?} */
    SourceData.prototype.title;
    /** @type {?} */
    SourceData.prototype.description;
    /** @type {?} */
    SourceData.prototype.oaiurl;
    /** @type {?} */
    SourceData.prototype.source_system;
    /** @type {?} */
    SourceData.prototype.source_type;
    /** @type {?} */
    SourceData.prototype.source_status;
    /** @type {?} */
    SourceData.prototype.organizations;
    /** @type {?} */
    SourceData.prototype.classifications;
    /** @type {?} */
    SourceData.prototype._save_info;
    /** @type {?} */
    SourceData.prototype.reviewed;
    /** @type {?} */
    SourceData.prototype.versions;
}
// export class TermSource extends EntityBase {
//     term_id = '';
//     source_id = '';
//     data =  new Object();
//     term ?: Term  = null;
// }
export class SourceVersion extends Entity {
    constructor() {
        super(...arguments);
        this.user_id = '';
        this.source_uuid = '';
        this.comment = '';
        this.created_at = new Date();
        this.is_current = false;
        this.reviewed = false;
        this.data = new SourceData();
        this.userprofile = new UserProfile();
    }
}
if (false) {
    /** @type {?} */
    SourceVersion.prototype.user_id;
    /** @type {?} */
    SourceVersion.prototype.source_uuid;
    /** @type {?} */
    SourceVersion.prototype.comment;
    /** @type {?} */
    SourceVersion.prototype.created_at;
    /** @type {?} */
    SourceVersion.prototype.is_current;
    /** @type {?} */
    SourceVersion.prototype.reviewed;
    /** @type {?} */
    SourceVersion.prototype.data;
    /** @type {?} */
    SourceVersion.prototype.userprofile;
}
export class Source extends Entity {
    constructor() {
        super(...arguments);
        this.uuid = '';
        this.name = '';
        this.clasifications = new Array(0);
        this.organizations = new Array();
        this.aliases = new Array();
        this.source_type = '';
        this.source_status = '';
        this.version_to_review = false;
        this.versions = new Array();
        this.data = new SourceData();
    }
}
if (false) {
    /** @type {?} */
    Source.prototype.uuid;
    /** @type {?} */
    Source.prototype.name;
    /** @type {?} */
    Source.prototype.clasifications;
    /** @type {?} */
    Source.prototype.organizations;
    /** @type {?} */
    Source.prototype.aliases;
    /** @type {?} */
    Source.prototype.source_type;
    /** @type {?} */
    Source.prototype.source_status;
    /** @type {?} */
    Source.prototype.version_to_review;
    /** @type {?} */
    Source.prototype.versions;
    /** @type {?} */
    Source.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,