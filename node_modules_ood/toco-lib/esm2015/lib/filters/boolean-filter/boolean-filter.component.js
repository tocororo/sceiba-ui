/**
 * @fileoverview added by tsickle
 * Generated from: lib/filters/boolean-filter/boolean-filter.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FiltersService } from '../filters.service';
import { FilterContainerService } from '../filter-container.service';
export class BooleanFilterComponent {
    /**
     * @param {?} filterService
     * @param {?} filterContainerService
     */
    constructor(filterService, filterContainerService) {
        this.filterService = filterService;
        this.filterContainerService = filterContainerService;
        this.operator = true;
        this.direction = 'column';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.operator = this.data.value;
        this.operator_name = this.data.name[0];
        if (this.data.direction) {
            this.direction = 'row';
            this.classDireccion = '-horizontal';
        }
    }
    /**
     * @return {?}
     */
    remove_component() {
        this.filterService.deleteParameter(this.data.field);
        this.filterContainerService.filterDeleted(this.data.index);
    }
    /**
     * @return {?}
     */
    change_operator_name() {
        this.operator ? this.operator_name = this.data.name[1] : this.operator_name = this.data.name[0];
        /** @type {?} */
        let value = this.operator ? 'OR' : 'AND';
        this.filterService.changeFilter(this.data.field, value);
    }
    /**
     * @return {?}
     */
    changeInterruptor() {
        this.operator = !this.operator;
        this.change_operator_name();
    }
}
BooleanFilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-boolean-filter',
                template: "<!-- <mat-slide-toggle [checked]=\"operator\" [(ngModel)]=\"operator\" (click)=\"change_operator_name()\">{{operator_name}}</mat-slide-toggle>\n\n<div class=\"interruptor-background\">\n    <div class=\"interruptor-selector-down\"></div>\n</div>\n<br> -->\n<div fxLayout=\"{{direction}}\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n    <label>{{data.name[0]}}</label>\n    <div class=\"mat-interruptor-background{{classDireccion}}\">\n        <div *ngIf=\"!operator;then content else other_content\"></div>\n        <ng-template #content>\n            <div class=\"mat-interruptor-selector-up{{classDireccion}}\" (click)=\"changeInterruptor()\"></div>\n        </ng-template>\n        <ng-template #other_content>\n            <div class=\"mat-interruptor-selector-down{{classDireccion}}\" (click)=\"changeInterruptor()\"></div>\n        </ng-template>\n    </div>\n    <label>{{data.name[1]}}</label>\n</div>",
                styles: [".interruptor-background{width:1.01em;height:2.3em;border:.1em solid #000;border-radius:1em;position:relative;display:flex;flex-direction:row;justify-content:center;background:0 0;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.interruptor-selector-down,.interruptor-selector-up{width:.9em;height:.9em;border-radius:50%;position:absolute;left:.07em;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.interruptor-selector-up{top:.05em}.interruptor-selector-down{bottom:.05em}.mat-interruptor-background,.mat-interruptor-background-horizontal{width:.875em;height:2.3em;background-color:rgba(100,97,96,.5);border-radius:1em;position:relative;display:flex;flex-direction:row;justify-content:center;border:transparent}.mat-interruptor-background-horizontal{height:.875em;width:2.3em}.mat-interruptor-selector-down,.mat-interruptor-selector-down-horizontal,.mat-interruptor-selector-up,.mat-interruptor-selector-up-horizontal{width:1.3em;height:1.3em;border-radius:50%;position:absolute;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.mat-interruptor-selector-up{top:-.1em}.mat-interruptor-selector-down{bottom:-.1em}.mat-interruptor-selector-up-horizontal{left:-.1em;top:-.22em}.mat-interruptor-selector-down-horizontal{right:-.1em;top:-.22em}.mat-interruptor-selector-down-horizontal:hover,.mat-interruptor-selector-down:hover,.mat-interruptor-selector-up-horizontal:hover,.mat-interruptor-selector-up:hover{cursor:pointer}.mat-interruptor-selector-down-horizontal:active,.mat-interruptor-selector-down:active,.mat-interruptor-selector-up-horizontal:active,.mat-interruptor-selector-up:active{cursor:-webkit-grabbing;cursor:grabbing;transition-duration:1s;box-shadow:0 0 2px 8px rgba(248,55,33,.26)}.mat-interruptor-selector-up:active{transform:translate3d(0,16px,0)}.interruptor-selector-down:active{transform:translate3d(0,0,16px)}.mat-interruptor-selector-up-horizontal:active{transform:translate3d(16px,0,0)}.mat-interruptor-selector-down-horizontal:active{transform:translate3d(0,0,0)}"]
            }] }
];
/** @nocollapse */
BooleanFilterComponent.ctorParameters = () => [
    { type: FiltersService },
    { type: FilterContainerService }
];
BooleanFilterComponent.propDecorators = {
    data: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BooleanFilterComponent.prototype.data;
    /** @type {?} */
    BooleanFilterComponent.prototype.operator;
    /** @type {?} */
    BooleanFilterComponent.prototype.operator_name;
    /** @type {?} */
    BooleanFilterComponent.prototype.direction;
    /** @type {?} */
    BooleanFilterComponent.prototype.classDireccion;
    /**
     * @type {?}
     * @private
     */
    BooleanFilterComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    BooleanFilterComponent.prototype.filterContainerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vbGVhbi1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdG9jby1saWIvIiwic291cmNlcyI6WyJsaWIvZmlsdGVycy9ib29sZWFuLWZpbHRlci9ib29sZWFuLWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFPckUsTUFBTSxPQUFPLHNCQUFzQjs7Ozs7SUFNL0IsWUFBb0IsYUFBOEIsRUFDdEMsc0JBQThDO1FBRHRDLGtCQUFhLEdBQWIsYUFBYSxDQUFpQjtRQUN0QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBTDFELGFBQVEsR0FBWSxJQUFJLENBQUM7UUFFekIsY0FBUyxHQUFVLFFBQVEsQ0FBQztJQUdrQyxDQUFDOzs7O0lBRS9ELFFBQVE7UUFDSixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQztZQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQztTQUN2QztJQUNMLENBQUM7Ozs7SUFDRCxnQkFBZ0I7UUFDWixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUM5RCxDQUFDOzs7O0lBRUQsb0JBQW9CO1FBQ2hCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQzVGLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFBLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUs7UUFDdkMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFFLENBQUM7SUFDN0QsQ0FBQzs7OztJQUVELGlCQUFpQjtRQUNiLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7OztZQXBDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsbzZCQUE4Qzs7YUFFakQ7Ozs7WUFQUSxjQUFjO1lBQ2Qsc0JBQXNCOzs7bUJBUTFCLEtBQUs7Ozs7SUFBTixzQ0FBbUI7O0lBQ25CLDBDQUF5Qjs7SUFDekIsK0NBQXNCOztJQUN0QiwyQ0FBNEI7O0lBQzVCLGdEQUFzQjs7Ozs7SUFDViwrQ0FBc0M7Ozs7O0lBQzlDLHdEQUFzRCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuLi9maWx0ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEZpbHRlcnNTZXJ2aWNlIH0gZnJvbSAnLi4vZmlsdGVycy5zZXJ2aWNlJztcbmltcG9ydCB7IEZpbHRlckNvbnRhaW5lclNlcnZpY2UgfSBmcm9tICcuLi9maWx0ZXItY29udGFpbmVyLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RvY28tYm9vbGVhbi1maWx0ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ib29sZWFuLWZpbHRlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYm9vbGVhbi1maWx0ZXIuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBCb29sZWFuRmlsdGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0ICwgRmlsdGVyQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBkYXRhOiBhbnk7XG4gICAgb3BlcmF0b3I6IGJvb2xlYW4gPSB0cnVlO1xuICAgIG9wZXJhdG9yX25hbWU6IHN0cmluZztcbiAgICBkaXJlY3Rpb246c3RyaW5nID0gJ2NvbHVtbic7XG4gICAgY2xhc3NEaXJlY2Npb246c3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZmlsdGVyU2VydmljZSA6IEZpbHRlcnNTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGZpbHRlckNvbnRhaW5lclNlcnZpY2U6IEZpbHRlckNvbnRhaW5lclNlcnZpY2UpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSB0aGlzLmRhdGEudmFsdWU7XG4gICAgICAgIHRoaXMub3BlcmF0b3JfbmFtZSA9IHRoaXMuZGF0YS5uYW1lWzBdO1xuICAgICAgICBpZih0aGlzLmRhdGEuZGlyZWN0aW9uKXtcbiAgICAgICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ3Jvdyc7XG4gICAgICAgICAgICB0aGlzLmNsYXNzRGlyZWNjaW9uID0gJy1ob3Jpem9udGFsJztcbiAgICAgICAgfSBcbiAgICB9XG4gICAgcmVtb3ZlX2NvbXBvbmVudCgpe1xuICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UuZGVsZXRlUGFyYW1ldGVyKHRoaXMuZGF0YS5maWVsZCk7XG4gICAgICAgIHRoaXMuZmlsdGVyQ29udGFpbmVyU2VydmljZS5maWx0ZXJEZWxldGVkKHRoaXMuZGF0YS5pbmRleClcbiAgICB9XG4gICAgXG4gICAgY2hhbmdlX29wZXJhdG9yX25hbWUoKXtcbiAgICAgICAgdGhpcy5vcGVyYXRvciA/IHRoaXMub3BlcmF0b3JfbmFtZSA9IHRoaXMuZGF0YS5uYW1lWzFdIDogdGhpcy5vcGVyYXRvcl9uYW1lID0gdGhpcy5kYXRhLm5hbWVbMF07XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMub3BlcmF0b3I/ICdPUicgOiAnQU5EJztcbiAgICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlLmNoYW5nZUZpbHRlcih0aGlzLmRhdGEuZmllbGQsIHZhbHVlICk7XG4gICAgfVxuICAgIFxuICAgIGNoYW5nZUludGVycnVwdG9yKCl7XG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSAhdGhpcy5vcGVyYXRvcjtcbiAgICAgICAgdGhpcy5jaGFuZ2Vfb3BlcmF0b3JfbmFtZSgpO1xuICAgIH1cbn1cbiJdfQ==