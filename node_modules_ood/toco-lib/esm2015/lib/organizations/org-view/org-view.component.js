/**
 * @fileoverview added by tsickle
 * Generated from: lib/organizations/org-view/org-view.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { Organization } from '../../entities/public-api';
import { OrgViewAccordionType } from './org-view-accordion/org-view-accordion.component';
/**
 * @record
 */
export function RelationshipLink() { }
if (false) {
    /** @type {?} */
    RelationshipLink.prototype.url;
    /** @type {?} */
    RelationshipLink.prototype.name;
}
/**
 * @record
 */
export function RelationshipsValue() { }
if (false) {
    /** @type {?} */
    RelationshipsValue.prototype.links;
}
export class OrgViewComponent {
    constructor() {
        this.showContent = true;
        this.orgViewAccordionType = OrgViewAccordionType;
        this.org = undefined;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // si se recibe un objeto que no tiene todos los campos.
        /** @type {?} */
        let org_full = new Organization();
        org_full.deepcopy(this.org);
        this.org = org_full;
        this._panelsTitle_Relationships = ['Organizaciones Padres', 'Organizaciones Hijas', 'Organizaciones Relacionadas'];
        this._relationshipsValue = this._createRelationshipsValue();
        this._addressesValue = this._createAddressesValue(); /* This initialization is first than the `_panelsTitle_Addresses` initialization. */
        // this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
        this._panelsTitle_Addresses = this._createPanelsTitle_Addresses();
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        this.ngOnInit();
    }
    /**
     * Creates a generic array of panels title.
     * Usage example:
     * this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
     * @private
     * @param {?} orgViewAccordionType The `OrgViewAccordionComponent` type.
     * @param {?} panelsTitleCount Amount of panels title.
     * @return {?}
     */
    _createPanelsTitle_Generic(orgViewAccordionType, panelsTitleCount) {
        /** @type {?} */
        let panelsTitle = [];
        /* Initializae the `panelsTitle` array. */
        for (let i = 0; i < panelsTitleCount;) {
            panelsTitle.push(`${orgViewAccordionType} (${++i}) of (${panelsTitleCount})`);
        }
        return panelsTitle;
    }
    /**
     * @private
     * @return {?}
     */
    _createPanelsTitle_Addresses() {
        /** @type {?} */
        let panelsTitle = [];
        /** @type {?} */
        let panelsTitleCount = this._addressesValue.length;
        /* Initializae the `panelsTitle` array. */
        for (let i = 0; i < panelsTitleCount; i++) {
            panelsTitle.push(`${this._addressesValue[i].city} | ${this._addressesValue[i].country} ${(this._addressesValue[i].primary) ? '(Principal)' : ''}`);
        }
        return panelsTitle;
    }
    /**
     * @private
     * @return {?}
     */
    _createRelationshipsValue() {
        /* The positions represent:
             * pos = 0 --> Organizaciones Padres
             * pos = 1 --> Organizaciones Hijas
             * pos = 2 --> Organizaciones Relacionadas */
        /** @type {?} */
        let result = [];
        /** @type {?} */
        let pos = -1;
        /** @type {?} */
        let item;
        for (item of this._panelsTitle_Relationships) {
            result.push({
                'links': []
            });
        }
        if (this.org.relationships) {
            for (item of this.org.relationships) {
                switch (item.type) {
                    case 'parent':
                        {
                            pos = 0;
                            break;
                        }
                    case 'child':
                        {
                            pos = 1;
                            break;
                        }
                    default: /* 'related' */
                        {
                            pos = 2;
                            break;
                        }
                }
                result[pos].links.push({
                    // 'url': `${ item.id }/view`,
                    'url': '/' + item.id + '/view',
                    'name': item.label
                });
            }
        }
        return result;
    }
    /**
     * Returns an array of addresses ordered by the `primary` field of its addresses,
     * the true values are first than the false values.
     * @private
     * @return {?}
     */
    _createAddressesValue() {
        /** @type {?} */
        let result = [];
        /** @type {?} */
        let noPrimary = [];
        for (let item of this.org.addresses) {
            if (item.primary) {
                result.push(item);
            }
            else {
                noPrimary.push(item);
            }
        }
        return result.concat(noPrimary);
    }
    /**
     * @return {?}
     */
    get getPanelsTitle_Relationships() {
        return this._panelsTitle_Relationships;
    }
    /**
     * @return {?}
     */
    get getValue_Relationships() {
        return this._relationshipsValue;
    }
    /**
     * @return {?}
     */
    get getPanelsTitle_Addresses() {
        return this._panelsTitle_Addresses;
    }
    /**
     * @return {?}
     */
    get getValue_Addresses() {
        return this._addressesValue;
    }
}
OrgViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-org-view',
                template: "\n<mat-card *ngIf=\"org\" class=\"container-panel-mat-card\" [attr.aria-label]=\"'Muestra la organizaci\u00F3n seleccionada'\">\n  <mat-card-header>\n\n    <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n    <mat-card-title class=\"title-padding\">{{ org.name }}</mat-card-title>\n    <mat-card-subtitle class=\"title-padding\">SceibaOrgID: {{ org.id }}</mat-card-subtitle>\n    <mat-card-subtitle *ngIf=\"org.status\" class=\"cursor-default title-padding\">\n      Estatus de la organizaci\u00F3n: {{ org.status }}\n    </mat-card-subtitle>\n\n  </mat-card-header>\n\n  <mat-card-content *ngIf=\"showContent\">\n\n    <static-table *ngIf=\"org.identifiers && org.identifiers.length\" [desc]=\"'Lista de los identificadores de la organizaci\u00F3n'\" [value]=\"org.identifiers\"\n      [columnsObjectProperty]=\"['idtype', 'value']\"\n      [columnsHeaderText]=\"['Identifier type', 'Identifier value']\"\n    >\n    </static-table>\n    <static-chips *ngIf=\"org.aliases && org.aliases.length\" [desc]=\"'Lista de otros nombres con los que se conoce la organizaci\u00F3n'\" [value]=\"org.aliases\"></static-chips>\n    <static-chips *ngIf=\"org.acronyms && org.acronyms.length\" [desc]=\"'Lista de los acr\u00F3nimos con que se conoce la organizaci\u00F3n'\" [value]=\"org.acronyms\"></static-chips>\n    <static-chips *ngIf=\"org.types && org.types.length\" [desc]=\"'Lista de los tipos que describen la organizaci\u00F3n'\" [value]=\"org.types\"></static-chips>\n    <static-text *ngIf=\"org.wikipedia_url\" [desc]=\"'URL de la p\u00E1gina de Wikipedia de la organizaci\u00F3n'\" [value]=\"org.wikipedia_url\"></static-text>\n    <static-text *ngIf=\"org.redirect\" [desc]=\"'URL de la p\u00E1gina originaria de la organizaci\u00F3n'\" [value]=\"org.redirect.properties.value\"></static-text>\n    <static-text *ngIf=\"org.email_address\" [desc]=\"'Correo electr\u00F3nico de contacto de la organizaci\u00F3n'\" [value]=\"org.email_address\"></static-text>\n    <!-- <static-chips *ngIf=\"org.ip_addresses && org.ip_addresses.length\" [desc]=\"'Lista de direcciones IP conocidas que pertenecen a la organizaci\u00F3n'\" [value]=\"org.ip_addresses\"></static-chips> -->\n    <static-text *ngIf=\"org.established\" [desc]=\"'A\u00F1o de fundada la organizaci\u00F3n'\" [value]=\"org.established\"></static-text>\n    <static-text *ngIf=\"org.onei_registry\" [desc]=\"'N\u00FAmero de registro en la ONEI'\" [value]=\"org.onei_registry\"></static-text>\n    <static-chips *ngIf=\"org.links && org.links.length\" [desc]=\"'Lista de los enlaces conocidos de la organizaci\u00F3n'\" [value]=\"org.links\"></static-chips>\n    <static-table *ngIf=\"org.labels && org.labels.length\" [desc]=\"'Nombre de la organizaci\u00F3n en diferentes lenguajes'\" [value]=\"org.labels\"\n      [columnsObjectProperty]=\"['label', 'iso639']\"\n      [columnsHeaderText]=\"['Institute name in a language variant', 'ISO-639-1 language code']\"\n    >\n    </static-table>\n    <toco-org-view-accordion *ngIf=\"org.relationships && org.relationships.length\" [desc]=\"'Relaciones con otras organizaciones'\" [value]=\"getValue_Relationships\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Relationships\"\n      [panelsTitle] = \"getPanelsTitle_Relationships\"\n    >\n    </toco-org-view-accordion>\n    <toco-org-view-accordion *ngIf=\"org.addresses && org.addresses.length\" [desc]=\"'Direcciones conocidas de la organizaci\u00F3n'\" [value]=\"getValue_Addresses\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Addresses\"\n      [panelsTitle] = \"getPanelsTitle_Addresses\"\n    >\n    </toco-org-view-accordion>\n\n  </mat-card-content>\n</mat-card>\n",
                styles: [".cursor-default{cursor:default}.title-padding{padding:0 0 0 .1em}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover}.form-container{display:flex;flex-direction:column;justify-content:start;width:40%}"]
            }] }
];
/** @nocollapse */
OrgViewComponent.ctorParameters = () => [];
OrgViewComponent.propDecorators = {
    org: [{ type: Input }],
    showContent: [{ type: Input }]
};
if (false) {
    /**
     * Represents the `OrgViewAccordionType` enum for internal use.
     * @type {?}
     */
    OrgViewComponent.prototype.orgViewAccordionType;
    /**
     * Represents the current organization.
     * @type {?}
     */
    OrgViewComponent.prototype.org;
    /** @type {?} */
    OrgViewComponent.prototype.showContent;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._panelsTitle_Relationships;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._relationshipsValue;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._panelsTitle_Addresses;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._addressesValue;
}
//# sourceMappingURL=data:application/json;base64,