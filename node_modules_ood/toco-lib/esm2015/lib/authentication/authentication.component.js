/**
 * @fileoverview added by tsickle
 * Generated from: lib/authentication/authentication.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from "@angular/core";
import { Router } from "@angular/router";
import { timer } from "rxjs";
import { TranslateService } from "@ngx-translate/core";
import { JwksValidationHandler, OAuthService, OAuthStorage } from "angular-oauth2-oidc";
import { Environment } from "../core/env";
import { UserProfileService } from "../backend/user-profile.service";
import { UserProfile } from "../entities/person.entity";
import { OauthAuthenticationService } from "./authentication.service";
/**
 * @record
 */
export function OauthInfo() { }
if (false) {
    /** @type {?} */
    OauthInfo.prototype.serverHost;
    /** @type {?} */
    OauthInfo.prototype.loginUrl;
    /** @type {?} */
    OauthInfo.prototype.tokenEndpoint;
    /** @type {?} */
    OauthInfo.prototype.userInfoEndpoint;
    /** @type {?} */
    OauthInfo.prototype.appHost;
    /** @type {?} */
    OauthInfo.prototype.appName;
    /** @type {?} */
    OauthInfo.prototype.oauthRedirectUri;
    /** @type {?} */
    OauthInfo.prototype.oauthClientId;
    /** @type {?} */
    OauthInfo.prototype.oauthScope;
}
/**
 * Represents a component used to authenticate.
 *
 * In order to use this component with the correct i18n, you must include
 * (in your i18n translate files that are in the folder `assets\i18n`)
 * a translation key of name "TOCO_AUTHENTICATION" that contains
 * an object as value with the translation needed by this component.
 *
 * In the case of `es.json` file, you must include the following translation key:
 * "TOCO_AUTHENTICATION": {
 * "MAT_CARD_TITLE_AUTH": "AutenticaciÃ³n con",
 * "AUTENTICARSE": "Autenticarse",
 * "H1_HOLA": "Hola",
 * "BUTTON_SALIR": "Salir"
 * }
 *
 * In the case of `en.json` file, you must include the following translation key:
 * "TOCO_AUTHENTICATION": {
 * "MAT_CARD_TITLE_AUTH": "Authentication with",
 * "AUTENTICARSE": "Log in",
 * "H1_HOLA": "Hello,",
 * "BUTTON_SALIR": "Exit"
 * }
 *
 * If you have another language, then you have another `*.json` file,
 * and you must include the "TOCO_AUTHENTICATION" translation key with the correct translation values.
 */
export class AuthenticationComponent {
    /**
     * @param {?} userProfileService
     * @param {?} env
     * @param {?} router
     * @param {?} oauthService
     * @param {?} oauthStorage
     * @param {?} authenticationService
     * @param {?} _transServ
     */
    constructor(userProfileService, env, router, oauthService, oauthStorage, authenticationService, _transServ) {
        this.userProfileService = userProfileService;
        this.env = env;
        this.router = router;
        this.oauthService = oauthService;
        this.oauthStorage = oauthStorage;
        this.authenticationService = authenticationService;
        this._transServ = _transServ;
        this.timerAuthenticateSuscription = null;
        this.timerAuthenticateObserver = {
            next: (/**
             * @param {?} _
             * @return {?}
             */
            (_) => {
                // console.log('next');
                // this.oauthService.setupAutomaticSilentRefresh();
                if (this.oauthStorage.getItem("access_token")) {
                    this.authenticationService.getUserInfo().subscribe((/**
                     * @param {?} response
                     * @return {?}
                     */
                    (response) => {
                        this.oauthStorage.setItem("user", JSON.stringify(response));
                        this.authenticationService.login(response);
                    }), (/**
                     * @param {?} error
                     * @return {?}
                     */
                    error => console.log(error)), (/**
                     * @return {?}
                     */
                    () => { }));
                    // this.authenticationService.logguedChange(true);
                }
            }),
            error: (/**
             * @param {?} err
             * @return {?}
             */
            (err) => {
                console.log("The observable got an error notification: " + err + ".");
            }),
            complete: (/**
             * @return {?}
             */
            () => {
                console.log("The observable got a complete notification.");
            }),
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.isButtonLogin == undefined)
            this.isButtonLogin = false;
        if (this.isButtonLoginIcon == undefined)
            this.isButtonLoginIcon = false;
        if (this.isButtonLoginText == undefined) {
            this._transServ.get('TOCO_AUTHENTICATION.AUTENTICARSE').subscribe((/**
             * @param {?} res
             * @return {?}
             */
            (res) => {
                this.isButtonLoginText = res;
            }));
        }
        if (this.oauthInfo.loginUrl == undefined || this.oauthInfo.loginUrl == '') {
            this.oauthInfo.loginUrl = this.oauthInfo.serverHost + "oauth/authorize";
        }
        if (this.oauthInfo.tokenEndpoint == undefined || this.oauthInfo.tokenEndpoint == '') {
            this.oauthInfo.tokenEndpoint = this.oauthInfo.serverHost + "oauth/token";
        }
        this.configure();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.timerAuthenticateSuscription) {
            this.timerAuthenticateSuscription.unsubscribe();
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // this observable is to wait a while for the component to finish loading,
        // because otherwise it fails to notify that the user is authenticated
        this.timerAuthenticateSuscription = timer(0).subscribe(this.timerAuthenticateObserver);
    }
    /**
     * Configurations to authenticate
     * @private
     * @return {?}
     */
    configure() {
        /** @type {?} */
        const authConfig = {
            // Url of the Identity Provider
            //issuer: 'https://sceiba-lab.upr.edu.cu',
            loginUrl: this.oauthInfo.loginUrl,
            tokenEndpoint: this.oauthInfo.tokenEndpoint,
            // URL of the SPA to redirect the user to after login
            redirectUri: this.oauthInfo.oauthRedirectUri,
            // The SPA's id. The SPA is registered with this id at the auth-server
            clientId: this.oauthInfo.oauthClientId,
            oidc: false,
            // silentRefreshRedirectUri: this.oauthInfo.sceibaHost + 'oauth/token',
            // timeoutFactor: 0.75,
            sessionChecksEnabled: true,
            // set the scope for the permissions the client should request
            // The first three are defined by OIDC. The 4th is a usecase-specific one
            scope: this.oauthInfo.oauthScope,
        };
        this.oauthService.configure(authConfig);
        // Store user session in storage
        // this.oauthService.setStorage(this.oauthStorage);
        this.oauthService.tokenValidationHandler = new JwksValidationHandler();
        // Try to login and if a token was received, request user information
        this.oauthService.tryLogin({
            onTokenReceived: (/**
             * @param {?} _
             * @return {?}
             */
            (_) => {
                // gives information about user loggued
                this.authenticationService.userInfoEndpoint = this.oauthInfo.userInfoEndpoint;
                this.authenticationService.getUserInfo().subscribe((/**
                 * @param {?} response
                 * @return {?}
                 */
                (response) => {
                    console.log(response);
                    this.oauthStorage.setItem("user", JSON.stringify(response));
                    this.authenticationService.login(response);
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                error => console.log(error)), (/**
                 * @return {?}
                 */
                () => { }));
            }),
            onLoginError: (/**
             * @param {?} err
             * @return {?}
             */
            (err) => {
                console.log("error in login", err);
            }),
        });
    }
    /**
     * Starts the login flow
     * @return {?}
     */
    login() {
        this.oauthService.initImplicitFlow();
        // this.authenticationService.authBackend = this.authBackend
        // TODO: por que esto aqui, este modulo solo se encarga de la autenticacion y dar la informacion basica del usuario,
        // el perfil es manejado por otro componente
        this.user = new UserProfile();
        this.userProfileService.getUserInfo().subscribe({
            next: (/**
             * @param {?} response
             * @return {?}
             */
            (response) => {
                if (response && response.data && response.data.userprofile) {
                    this.user.deepcopy(response.data.userprofile);
                    this.oauthStorage.setItem("user", this.user.entitystringify());
                }
            }),
            error: (/**
             * @param {?} err
             * @return {?}
             */
            (err) => {
                console.log(err);
            }),
            complete: (/**
             * @return {?}
             */
            () => { }),
        });
    }
    /**
     * Ends the login flow
     * @return {?}
     */
    logoff() {
        this.oauthService.logOut();
        this.authenticationService.logout();
    }
    /**
     * Gives the user's email if the user is authenticated
     * @return {?}
     */
    get name() {
        if (this.oauthStorage.getItem("access_token")) {
            return this.oauthStorage.getItem("email");
        }
        else {
            return null;
        }
    }
}
AuthenticationComponent.decorators = [
    { type: Component, args: [{
                selector: "toco-authentication",
                template: "\n<div *ngIf=\"!isButtonLogin;else template_buttonLogin\" fxLayoutAlign=\"center center\" fxLayout=\"row\">\n    <mat-card fxLayoutAlign=\"center center\" fxLayout=\"column\">\n\n        <mat-card-header>\n            <mat-card-title *ngIf=\"!userName\">{{ 'TOCO_AUTHENTICATION.MAT_CARD_TITLE_AUTH' | translate }}</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content fxLayoutAlign=\"center center\" fxLayout=\"column\">\n            <button *ngIf=\"!userName;else templateName\" mat-raised-button color=\"primary\" style=\"width: 12em\" (click)=\"login()\">\n                <img src=\"https://sceiba-lab.upr.edu.cu/static/images/sceiba-logo-white.png\" alt=\"Sceiba\" width=\"100\" style=\"padding-top: .9em; padding-bottom: .9em\">\n            </button>\n\n            <ng-template #templateName>\n                <h1>{{ 'TOCO_AUTHENTICATION.H1_HOLA' | translate }} {{ userName }}</h1>\n                <button mat-raised-button color=\"primary\" style=\"width: 12em\" (click)=\"logoff()\">\n                    {{ 'TOCO_AUTHENTICATION.BUTTON_SALIR' | translate }}\n                </button>\n            </ng-template>\n\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<ng-template #template_buttonLogin>\n    <button *ngIf=\"isButtonLoginIcon\" mat-icon-button (click)=\"login()\" matTooltip=\"{{ isButtonLoginText }}\">\n        <mat-icon>lock_open</mat-icon>\n    </button>\n    <button *ngIf=\"!isButtonLoginIcon\" mat-raised-button color=\"primary\" (click)=\"login()\">\n        {{ isButtonLoginText }}\n        <mat-icon class=\"mat-18\">lock_open</mat-icon>\n    </button>\n</ng-template>\n",
                styles: [".card-width{width:25%;min-width:15em}"]
            }] }
];
/** @nocollapse */
AuthenticationComponent.ctorParameters = () => [
    { type: UserProfileService },
    { type: Environment },
    { type: Router },
    { type: OAuthService },
    { type: OAuthStorage },
    { type: OauthAuthenticationService },
    { type: TranslateService }
];
AuthenticationComponent.propDecorators = {
    isButtonLogin: [{ type: Input }],
    isButtonLoginIcon: [{ type: Input }],
    isButtonLoginText: [{ type: Input }],
    oauthInfo: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    AuthenticationComponent.prototype.isButtonLogin;
    /** @type {?} */
    AuthenticationComponent.prototype.isButtonLoginIcon;
    /** @type {?} */
    AuthenticationComponent.prototype.isButtonLoginText;
    /** @type {?} */
    AuthenticationComponent.prototype.oauthInfo;
    /** @type {?} */
    AuthenticationComponent.prototype.user;
    /** @type {?} */
    AuthenticationComponent.prototype.userName;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.timerAuthenticateSuscription;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.timerAuthenticateObserver;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.userProfileService;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.env;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.oauthService;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.oauthStorage;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype.authenticationService;
    /**
     * @type {?}
     * @private
     */
    AuthenticationComponent.prototype._transServ;
}
//# sourceMappingURL=data:application/json;base64,