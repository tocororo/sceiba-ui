/**
 * @fileoverview added by tsickle
 * Generated from: lib/core/body/body.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class BodyComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnChanges() {
        this.doReplace();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.body) {
            this.doReplace();
        }
    }
    /**
     * @return {?}
     */
    doReplace() {
        /** @type {?} */
        var find = "/public/inline-images/";
        /** @type {?} */
        var replace = "/public/inline-images/";
        /** @type {?} */
        var str = this.body.replace(find, replace);
        this.processed = str;
    }
}
BodyComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-body',
                template: "\n<div class=\"container mat-body\">\n  <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"body\"> </div>\n</div>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
BodyComponent.ctorParameters = () => [];
BodyComponent.propDecorators = {
    body: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BodyComponent.prototype.body;
    /** @type {?} */
    BodyComponent.prototype.processed;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9keS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2JvZHkvYm9keS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU96RCxNQUFNLE9BQU8sYUFBYTtJQU90QixnQkFDRSxDQUFDOzs7O0lBRUgsV0FBVztRQUNQLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsUUFBUTtRQUNKLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNYLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUNwQjtJQUNMLENBQUM7Ozs7SUFFRCxTQUFTOztZQUNELElBQUksR0FBRyx3QkFBd0I7O1lBQy9CLE9BQU8sR0FBRyx3QkFBd0I7O1lBQ2xDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1FBQzFDLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO0lBQ3pCLENBQUM7OztZQTlCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLGtKQUFvQzs7YUFFdkM7Ozs7O21CQUdJLEtBQUs7Ozs7SUFBTiw2QkFDYTs7SUFFYixrQ0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RvY28tYm9keScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2JvZHkuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2JvZHkuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBCb2R5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpXG4gICAgYm9keTogc3RyaW5nO1xuXG4gICAgcHJvY2Vzc2VkOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcigpXG4gICAgeyB9XG5cbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kb1JlcGxhY2UoKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuYm9keSkge1xuICAgICAgICAgICAgdGhpcy5kb1JlcGxhY2UoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRvUmVwbGFjZSgpIHtcbiAgICAgICAgdmFyIGZpbmQgPSBcIi9wdWJsaWMvaW5saW5lLWltYWdlcy9cIjtcbiAgICAgICAgdmFyIHJlcGxhY2UgPSBcIi9wdWJsaWMvaW5saW5lLWltYWdlcy9cIjtcbiAgICAgICAgdmFyIHN0ciA9IHRoaXMuYm9keS5yZXBsYWNlKGZpbmQsIHJlcGxhY2UpO1xuICAgICAgICB0aGlzLnByb2Nlc3NlZCA9IHN0cjtcbiAgICB9XG59XG4iXX0=