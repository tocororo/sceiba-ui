/**
 * @fileoverview added by tsickle
 * Generated from: lib/sources/journal-view/journal-view.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 *   Copyright (c) 2020 Universidad de Pinar del Río "Hermanos Saíz Montes de Oca"
 *   All rights reserved.
 */
import { Component, Input } from '@angular/core';
import { MatSnackBar, MatDialog } from '@angular/material';
import { MetadataService, MessageHandler, StatusCode, Environment } from '../../core/public-api';
import { Organization, VocabulariesInmutableNames, JournalVersion } from '../../entities/public-api';
/** @enum {number} */
const JournalDataType = {
    /** is used by default, `Journal` have not that type of data. */
    default: 0,
    title: 1,
    subtitle: 2,
    shortname: 3,
    issnP: 4,
    issnE: 5,
    issnL: 6,
    rnpsP: 7,
    rnpsE: 21,
    url: 8,
    email: 9,
    logo: 10,
    purpose: 11,
    start_year: 12,
    end_year: 13,
    frequency: 14,
    seriadas_cubanas: 15,
    facebook: 16,
    twitter: 17,
    linkedin: 18,
    description: 19,
    term: 20,
    oaiurl: 22,
};
export { JournalDataType };
JournalDataType[JournalDataType.default] = 'default';
JournalDataType[JournalDataType.title] = 'title';
JournalDataType[JournalDataType.subtitle] = 'subtitle';
JournalDataType[JournalDataType.shortname] = 'shortname';
JournalDataType[JournalDataType.issnP] = 'issnP';
JournalDataType[JournalDataType.issnE] = 'issnE';
JournalDataType[JournalDataType.issnL] = 'issnL';
JournalDataType[JournalDataType.rnpsP] = 'rnpsP';
JournalDataType[JournalDataType.rnpsE] = 'rnpsE';
JournalDataType[JournalDataType.url] = 'url';
JournalDataType[JournalDataType.email] = 'email';
JournalDataType[JournalDataType.logo] = 'logo';
JournalDataType[JournalDataType.purpose] = 'purpose';
JournalDataType[JournalDataType.start_year] = 'start_year';
JournalDataType[JournalDataType.end_year] = 'end_year';
JournalDataType[JournalDataType.frequency] = 'frequency';
JournalDataType[JournalDataType.seriadas_cubanas] = 'seriadas_cubanas';
JournalDataType[JournalDataType.facebook] = 'facebook';
JournalDataType[JournalDataType.twitter] = 'twitter';
JournalDataType[JournalDataType.linkedin] = 'linkedin';
JournalDataType[JournalDataType.description] = 'description';
JournalDataType[JournalDataType.term] = 'term';
JournalDataType[JournalDataType.oaiurl] = 'oaiurl';
export class JournalViewComponent {
    /**
     * @param {?} metadata
     * @param {?} env
     * @param {?} _snackBar
     * @param {?} dialog
     */
    constructor(metadata, env, _snackBar, dialog) {
        this.metadata = metadata;
        this.env = env;
        this._snackBar = _snackBar;
        this.dialog = dialog;
        this.topMainOrganization = null;
        /**
         * ************* auxiliary variables ******************
         */
        this.panelOpenState = false;
        this.defaultLogo = this.env.sceibaHost + 'static/favicon.ico';
        /**
         * Inmutables data types of Journal
         */
        this.journalDataType = JournalDataType;
        /**
         * version.is_current = true
         */
        // public currentJournal: JournalVersion;
        this.showVersions = false;
        this.editVersion = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.isDisabledNavigatePrevious = true;
        this.isDisabledNavigateNext = false;
        this.vocabularies = VocabulariesInmutableNames;
        // guardar la cantidad total de versiones
        this.lengthVersion = this.versions.length;
        // guardar la posicion de la version donde este la actual
        this.selectedVersion = this.getSelectedJournalPosition();
        this.SelectJournalVersion();
        this.metadata.setStandardMeta("Revista Científica " + this.editingJournal.data.title, this.editingJournal.data.description, "");
        // if (this.versions){
        //   this.versions.forEach((journalVersion: JournalVersion, index: number) => {
        //     // check if has versions to view and return that position
        //     if (journalVersion.is_current) {
        //         this.currentJournal = new JournalVersion();
        //         this.currentJournal.deepcopy(journalVersion);
        //     }
        //   });
        // }
    }
    /**
     * Changes the selected position to the next one if possible
     * @return {?}
     */
    nextVersion() {
        if (this.selectedVersion < this.lengthVersion - 1) {
            this.isDisabledNavigateNext = false;
            this.isDisabledNavigatePrevious = false;
            this.selectedVersion++;
            this.SelectJournalVersion();
        }
        else {
            this.isDisabledNavigateNext = true;
            /** @type {?} */
            const m = new MessageHandler(this._snackBar);
            m.showMessage(StatusCode.OK, 'No hay más versiones para mostrar');
        }
        if (this.selectedVersion == this.lengthVersion - 1) {
            this.isDisabledNavigateNext = true;
        }
    }
    /**
     * Changes the selected position to the before one if possible
     * @return {?}
     */
    previousVersion() {
        if (this.selectedVersion > 0) {
            this.isDisabledNavigatePrevious = false;
            this.isDisabledNavigateNext = false;
            this.selectedVersion--;
            this.SelectJournalVersion();
        }
        else {
            this.isDisabledNavigatePrevious = true;
            /** @type {?} */
            const m = new MessageHandler(this._snackBar);
            m.showMessage(StatusCode.OK, 'No hay más versiones para mostrar');
        }
        if (this.selectedVersion == 0) {
            this.isDisabledNavigatePrevious = true;
        }
    }
    /**
     * Selects the selected journal as a JournalVersion
     * @return {?}
     */
    SelectJournalVersion() {
        if (this.versions.length >= 0 &&
            this.selectedVersion >= 0 &&
            this.selectedVersion < this.versions.length) {
            // load the selected journal
            /** @type {?} */
            let version = new JournalVersion();
            version.deepcopy(this.versions[this.selectedVersion]);
            this.selectedJournal = version;
            // load if was viewed
            // this.selectedJournalChecked = this.selectedJournal.reviewed;
        }
    }
    /**
     * Returns the position of the unseen version of the journal as JournalVersion
     * @private
     * @return {?}
     */
    getSelectedJournalPosition() {
        /** @type {?} */
        let count = 0;
        this.versions.forEach((/**
         * @param {?} journalVersion
         * @param {?} index
         * @return {?}
         */
        (journalVersion, index) => {
            // check if has versions to view and return that position
            if (journalVersion.reviewed != null && journalVersion.reviewed) {
                count = index;
                return count;
            }
        }));
        return count;
    }
    /**
     * @param {?} version
     * @return {?}
     */
    sourceEditDone(version) {
        this.editVersion = false;
        console.log('AAaAAAAAAAAAAAAAAAAAA');
    }
    /**
     * @return {?}
     */
    toogleShowVersions() {
        this.showVersions = !this.showVersions;
        this.editVersion = false;
    }
}
JournalViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-journal-view',
                template: "<div *ngIf=\"editingJournal != undefined\" fxLayout=\"row wrap\" style=\"margin: 1em\">\n  <!-- navigate buttons -->\n  <mat-toolbar>\n    <mat-toolbar-row fxLayoutGap=\"1em\" fxLayoutAlign=\"end center\">\n      <!-- <mat-slide-toggle\n        (change)=\"editVersion = !editVersion\"\n        color=\"primary\"\n        matTooltip=\"Vista Edicion\"\n    >\n    </mat-slide-toggle>\n\n      <mat-slide-toggle\n        *ngIf=\"!editVersion\"\n        (change)=\"showVersions = !showVersions\"\n        color=\"accent\"\n        matTooltip=\"Ver Revisiones\"\n      >\n      </mat-slide-toggle> -->\n\n      <button\n        *ngIf=\"!editVersion\"\n        mat-icon-button\n        aria-label=\"Editar la Revisi\u00F3n actual\"\n        matTooltip=\"Editar la Revisi\u00F3n actual\"\n        (click)=\"editVersion = !editVersion\"\n      >\n        <mat-icon>edit</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"editVersion\"\n        mat-icon-button\n        aria-label=\"Vista Revisiones\"\n        matTooltip=\"Vista Revisiones\"\n        (click)=\"editVersion = !editVersion\"\n      >\n        <mat-icon>visibility</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"!editVersion && !showVersions\"\n        mat-icon-button\n        aria-label=\"Ver Revisiones\"\n        matTooltip=\"Ver Revisiones\"\n        (click)=\"showVersions = !showVersions\"\n      >\n        <mat-icon>history</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"!editVersion && showVersions\"\n        mat-icon-button\n        aria-label=\"Ocultar Revisiones\"\n        matTooltip=\"Ocultar Revisiones\"\n        (click)=\"showVersions = !showVersions\"\n      >\n        <mat-icon>history</mat-icon>\n      </button>\n\n      <div *ngIf=\"!editVersion && showVersions\">\n        <button\n          mat-icon-button\n          aria-label=\"Previous version\"\n          [disabled]=\"isDisabledNavigatePrevious\"\n          matTooltip=\"Revisi\u00F3n Anterior\"\n          (click)=\"previousVersion()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Next version\"\n          [disabled]=\"isDisabledNavigateNext\"\n          matTooltip=\"Revisi\u00F3n Siguiente\"\n          (click)=\"nextVersion()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <ng-container *ngIf=\"versions != undefined\">\n    <toco-journal-edit\n      *ngIf=\"editVersion\"\n      [journalVersion]=\"editingJournal\"\n      (journalEditDone)=\"sourceEditDone($event)\"\n      [showEditHeader]=\"false\"\n      [showFinalStep]=\"false\"\n      [topMainOrganization]=\"topMainOrganization\"\n    >\n    </toco-journal-edit>\n    <toco-journal-view-info\n      *ngIf=\"!editVersion && !showVersions\"\n      [journalVersion]=\"editingJournal\"\n      fxFlex=\"1 2 calc(15em + 20px)\"\n      style=\"margin: 0.5em\"\n    >\n    </toco-journal-view-info>\n    <ng-container *ngIf=\"!editVersion && showVersions\">\n      <toco-journal-view-info\n        #journalViewInfo\n        [journalVersion]=\"editingJournal\"\n        fxFlex=\"1 2 calc(15em + 20px)\"\n        style=\"margin: 0.5em\"\n      >\n      </toco-journal-view-info>\n\n      <toco-journal-view-version\n        #versionsPanel\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"selectedJournal\"\n        (editingJournalChange)=\"\n          journalViewInfo.editingJournalChange(editingJournal)\n        \"\n        fxFlex=\"1 2 calc(15em + 20px)\"\n        style=\"margin: 0.5em\"\n      ></toco-journal-view-version>\n    </ng-container>\n  </ng-container>\n\n  <mat-card *ngIf=\"versions == undefined\" style=\"margin: 1em\">\n    <mat-card-content>\n      <h1>Este componente necesita las revisiones de la revista.</h1>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<mat-card *ngIf=\"editingJournal == undefined\" style=\"margin: 1em\">\n  <mat-card-content>\n    <h1>No se encontr\u00F3 la informaci\u00F3n solicitada</h1>\n  </mat-card-content>\n</mat-card>\n",
                styles: [".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]
            }] }
];
/** @nocollapse */
JournalViewComponent.ctorParameters = () => [
    { type: MetadataService },
    { type: Environment },
    { type: MatSnackBar },
    { type: MatDialog }
];
JournalViewComponent.propDecorators = {
    topMainOrganization: [{ type: Input }],
    editingJournal: [{ type: Input }],
    versions: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    JournalViewComponent.prototype.topMainOrganization;
    /**
     * ************* auxiliary variables ******************
     * @type {?}
     */
    JournalViewComponent.prototype.panelOpenState;
    /** @type {?} */
    JournalViewComponent.prototype.defaultLogo;
    /**
     * Button roperty, is to enable or disable if there are not more versions
     * @type {?}
     */
    JournalViewComponent.prototype.isDisabledNavigatePrevious;
    /** @type {?} */
    JournalViewComponent.prototype.isDisabledNavigateNext;
    /** @type {?} */
    JournalViewComponent.prototype.vocabularies;
    /**
     * Represents a Journal Object, it is a type of Source.
     * Need the source.version array filled
     * @type {?}
     */
    JournalViewComponent.prototype.editingJournal;
    /** @type {?} */
    JournalViewComponent.prototype.versions;
    /**
     * the current version of a Journal, (a type of Source)
     * it is to compare and show changes between Journal and last version of journal
     * iteration over journal.versions
     * @type {?}
     */
    JournalViewComponent.prototype.selectedJournal;
    /**
     * Properties to move between versions
     * @type {?}
     * @private
     */
    JournalViewComponent.prototype.selectedVersion;
    /**
     * @type {?}
     * @private
     */
    JournalViewComponent.prototype.lengthVersion;
    /**
     * Inmutables data types of Journal
     * @type {?}
     */
    JournalViewComponent.prototype.journalDataType;
    /**
     * version.is_current = true
     * @type {?}
     */
    JournalViewComponent.prototype.showVersions;
    /** @type {?} */
    JournalViewComponent.prototype.editVersion;
    /**
     * @type {?}
     * @private
     */
    JournalViewComponent.prototype.metadata;
    /**
     * @type {?}
     * @private
     */
    JournalViewComponent.prototype.env;
    /**
     * @type {?}
     * @private
     */
    JournalViewComponent.prototype._snackBar;
    /** @type {?} */
    JournalViewComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,