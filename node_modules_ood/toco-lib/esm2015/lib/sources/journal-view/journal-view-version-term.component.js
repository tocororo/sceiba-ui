/**
 * @fileoverview added by tsickle
 * Generated from: lib/sources/journal-view/journal-view-version-term.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * This component share the same scss that `JournalViewComponent`.
 * His goal is show a list of `terms`
 */
export class JournalViewTermComponent {
    constructor() {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.terms == undefined)
            this.terms = new Array(0);
        if (this.vocab_id == undefined)
            this.vocab_id = 0;
        if (this.title == undefined)
            this.title = '';
    }
}
JournalViewTermComponent.decorators = [
    { type: Component, args: [{
                selector: 'toco-journal-view-term',
                template: "\n<mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n\n    <mat-card-header>\n        <mat-card-title>\n            {{ title }}\n        </mat-card-title>\n        <mat-label *ngIf=\"terms.length == 0\" class=\"text-muted text-through\">Vac\u00EDo</mat-label>\n    </mat-card-header>\n\n    <mat-card-content>\n\n        <mat-chip-list class=\"mat-chip-list-stacked\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <ng-container *ngFor=\"let termSource of terms\">\n\n                <mat-chip>\n                    {{ termSource.description }}\n                </mat-chip>\n\n            </ng-container>\n\n        </mat-chip-list>\n    </mat-card-content>\n\n</mat-card>\n",
                styles: [".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]
            }] }
];
/** @nocollapse */
JournalViewTermComponent.ctorParameters = () => [];
JournalViewTermComponent.propDecorators = {
    title: [{ type: Input }],
    vocab_id: [{ type: Input }],
    terms: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    JournalViewTermComponent.prototype.title;
    /** @type {?} */
    JournalViewTermComponent.prototype.vocab_id;
    /** @type {?} */
    JournalViewTermComponent.prototype.terms;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam91cm5hbC12aWV3LXZlcnNpb24tdGVybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9zb3VyY2VzL2pvdXJuYWwtdmlldy9qb3VybmFsLXZpZXctdmVyc2lvbi10ZXJtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQVl6RCxNQUFNLE9BQU8sd0JBQXdCO0lBUWpDO0lBRUEsQ0FBQzs7OztJQUVELFFBQVE7UUFDSixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksU0FBUztZQUFFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQXNCLENBQUMsQ0FBQyxDQUFDO1FBRTVFLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxTQUFTO1lBQUUsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFFbEQsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLFNBQVM7WUFBRSxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqRCxDQUFDOzs7WUF2QkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLDZzQkFBaUQ7O2FBRXBEOzs7OztvQkFHSSxLQUFLO3VCQUVMLEtBQUs7b0JBRUwsS0FBSzs7OztJQUpOLHlDQUE4Qjs7SUFFOUIsNENBQWlDOztJQUVqQyx5Q0FBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNvdXJjZUNsYXNpZmljYXRpb24gfSBmcm9tICcuLi8uLi9lbnRpdGllcy9wdWJsaWMtYXBpJztcblxuLyoqXG4gKiBUaGlzIGNvbXBvbmVudCBzaGFyZSB0aGUgc2FtZSBzY3NzIHRoYXQgYEpvdXJuYWxWaWV3Q29tcG9uZW50YC5cbiAqIEhpcyBnb2FsIGlzIHNob3cgYSBsaXN0IG9mIGB0ZXJtc2BcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0b2NvLWpvdXJuYWwtdmlldy10ZXJtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vam91cm5hbC12aWV3LXRlcm0uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2pvdXJuYWwtdmlldy5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEpvdXJuYWxWaWV3VGVybUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKSBwdWJsaWMgdGl0bGU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHB1YmxpYyB2b2NhYl9pZDogbnVtYmVyO1xuXG4gICAgQElucHV0KCkgcHVibGljIHRlcm1zOiBBcnJheTxTb3VyY2VDbGFzaWZpY2F0aW9uPjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnRlcm1zID09IHVuZGVmaW5lZCkgdGhpcy50ZXJtcyA9IG5ldyBBcnJheTxTb3VyY2VDbGFzaWZpY2F0aW9uPigwKTtcblxuICAgICAgICBpZiAodGhpcy52b2NhYl9pZCA9PSB1bmRlZmluZWQpIHRoaXMudm9jYWJfaWQgPSAwO1xuXG4gICAgICAgIGlmICh0aGlzLnRpdGxlID09IHVuZGVmaW5lZCkgdGhpcy50aXRsZSA9ICcnO1xuICAgIH1cbn1cblxuIl19