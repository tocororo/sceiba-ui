/**
 * @fileoverview added by tsickle
 * Generated from: lib/statics/chips/chips-static.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
/**
 * Represents a static control that shows an array of texts using chips.
 */
export class StaticChipsComponent {
    constructor() {
        this.appearance = 'outline';
        this.desc = undefined;
        this.value = [];
    }
}
StaticChipsComponent.decorators = [
    { type: Component, args: [{
                selector: 'static-chips',
                template: "\n<mat-form-field class=\"chips-mat-form-field control-without-interactivity\" [appearance]=\"appearance\">\n\t<mat-label>{{ desc }}</mat-label>\n\t<mat-chip-list *ngIf=\"value.length\" [selectable]=\"'false'\" [attr.aria-label]=\"desc\">\n    <mat-chip *ngFor=\"let item of value\" [selectable]=\"'false'\" [disableRipple]=\"'true'\">{{ item }}</mat-chip>\n  </mat-chip-list>\n  <input *ngIf=\"!value.length\" matInput [value]=\"'There is not any item to show!'\" [attr.aria-label]=\"desc\" />\n</mat-form-field>\n",
                styles: [".chips-mat-form-field{width:100%}.control-without-interactivity{pointer-events:none}"]
            }] }
];
/** @nocollapse */
StaticChipsComponent.ctorParameters = () => [];
StaticChipsComponent.propDecorators = {
    appearance: [{ type: Input }],
    desc: [{ type: Input }],
    value: [{ type: Input }]
};
if (false) {
    /**
     * The control's appearance.
     * By default, its value is `'outline'`.
     * @type {?}
     */
    StaticChipsComponent.prototype.appearance;
    /**
     * The control's description.
     * By default, its value is `undefined` and it is not showed.
     * @type {?}
     */
    StaticChipsComponent.prototype.desc;
    /**
     * The array of items for displaying.
     * By default, its value is `[]`.
     * @type {?}
     */
    StaticChipsComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHMtc3RhdGljLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RvY28tbGliLyIsInNvdXJjZXMiOlsibGliL3N0YXRpY3MvY2hpcHMvY2hpcHMtc3RhdGljLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBVWpELE1BQU0sT0FBTyxvQkFBb0I7SUF1QmhDO1FBRUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7UUFDNUIsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7O1lBakNELFNBQVMsU0FBQztnQkFDVixRQUFRLEVBQUUsY0FBYztnQkFDeEIsK2dCQUE0Qzs7YUFFNUM7Ozs7O3lCQU9DLEtBQUs7bUJBT0wsS0FBSztvQkFPTCxLQUFLOzs7Ozs7OztJQWROLDBDQUMwQjs7Ozs7O0lBTTFCLG9DQUNvQjs7Ozs7O0lBTXBCLHFDQUN1QiIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBzdGF0aWMgY29udHJvbCB0aGF0IHNob3dzIGFuIGFycmF5IG9mIHRleHRzIHVzaW5nIGNoaXBzLiBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnc3RhdGljLWNoaXBzJyxcblx0dGVtcGxhdGVVcmw6ICcuL2NoaXBzLXN0YXRpYy5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2NoaXBzLXN0YXRpYy5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFN0YXRpY0NoaXBzQ29tcG9uZW50XG57XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRyb2wncyBhcHBlYXJhbmNlLiBcbiAgICAgKiBCeSBkZWZhdWx0LCBpdHMgdmFsdWUgaXMgYCdvdXRsaW5lJ2AuIFxuICAgICAqL1xuXHRASW5wdXQoKVxuXHRwdWJsaWMgYXBwZWFyYW5jZTogc3RyaW5nO1xuXG5cdC8qKlxuXHQgKiBUaGUgY29udHJvbCdzIGRlc2NyaXB0aW9uLiBcblx0ICogQnkgZGVmYXVsdCwgaXRzIHZhbHVlIGlzIGB1bmRlZmluZWRgIGFuZCBpdCBpcyBub3Qgc2hvd2VkLiBcblx0ICovXG5cdEBJbnB1dCgpXG5cdHB1YmxpYyBkZXNjOiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIFRoZSBhcnJheSBvZiBpdGVtcyBmb3IgZGlzcGxheWluZy4gXG5cdCAqIEJ5IGRlZmF1bHQsIGl0cyB2YWx1ZSBpcyBgW11gLiBcblx0ICovXG5cdEBJbnB1dCgpXG5cdHB1YmxpYyB2YWx1ZTogc3RyaW5nW107XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHRoaXMuYXBwZWFyYW5jZSA9ICdvdXRsaW5lJztcblx0XHR0aGlzLmRlc2MgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy52YWx1ZSA9IFtdO1xuXHR9XG59XG4iXX0=