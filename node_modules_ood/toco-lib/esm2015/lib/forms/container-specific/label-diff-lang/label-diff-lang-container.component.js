/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/container-specific/label-diff-lang/label-diff-lang-container.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ContainerControl } from '../../container/container.control';
/**
 * Represents a container control that allows the writing of a name of something in different language.
 */
export class ContainerLabelDiffLangComponent extends ContainerControl {
    constructor() {
        super();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /* Sets the default values. */
        this.init(undefined);
    }
    /**
     * Initializes the `content` input property.
     * @protected
     * @param {?} label The label to set. If the value is `undefined`, sets the label to `content.label`.
     * @return {?}
     */
    init(label) {
        /* Sets the default values. */
        super.init(label);
    }
}
ContainerLabelDiffLangComponent.decorators = [
    { type: Component, args: [{
                selector: 'container-label-diff-lang',
                template: "\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el \u00FAnico que est\u00E1 hecho. -->\n<fieldset class=\"container-simple-form-field\" [formGroup]=\"content.formSection\" [attr.aria-label]=\"content.ariaLabel\">\n    <legend class=\"container-simple-form-field-legend\">{{ content.label }}</legend>\n\n    <ng-template get-view-container></ng-template>\n    <!-- <button mat-raised-button color=\"primary\" (click)=\"content.parentFormSection.removeFromFormArray(content.name)\">\n        <mat-icon>remove_circle</mat-icon>\n    </button> -->\n\n</fieldset>\n",
                host: {
                    '[style.minWidth]': 'content.minWidth',
                    '[style.width]': 'content.width'
                },
                styles: [".container-simple-form-field{margin:-4px 0 0;padding:0 12px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.container-simple-form-field-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]
            }] }
];
/** @nocollapse */
ContainerLabelDiffLangComponent.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwtZGlmZi1sYW5nLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9jb250YWluZXItc3BlY2lmaWMvbGFiZWwtZGlmZi1sYW5nL2xhYmVsLWRpZmYtbGFuZy1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQWNyRSxNQUFNLE9BQU8sK0JBQWdDLFNBQVEsZ0JBQWdCO0lBRXBFO1FBRUMsS0FBSyxFQUFFLENBQUM7SUFDVCxDQUFDOzs7O0lBRU0sUUFBUTtRQUVkLDhCQUE4QjtRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVCLENBQUM7Ozs7Ozs7SUFRWSxJQUFJLENBQUMsS0FBeUI7UUFFcEMsOEJBQThCO1FBRTlCLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7O1lBakNKLFNBQVMsU0FBQztnQkFDVixRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxnckJBQXlEO2dCQUV0RCxJQUFJLEVBQUU7b0JBQ0Ysa0JBQWtCLEVBQUUsa0JBQWtCO29CQUN0QyxlQUFlLEVBQUUsZUFBZTtpQkFDbkM7O2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvbnRhaW5lckNvbnRyb2wgfSBmcm9tICcuLi8uLi9jb250YWluZXIvY29udGFpbmVyLmNvbnRyb2wnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb250YWluZXIgY29udHJvbCB0aGF0IGFsbG93cyB0aGUgd3JpdGluZyBvZiBhIG5hbWUgb2Ygc29tZXRoaW5nIGluIGRpZmZlcmVudCBsYW5ndWFnZS4gXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2NvbnRhaW5lci1sYWJlbC1kaWZmLWxhbmcnLFxuXHR0ZW1wbGF0ZVVybDogJy4vbGFiZWwtZGlmZi1sYW5nLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2xhYmVsLWRpZmYtbGFuZy1jb250YWluZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbc3R5bGUubWluV2lkdGhdJzogJ2NvbnRlbnQubWluV2lkdGgnLFxuICAgICAgICAnW3N0eWxlLndpZHRoXSc6ICdjb250ZW50LndpZHRoJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgQ29udGFpbmVyTGFiZWxEaWZmTGFuZ0NvbXBvbmVudCBleHRlbmRzIENvbnRhaW5lckNvbnRyb2wgaW1wbGVtZW50cyBPbkluaXRcbntcblx0cHVibGljIGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHRwdWJsaWMgbmdPbkluaXQoKTogdm9pZFxuXHR7XG5cdFx0LyogU2V0cyB0aGUgZGVmYXVsdCB2YWx1ZXMuICovXG4gICAgICAgIHRoaXMuaW5pdCh1bmRlZmluZWQpO1xuXHR9XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgYGNvbnRlbnRgIGlucHV0IHByb3BlcnR5LiBcbiAgICAgKiBAcGFyYW0gbGFiZWwgVGhlIGxhYmVsIHRvIHNldC4gSWYgdGhlIHZhbHVlIGlzIGB1bmRlZmluZWRgLCBzZXRzIHRoZSBsYWJlbCB0byBgY29udGVudC5sYWJlbGAuIFxuICAgICAqIEBwYXJhbSBpc0FiYnJldmlhdGlvbiBJZiBpdCBpcyB0cnVlIHRoZW4gdGhlIGBsYWJlbGAgYXJndW1lbnQgcmVwcmVzZW50cyBhbiBhYmJyZXZpYXRpb247IG90aGVyd2lzZSwgZmFsc2UuIFxuICAgICAqIEBwYXJhbSBhbHdheXNIaW50IElmIGl0IGlzIHRydWUgdGhlbiB0aGVyZSBpcyBhbHdheXMgYXQgbGVhdCBvbmUgaGludCBzdGFydC1hbGlnbmVkLiBcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgaW5pdChsYWJlbDogc3RyaW5nIHwgdW5kZWZpbmVkKTogdm9pZFxuICAgIHtcbiAgICAgICAgLyogU2V0cyB0aGUgZGVmYXVsdCB2YWx1ZXMuICovXG5cbiAgICAgICAgc3VwZXIuaW5pdChsYWJlbCk7XG4gICAgfVxufVxuIl19