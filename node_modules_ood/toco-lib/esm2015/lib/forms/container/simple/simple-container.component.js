/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/container/simple/simple-container.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ContainerControl } from '../container.control';
/**
 * Represents a container control that is showed very simple.
 * Usage notes:
 *  - It can be used as:
 * <container-simple [content]="simpleContent"></container-simple>
 * Where `content.formSection` is created, for example, as this:
 * this.content.formSection = new FormGroup({ }, [ ]);
 */
export class ContainerSimpleComponent extends ContainerControl {
    constructor() {
        super();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /* Sets the default values. */
        this.init('');
    }
    /**
     * Initializes the `content` input property.
     * @protected
     * @param {?} label The default label to use. It is used if the `content.label` is not specified.
     * @return {?}
     */
    init(label) {
        /* Sets the default values. */
        super.init(label);
    }
}
ContainerSimpleComponent.decorators = [
    { type: Component, args: [{
                selector: 'container-simple',
                template: "\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el \u00FAnico que est\u00E1 hecho. -->\n<fieldset class=\"container-simple-form-field\" [formGroup]=\"content.formSection\" [attr.aria-label]=\"content.ariaLabel\">\n    <legend class=\"container-simple-form-field-legend\">{{ content.label }}</legend>\n\n    <ng-template get-view-container></ng-template>\n\n    <ng-container *ngIf=\"content.isDynamic\">\n        <button mat-raised-button color=\"primary\" (click)=\"addToFormArray()\">\n            <!-- <mat-icon>add box</mat-icon> -->\n            <mat-icon>add_circle</mat-icon>\n            Add new item\n        </button>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!canRemoveFromFormArray\" (click)=\"clearFormArray()\">\n            <!-- <mat-icon>remove box</mat-icon> -->\n            <mat-icon>remove_circle</mat-icon>\n            Clear all\n        </button>\n    </ng-container>\n\n</fieldset>\n",
                host: {
                    '[style.minWidth]': 'content.minWidth',
                    '[style.width]': 'content.width'
                },
                styles: [".container-simple-form-field{margin:-4px 0 24px;padding:0 10px 14px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.container-simple-form-field-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]
            }] }
];
/** @nocollapse */
ContainerSimpleComponent.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9jb250YWluZXIvc2ltcGxlL3NpbXBsZS1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7Ozs7O0FBbUJ4RCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsZ0JBQWdCO0lBRTdEO1FBRU8sS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDOzs7O0lBRU0sUUFBUTtRQUVkLDhCQUE4QjtRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7Ozs7Ozs7SUFNWSxJQUFJLENBQUMsS0FBYTtRQUV4Qiw4QkFBOEI7UUFFOUIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDOzs7WUEvQkosU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLG1pQ0FBZ0Q7Z0JBRWhELElBQUksRUFBRTtvQkFDTCxrQkFBa0IsRUFBRSxrQkFBa0I7b0JBQ3RDLGVBQWUsRUFBRSxlQUFlO2lCQUNoQzs7YUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29udGFpbmVyQ29udHJvbCB9IGZyb20gJy4uL2NvbnRhaW5lci5jb250cm9sJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgY29udGFpbmVyIGNvbnRyb2wgdGhhdCBpcyBzaG93ZWQgdmVyeSBzaW1wbGUuIFxuICogVXNhZ2Ugbm90ZXM6IFxuICogIC0gSXQgY2FuIGJlIHVzZWQgYXM6IFxuICogPGNvbnRhaW5lci1zaW1wbGUgW2NvbnRlbnRdPVwic2ltcGxlQ29udGVudFwiPjwvY29udGFpbmVyLXNpbXBsZT4gXG4gKiBXaGVyZSBgY29udGVudC5mb3JtU2VjdGlvbmAgaXMgY3JlYXRlZCwgZm9yIGV4YW1wbGUsIGFzIHRoaXM6IFxuICogdGhpcy5jb250ZW50LmZvcm1TZWN0aW9uID0gbmV3IEZvcm1Hcm91cCh7IH0sIFsgXSk7IFxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdjb250YWluZXItc2ltcGxlJyxcblx0dGVtcGxhdGVVcmw6ICcuL3NpbXBsZS1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9zaW1wbGUtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzJ10sXG5cdGhvc3Q6IHtcblx0XHQnW3N0eWxlLm1pbldpZHRoXSc6ICdjb250ZW50Lm1pbldpZHRoJyxcblx0XHQnW3N0eWxlLndpZHRoXSc6ICdjb250ZW50LndpZHRoJ1xuXHR9XG59KVxuZXhwb3J0IGNsYXNzIENvbnRhaW5lclNpbXBsZUNvbXBvbmVudCBleHRlbmRzIENvbnRhaW5lckNvbnRyb2wgaW1wbGVtZW50cyBPbkluaXRcbntcblx0cHVibGljIGNvbnN0cnVjdG9yKClcblx0e1xuICAgICAgICBzdXBlcigpO1xuXHR9XG5cblx0cHVibGljIG5nT25Jbml0KCk6IHZvaWRcblx0e1xuXHRcdC8qIFNldHMgdGhlIGRlZmF1bHQgdmFsdWVzLiAqL1xuICAgICAgICB0aGlzLmluaXQoJycpO1xuXHR9XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgYGNvbnRlbnRgIGlucHV0IHByb3BlcnR5LiBcbiAgICAgKiBAcGFyYW0gbGFiZWwgVGhlIGRlZmF1bHQgbGFiZWwgdG8gdXNlLiBJdCBpcyB1c2VkIGlmIHRoZSBgY29udGVudC5sYWJlbGAgaXMgbm90IHNwZWNpZmllZC4gXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGluaXQobGFiZWw6IHN0cmluZyk6IHZvaWRcbiAgICB7XG4gICAgICAgIC8qIFNldHMgdGhlIGRlZmF1bHQgdmFsdWVzLiAqL1xuXG4gICAgICAgIHN1cGVyLmluaXQobGFiZWwpO1xuICAgIH1cbn1cbiJdfQ==