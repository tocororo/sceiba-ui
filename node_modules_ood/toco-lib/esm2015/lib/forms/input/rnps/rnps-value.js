/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input/rnps/rnps-value.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Data structure for holding an RNPS.
 * An RNPS (Registro Nacional de Publicaciones Seriadas) is an 4-digit code used to control
 * las publicaciones seriadas autorizadas a editarse, imprimirse y circular en Cuba.
 * For more information follow the link: http://www.seriadas.cult.cu/.
 */
export class RnpsValue {
    /**
     * @param {?} c
     */
    constructor(c) {
        this.code = c;
    }
    /**
     * Returns true if the RNPS is complete; otherwise, false.
     * It is complete if the code of digits has the correct length. It does not check if the RNPS has
     * the correct digits.
     * @return {?}
     */
    isComplete() {
        return (this.code.length == RnpsValue.codeLength);
    }
    /**
     * Returns a string representation of this `RnpsValue` object.
     * @return {?}
     */
    toString() {
        return RnpsValue.rnps_Abbreviation + ' ' + this.code;
    }
}
/**
 * Represents the RNPS placeholder.
 */
RnpsValue.rnps_Placeholder = 'XXXX';
/**
 * The amount of digits in the code.
 */
RnpsValue.codeLength = 4;
/**
 * The amount of digits in the code as string value.
 */
RnpsValue.codeLengthAsString = RnpsValue.codeLength.toString(10);
/**
 * Represents the RNPS abbreviation.
 */
RnpsValue.rnps_Abbreviation = 'RNPS';
/**
 * Represents the RNPS label.
 */
RnpsValue.rnps_Label = 'TOCO_NG_RNPS';
if (false) {
    /**
     * Represents the RNPS placeholder.
     * @type {?}
     */
    RnpsValue.rnps_Placeholder;
    /**
     * The amount of digits in the code.
     * @type {?}
     */
    RnpsValue.codeLength;
    /**
     * The amount of digits in the code as string value.
     * @type {?}
     */
    RnpsValue.codeLengthAsString;
    /**
     * Represents the RNPS abbreviation.
     * @type {?}
     */
    RnpsValue.rnps_Abbreviation;
    /**
     * Represents the RNPS label.
     * @type {?}
     */
    RnpsValue.rnps_Label;
    /**
     * The code of `RnpsValue.codeLength` digits.
     * @type {?}
     */
    RnpsValue.prototype.code;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm5wcy12YWx1ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RvY28tbGliLyIsInNvdXJjZXMiOlsibGliL2Zvcm1zL2lucHV0L3JucHMvcm5wcy12YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQU9BLE1BQU0sT0FBTyxTQUFTOzs7O0lBZ0NyQixZQUFtQixDQUFTO1FBRTNCLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7OztJQU9NLFVBQVU7UUFFaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7OztJQUtPLFFBQVE7UUFFZixPQUFPLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyRCxDQUFDOzs7OztBQWhEcUIsMEJBQWdCLEdBQVcsTUFBTSxDQUFDOzs7O0FBS2xDLG9CQUFVLEdBQVcsQ0FBQyxDQUFDOzs7O0FBS3ZCLDRCQUFrQixHQUFXLFNBQVMsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDOzs7O0FBSy9ELDJCQUFpQixHQUFXLE1BQU0sQ0FBQzs7OztBQUtuQyxvQkFBVSxHQUFXLGNBQWMsQ0FBQzs7Ozs7O0lBcEIzRCwyQkFBeUQ7Ozs7O0lBS3pELHFCQUE4Qzs7Ozs7SUFLOUMsNkJBQXNGOzs7OztJQUt0Riw0QkFBMEQ7Ozs7O0lBSzFELHFCQUEyRDs7Ozs7SUFLM0QseUJBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIERhdGEgc3RydWN0dXJlIGZvciBob2xkaW5nIGFuIFJOUFMuIFxuICogQW4gUk5QUyAoUmVnaXN0cm8gTmFjaW9uYWwgZGUgUHVibGljYWNpb25lcyBTZXJpYWRhcykgaXMgYW4gNC1kaWdpdCBjb2RlIHVzZWQgdG8gY29udHJvbCBcbiAqIGxhcyBwdWJsaWNhY2lvbmVzIHNlcmlhZGFzIGF1dG9yaXphZGFzIGEgZWRpdGFyc2UsIGltcHJpbWlyc2UgeSBjaXJjdWxhciBlbiBDdWJhLiBcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGZvbGxvdyB0aGUgbGluazogaHR0cDovL3d3dy5zZXJpYWRhcy5jdWx0LmN1Ly4gXG4gKi9cbmV4cG9ydCBjbGFzcyBSbnBzVmFsdWVcbntcblx0LyoqXG5cdCAqIFJlcHJlc2VudHMgdGhlIFJOUFMgcGxhY2Vob2xkZXIuXG5cdCAqL1xuXHRwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHJucHNfUGxhY2Vob2xkZXI6IHN0cmluZyA9ICdYWFhYJztcblxuXHQvKipcblx0ICogVGhlIGFtb3VudCBvZiBkaWdpdHMgaW4gdGhlIGNvZGUuIFxuXHQgKi9cblx0cHVibGljIHN0YXRpYyByZWFkb25seSBjb2RlTGVuZ3RoOiBudW1iZXIgPSA0O1xuXG5cdC8qKlxuXHQgKiBUaGUgYW1vdW50IG9mIGRpZ2l0cyBpbiB0aGUgY29kZSBhcyBzdHJpbmcgdmFsdWUuIFxuXHQgKi9cblx0cHVibGljIHN0YXRpYyByZWFkb25seSBjb2RlTGVuZ3RoQXNTdHJpbmc6IHN0cmluZyA9IFJucHNWYWx1ZS5jb2RlTGVuZ3RoLnRvU3RyaW5nKDEwKTtcblxuXHQvKipcblx0ICogUmVwcmVzZW50cyB0aGUgUk5QUyBhYmJyZXZpYXRpb24uIFxuXHQgKi9cblx0cHVibGljIHN0YXRpYyByZWFkb25seSBybnBzX0FiYnJldmlhdGlvbjogc3RyaW5nID0gJ1JOUFMnO1xuXG5cdC8qKlxuXHQgKiBSZXByZXNlbnRzIHRoZSBSTlBTIGxhYmVsLiBcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgcm5wc19MYWJlbDogc3RyaW5nID0gJ1RPQ09fTkdfUk5QUyc7XG5cblx0LyoqXG5cdCAqIFRoZSBjb2RlIG9mIGBSbnBzVmFsdWUuY29kZUxlbmd0aGAgZGlnaXRzLlxuXHQgKi9cblx0cHVibGljIGNvZGU6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoYzogc3RyaW5nKVxuXHR7XG5cdFx0dGhpcy5jb2RlID0gYztcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIHRydWUgaWYgdGhlIFJOUFMgaXMgY29tcGxldGU7IG90aGVyd2lzZSwgZmFsc2UuIFxuXHQgKiBJdCBpcyBjb21wbGV0ZSBpZiB0aGUgY29kZSBvZiBkaWdpdHMgaGFzIHRoZSBjb3JyZWN0IGxlbmd0aC4gSXQgZG9lcyBub3QgY2hlY2sgaWYgdGhlIFJOUFMgaGFzIFxuXHQgKiB0aGUgY29ycmVjdCBkaWdpdHMuIFxuXHQgKi9cblx0cHVibGljIGlzQ29tcGxldGUoKTogYm9vbGVhblxuXHR7XG5cdFx0cmV0dXJuICh0aGlzLmNvZGUubGVuZ3RoID09IFJucHNWYWx1ZS5jb2RlTGVuZ3RoKTtcblx0fVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGlzIGBSbnBzVmFsdWVgIG9iamVjdC4gXG4gICAgICovXG5cdCBwdWJsaWMgdG9TdHJpbmcoKTogc3RyaW5nXG5cdCB7XG5cdFx0cmV0dXJuIFJucHNWYWx1ZS5ybnBzX0FiYnJldmlhdGlvbiArICcgJyArIHRoaXMuY29kZTtcblx0IH1cbn1cbiJdfQ==