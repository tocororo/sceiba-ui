/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/experimental/form-field.control.experimental.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from "@angular/core";
import { FormControl } from "@angular/forms";
/**
 * A interface that represents the content of a `FormFieldControl_Experimental`.
 * @record
 */
export function FormFieldContent_Experimental() { }
/**
 * Represents the base abstract class for a control that is treated as a form field.
 * @abstract
 */
export class FormFieldControl_Experimental {
    constructor() {
        this.internalControl = new FormControl();
        // (this.content.parentFormSection as FormGroup).addControl(
        //     this.content.name,
        //     this.internalControl
        //   );
    }
}
FormFieldControl_Experimental.propDecorators = {
    content: [{ type: Input }]
};
if (false) {
    /**
     * Input field that contains the content of this class.
     * @type {?}
     */
    FormFieldControl_Experimental.prototype.content;
    /** @type {?} */
    FormFieldControl_Experimental.prototype.internalControl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC5jb250cm9sLmV4cGVyaW1lbnRhbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RvY28tbGliLyIsInNvdXJjZXMiOlsibGliL2Zvcm1zL2V4cGVyaW1lbnRhbC9mb3JtLWZpZWxkLmNvbnRyb2wuZXhwZXJpbWVudGFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUk5QyxPQUFPLEVBQUUsV0FBVyxFQUFhLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBS3hELG1EQUFzRTs7Ozs7QUFLdEUsTUFBTSxPQUFnQiw2QkFBNkI7SUFRakQ7UUFEQSxvQkFBZSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7UUFFbEMsNERBQTREO1FBQzVELHlCQUF5QjtRQUN6QiwyQkFBMkI7UUFDM0IsT0FBTztJQUNULENBQUM7OztzQkFUQSxLQUFLOzs7Ozs7O0lBQU4sZ0RBQzhDOztJQUU5Qyx3REFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuaW1wb3J0IHsgSW5wdXRDb250ZW50IH0gZnJvbSBcIi4uL2lucHV0L2lucHV0LmNvbnRyb2xcIjtcbmltcG9ydCB7IEZvcm1GaWVsZENvbnRyb2wgfSBmcm9tIFwiLi4vZm9ybS1maWVsZC5jb250cm9sXCI7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbi8qKlxuICogQSBpbnRlcmZhY2UgdGhhdCByZXByZXNlbnRzIHRoZSBjb250ZW50IG9mIGEgYEZvcm1GaWVsZENvbnRyb2xfRXhwZXJpbWVudGFsYC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3JtRmllbGRDb250ZW50X0V4cGVyaW1lbnRhbCBleHRlbmRzIElucHV0Q29udGVudCB7fVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGJhc2UgYWJzdHJhY3QgY2xhc3MgZm9yIGEgY29udHJvbCB0aGF0IGlzIHRyZWF0ZWQgYXMgYSBmb3JtIGZpZWxkLlxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRm9ybUZpZWxkQ29udHJvbF9FeHBlcmltZW50YWwge1xuICAvKipcbiAgICogSW5wdXQgZmllbGQgdGhhdCBjb250YWlucyB0aGUgY29udGVudCBvZiB0aGlzIGNsYXNzLlxuICAgKi9cbiAgQElucHV0KClcbiAgcHVibGljIGNvbnRlbnQ6IEZvcm1GaWVsZENvbnRlbnRfRXhwZXJpbWVudGFsO1xuXG4gIGludGVybmFsQ29udHJvbCA9IG5ldyBGb3JtQ29udHJvbCgpO1xuICBjb25zdHJ1Y3RvcigpIHsgXG4gICAgLy8gKHRoaXMuY29udGVudC5wYXJlbnRGb3JtU2VjdGlvbiBhcyBGb3JtR3JvdXApLmFkZENvbnRyb2woXG4gICAgLy8gICAgIHRoaXMuY29udGVudC5uYW1lLFxuICAgIC8vICAgICB0aGlzLmludGVybmFsQ29udHJvbFxuICAgIC8vICAgKTtcbiAgfVxufVxuIl19