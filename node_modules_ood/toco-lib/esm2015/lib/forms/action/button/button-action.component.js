/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/action/button/button-action.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActionControl } from '../action.control';
/**
 * Represents a control that executes actions.
 */
export class ActionButtonComponent extends ActionControl {
    constructor() {
        super();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /* Sets the default values. */
        this.init('', '', true);
    }
}
ActionButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'action-button',
                template: "\n<!-- <button mat-icon-button -->\n<button mat-raised-button\n\tclass=\"action-button\"\n\tcolor=\"primary\"\n\t[attr.aria-label]=\"content.ariaLabel\"\n\t[matTooltip]=\"content.tooltip.label\"\n\t[disabled]=\"content.isDisabled(getInstance)\"\n\t(click)=\"content.click(getInstance)\"\n>\n\t<!-- Only renders one of these two `mat-icon` or nothing. -->\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.internal)\" class=\"mat-icon notranslate\" matPrefix [svgIcon]=\"content.icon.name\"></mat-icon>\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.external)\" class=\"mat-icon notranslate\" matPrefix>{{ content.icon.name }}</mat-icon>\n\t<!-- <mat-icon>{{ content.icon.name }}</mat-icon> -->\n\t{{ content.label }}\n</button>\n",
                host: {
                    '[style.minWidth]': 'content.minWidth',
                    '[style.width]': 'content.width'
                },
                styles: [""]
            }] }
];
/** @nocollapse */
ActionButtonComponent.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9hY3Rpb24vYnV0dG9uL2J1dHRvbi1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7QUFjbEQsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGFBQWE7SUFFcEQ7UUFFSSxLQUFLLEVBQUUsQ0FBQztJQUNaLENBQUM7Ozs7SUFFTSxRQUFRO1FBRVgsOEJBQThCO1FBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOzs7WUFwQkosU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxlQUFlO2dCQUN6QixneUJBQTZDO2dCQUUxQyxJQUFJLEVBQUU7b0JBQ0Ysa0JBQWtCLEVBQUUsa0JBQWtCO29CQUN0QyxlQUFlLEVBQUUsZUFBZTtpQkFDbkM7O2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEFjdGlvbkNvbnRyb2wgfSBmcm9tICcuLi9hY3Rpb24uY29udHJvbCc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGNvbnRyb2wgdGhhdCBleGVjdXRlcyBhY3Rpb25zLiBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnYWN0aW9uLWJ1dHRvbicsXG5cdHRlbXBsYXRlVXJsOiAnLi9idXR0b24tYWN0aW9uLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vYnV0dG9uLWFjdGlvbi5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS5taW5XaWR0aF0nOiAnY29udGVudC5taW5XaWR0aCcsXG4gICAgICAgICdbc3R5bGUud2lkdGhdJzogJ2NvbnRlbnQud2lkdGgnXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25CdXR0b25Db21wb25lbnQgZXh0ZW5kcyBBY3Rpb25Db250cm9sIGltcGxlbWVudHMgT25Jbml0XG57XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKClcbiAgICB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgcHVibGljIG5nT25Jbml0KCk6IHZvaWRcbiAgICB7XG4gICAgICAgIC8qIFNldHMgdGhlIGRlZmF1bHQgdmFsdWVzLiAqL1xuICAgICAgICB0aGlzLmluaXQoJycsICcnLCB0cnVlKTtcbiAgICB9XG59XG4iXX0=