/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/experimental/form-field.control.experimental.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from "@angular/core";
import { FormControl } from "@angular/forms";
/**
 * A interface that represents the content of a `FormFieldControl_Experimental`.
 * @record
 */
export function FormFieldContent_Experimental() { }
/**
 * Represents the base abstract class for a control that is treated as a form field.
 * @abstract
 */
var FormFieldControl_Experimental = /** @class */ (function () {
    function FormFieldControl_Experimental() {
        this.internalControl = new FormControl();
        // (this.content.parentFormSection as FormGroup).addControl(
        //     this.content.name,
        //     this.internalControl
        //   );
    }
    FormFieldControl_Experimental.propDecorators = {
        content: [{ type: Input }]
    };
    return FormFieldControl_Experimental;
}());
export { FormFieldControl_Experimental };
if (false) {
    /**
     * Input field that contains the content of this class.
     * @type {?}
     */
    FormFieldControl_Experimental.prototype.content;
    /** @type {?} */
    FormFieldControl_Experimental.prototype.internalControl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC5jb250cm9sLmV4cGVyaW1lbnRhbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RvY28tbGliLyIsInNvdXJjZXMiOlsibGliL2Zvcm1zL2V4cGVyaW1lbnRhbC9mb3JtLWZpZWxkLmNvbnRyb2wuZXhwZXJpbWVudGFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUk5QyxPQUFPLEVBQUUsV0FBVyxFQUFhLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBS3hELG1EQUFzRTs7Ozs7QUFLdEU7SUFRRTtRQURBLG9CQUFlLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztRQUVsQyw0REFBNEQ7UUFDNUQseUJBQXlCO1FBQ3pCLDJCQUEyQjtRQUMzQixPQUFPO0lBQ1QsQ0FBQzs7MEJBVEEsS0FBSzs7SUFVUixvQ0FBQztDQUFBLEFBZEQsSUFjQztTQWRxQiw2QkFBNkI7Ozs7OztJQUlqRCxnREFDOEM7O0lBRTlDLHdEQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBJbnB1dENvbnRlbnQgfSBmcm9tIFwiLi4vaW5wdXQvaW5wdXQuY29udHJvbFwiO1xuaW1wb3J0IHsgRm9ybUZpZWxkQ29udHJvbCB9IGZyb20gXCIuLi9mb3JtLWZpZWxkLmNvbnRyb2xcIjtcbmltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuLyoqXG4gKiBBIGludGVyZmFjZSB0aGF0IHJlcHJlc2VudHMgdGhlIGNvbnRlbnQgb2YgYSBgRm9ybUZpZWxkQ29udHJvbF9FeHBlcmltZW50YWxgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1GaWVsZENvbnRlbnRfRXhwZXJpbWVudGFsIGV4dGVuZHMgSW5wdXRDb250ZW50IHt9XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYmFzZSBhYnN0cmFjdCBjbGFzcyBmb3IgYSBjb250cm9sIHRoYXQgaXMgdHJlYXRlZCBhcyBhIGZvcm0gZmllbGQuXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGb3JtRmllbGRDb250cm9sX0V4cGVyaW1lbnRhbCB7XG4gIC8qKlxuICAgKiBJbnB1dCBmaWVsZCB0aGF0IGNvbnRhaW5zIHRoZSBjb250ZW50IG9mIHRoaXMgY2xhc3MuXG4gICAqL1xuICBASW5wdXQoKVxuICBwdWJsaWMgY29udGVudDogRm9ybUZpZWxkQ29udGVudF9FeHBlcmltZW50YWw7XG5cbiAgaW50ZXJuYWxDb250cm9sID0gbmV3IEZvcm1Db250cm9sKCk7XG4gIGNvbnN0cnVjdG9yKCkgeyBcbiAgICAvLyAodGhpcy5jb250ZW50LnBhcmVudEZvcm1TZWN0aW9uIGFzIEZvcm1Hcm91cCkuYWRkQ29udHJvbChcbiAgICAvLyAgICAgdGhpcy5jb250ZW50Lm5hbWUsXG4gICAgLy8gICAgIHRoaXMuaW50ZXJuYWxDb250cm9sXG4gICAgLy8gICApO1xuICB9XG59XG4iXX0=