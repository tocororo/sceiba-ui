/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/experimental/datepicker/datepicker.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from "@angular/core";
import { InputControl } from '../../input/input.control';
var DatepickerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DatepickerComponent, _super);
    // TODO: for datepicker, !!!! use https://stackblitz.com/edit/angular-material2-year-picker-7z9k4t?file=app%2Fcustom-datepicker%2Fyear-picker-component%2Fyear-picker.component.html
    function DatepickerComponent() {
        return _super.call(this) || this;
    }
    /**
     * @return {?}
     */
    DatepickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.init('', '', false, true);
        // (this.content.parentFormSection as FormGroup).addControl(
        //   this.content.name,
        //   this.internalControl
        // );
    };
    DatepickerComponent.decorators = [
        { type: Component, args: [{
                    selector: "toco-datepicker",
                    template: "<mat-form-field\nstyle=\"width: 100%;\"\n>\n<input\n    matInput\n    [value]=\"content.value\"\n    (input)=\"$event.target.value\"\n    [matDatepicker]=\"picker\"\n    name=\"{{ content.name }}\"\n    placeholder=\"{{ content.label }}\"\n    required=\"{{ content.required }}\"\n    [formControl]=\"content.formControl\"\n>\n<mat-datepicker-toggle\n    matSuffix [for]=\"picker\"\n></mat-datepicker-toggle>\n<mat-datepicker\n    #picker\n    startView=\"multi-year\"\n></mat-datepicker>\n</mat-form-field>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    DatepickerComponent.ctorParameters = function () { return []; };
    return DatepickerComponent;
}(InputControl));
export { DatepickerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9leHBlcmltZW50YWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBR2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RDtJQUt5QywrQ0FBWTtJQUc3QyxvTEFBb0w7SUFFMUw7ZUFDRSxpQkFBTztJQUNULENBQUM7Ozs7SUFFRCxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQy9CLDREQUE0RDtRQUM1RCx1QkFBdUI7UUFDdkIseUJBQXlCO1FBQ3pCLEtBQUs7SUFDUCxDQUFDOztnQkFwQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLHlnQkFBMEM7O2lCQUUzQzs7OztJQWlCRCwwQkFBQztDQUFBLEFBckJELENBS3lDLFlBQVksR0FnQnBEO1NBaEJZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZvcm1GaWVsZENvbnRyb2xfRXhwZXJpbWVudGFsIH0gZnJvbSBcIi4uL2Zvcm0tZmllbGQuY29udHJvbC5leHBlcmltZW50YWxcIjtcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgSW5wdXRDb250cm9sIH0gZnJvbSAnLi4vLi4vaW5wdXQvaW5wdXQuY29udHJvbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJ0b2NvLWRhdGVwaWNrZXJcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9kYXRlcGlja2VyLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi9kYXRlcGlja2VyLmNvbXBvbmVudC5zY3NzXCJdLFxufSlcbmV4cG9ydCBjbGFzcyBEYXRlcGlja2VyQ29tcG9uZW50IGV4dGVuZHMgSW5wdXRDb250cm9sXG4gIGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgICAgICAvLyBUT0RPOiBmb3IgZGF0ZXBpY2tlciwgISEhISB1c2UgaHR0cHM6Ly9zdGFja2JsaXR6LmNvbS9lZGl0L2FuZ3VsYXItbWF0ZXJpYWwyLXllYXItcGlja2VyLTd6OWs0dD9maWxlPWFwcCUyRmN1c3RvbS1kYXRlcGlja2VyJTJGeWVhci1waWNrZXItY29tcG9uZW50JTJGeWVhci1waWNrZXIuY29tcG9uZW50Lmh0bWxcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbml0KCcnLCAnJywgZmFsc2UsIHRydWUpO1xuICAgIC8vICh0aGlzLmNvbnRlbnQucGFyZW50Rm9ybVNlY3Rpb24gYXMgRm9ybUdyb3VwKS5hZGRDb250cm9sKFxuICAgIC8vICAgdGhpcy5jb250ZW50Lm5hbWUsXG4gICAgLy8gICB0aGlzLmludGVybmFsQ29udHJvbFxuICAgIC8vICk7XG4gIH1cbn1cbiJdfQ==