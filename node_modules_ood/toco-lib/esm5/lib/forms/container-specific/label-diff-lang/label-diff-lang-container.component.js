/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/container-specific/label-diff-lang/label-diff-lang-container.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ContainerControl } from '../../container/container.control';
/**
 * Represents a container control that allows the writing of a name of something in different language.
 */
var ContainerLabelDiffLangComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ContainerLabelDiffLangComponent, _super);
    function ContainerLabelDiffLangComponent() {
        return _super.call(this) || this;
    }
    /**
     * @return {?}
     */
    ContainerLabelDiffLangComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /* Sets the default values. */
        this.init(undefined);
    };
    /**
     * Initializes the `content` input property.
     * @param label The label to set. If the value is `undefined`, sets the label to `content.label`.
     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false.
     * @param alwaysHint If it is true then there is always at leat one hint start-aligned.
     */
    /**
     * Initializes the `content` input property.
     * @protected
     * @param {?} label The label to set. If the value is `undefined`, sets the label to `content.label`.
     * @return {?}
     */
    ContainerLabelDiffLangComponent.prototype.init = /**
     * Initializes the `content` input property.
     * @protected
     * @param {?} label The label to set. If the value is `undefined`, sets the label to `content.label`.
     * @return {?}
     */
    function (label) {
        /* Sets the default values. */
        _super.prototype.init.call(this, label);
    };
    ContainerLabelDiffLangComponent.decorators = [
        { type: Component, args: [{
                    selector: 'container-label-diff-lang',
                    template: "\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el \u00FAnico que est\u00E1 hecho. -->\n<fieldset class=\"container-simple-form-field\" [formGroup]=\"content.formSection\" [attr.aria-label]=\"content.ariaLabel\">\n    <legend class=\"container-simple-form-field-legend\">{{ content.label }}</legend>\n\n    <ng-template get-view-container></ng-template>\n    <!-- <button mat-raised-button color=\"primary\" (click)=\"content.parentFormSection.removeFromFormArray(content.name)\">\n        <mat-icon>remove_circle</mat-icon>\n    </button> -->\n\n</fieldset>\n",
                    host: {
                        '[style.minWidth]': 'content.minWidth',
                        '[style.width]': 'content.width'
                    },
                    styles: [".container-simple-form-field{margin:-4px 0 0;padding:0 12px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.container-simple-form-field-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]
                }] }
    ];
    /** @nocollapse */
    ContainerLabelDiffLangComponent.ctorParameters = function () { return []; };
    return ContainerLabelDiffLangComponent;
}(ContainerControl));
export { ContainerLabelDiffLangComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwtZGlmZi1sYW5nLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9jb250YWluZXItc3BlY2lmaWMvbGFiZWwtZGlmZi1sYW5nL2xhYmVsLWRpZmYtbGFuZy1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7Ozs7QUFLckU7SUFTcUQsMkRBQWdCO0lBRXBFO2VBRUMsaUJBQU87SUFDUixDQUFDOzs7O0lBRU0sa0RBQVE7OztJQUFmO1FBRUMsOEJBQThCO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVFOzs7OztPQUtHOzs7Ozs7O0lBQ08sOENBQUk7Ozs7OztJQUFkLFVBQWUsS0FBeUI7UUFFcEMsOEJBQThCO1FBRTlCLGlCQUFNLElBQUksWUFBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDOztnQkFqQ0osU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGdyQkFBeUQ7b0JBRXRELElBQUksRUFBRTt3QkFDRixrQkFBa0IsRUFBRSxrQkFBa0I7d0JBQ3RDLGVBQWUsRUFBRSxlQUFlO3FCQUNuQzs7aUJBQ0o7Ozs7SUEwQkQsc0NBQUM7Q0FBQSxBQWxDRCxDQVNxRCxnQkFBZ0IsR0F5QnBFO1NBekJZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29udGFpbmVyQ29udHJvbCB9IGZyb20gJy4uLy4uL2NvbnRhaW5lci9jb250YWluZXIuY29udHJvbCc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGNvbnRhaW5lciBjb250cm9sIHRoYXQgYWxsb3dzIHRoZSB3cml0aW5nIG9mIGEgbmFtZSBvZiBzb21ldGhpbmcgaW4gZGlmZmVyZW50IGxhbmd1YWdlLiBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnY29udGFpbmVyLWxhYmVsLWRpZmYtbGFuZycsXG5cdHRlbXBsYXRlVXJsOiAnLi9sYWJlbC1kaWZmLWxhbmctY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vbGFiZWwtZGlmZi1sYW5nLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS5taW5XaWR0aF0nOiAnY29udGVudC5taW5XaWR0aCcsXG4gICAgICAgICdbc3R5bGUud2lkdGhdJzogJ2NvbnRlbnQud2lkdGgnXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBDb250YWluZXJMYWJlbERpZmZMYW5nQ29tcG9uZW50IGV4dGVuZHMgQ29udGFpbmVyQ29udHJvbCBpbXBsZW1lbnRzIE9uSW5pdFxue1xuXHRwdWJsaWMgY29uc3RydWN0b3IoKVxuXHR7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkXG5cdHtcblx0XHQvKiBTZXRzIHRoZSBkZWZhdWx0IHZhbHVlcy4gKi9cbiAgICAgICAgdGhpcy5pbml0KHVuZGVmaW5lZCk7XG5cdH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBgY29udGVudGAgaW5wdXQgcHJvcGVydHkuIFxuICAgICAqIEBwYXJhbSBsYWJlbCBUaGUgbGFiZWwgdG8gc2V0LiBJZiB0aGUgdmFsdWUgaXMgYHVuZGVmaW5lZGAsIHNldHMgdGhlIGxhYmVsIHRvIGBjb250ZW50LmxhYmVsYC4gXG4gICAgICogQHBhcmFtIGlzQWJicmV2aWF0aW9uIElmIGl0IGlzIHRydWUgdGhlbiB0aGUgYGxhYmVsYCBhcmd1bWVudCByZXByZXNlbnRzIGFuIGFiYnJldmlhdGlvbjsgb3RoZXJ3aXNlLCBmYWxzZS4gXG4gICAgICogQHBhcmFtIGFsd2F5c0hpbnQgSWYgaXQgaXMgdHJ1ZSB0aGVuIHRoZXJlIGlzIGFsd2F5cyBhdCBsZWF0IG9uZSBoaW50IHN0YXJ0LWFsaWduZWQuIFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBpbml0KGxhYmVsOiBzdHJpbmcgfCB1bmRlZmluZWQpOiB2b2lkXG4gICAge1xuICAgICAgICAvKiBTZXRzIHRoZSBkZWZhdWx0IHZhbHVlcy4gKi9cblxuICAgICAgICBzdXBlci5pbml0KGxhYmVsKTtcbiAgICB9XG59XG4iXX0=