/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/action/button/button-action.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActionControl } from '../action.control';
/**
 * Represents a control that executes actions.
 */
var ActionButtonComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ActionButtonComponent, _super);
    function ActionButtonComponent() {
        return _super.call(this) || this;
    }
    /**
     * @return {?}
     */
    ActionButtonComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /* Sets the default values. */
        this.init('', '', true);
    };
    ActionButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'action-button',
                    template: "\n<!-- <button mat-icon-button -->\n<button mat-raised-button\n\tclass=\"action-button\"\n\tcolor=\"primary\"\n\t[attr.aria-label]=\"content.ariaLabel\"\n\t[matTooltip]=\"content.tooltip.label\"\n\t[disabled]=\"content.isDisabled(getInstance)\"\n\t(click)=\"content.click(getInstance)\"\n>\n\t<!-- Only renders one of these two `mat-icon` or nothing. -->\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.internal)\" class=\"mat-icon notranslate\" matPrefix [svgIcon]=\"content.icon.name\"></mat-icon>\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.external)\" class=\"mat-icon notranslate\" matPrefix>{{ content.icon.name }}</mat-icon>\n\t<!-- <mat-icon>{{ content.icon.name }}</mat-icon> -->\n\t{{ content.label }}\n</button>\n",
                    host: {
                        '[style.minWidth]': 'content.minWidth',
                        '[style.width]': 'content.width'
                    },
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ActionButtonComponent.ctorParameters = function () { return []; };
    return ActionButtonComponent;
}(ActionControl));
export { ActionButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9hY3Rpb24vYnV0dG9uL2J1dHRvbi1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7O0FBS2xEO0lBUzJDLGlEQUFhO0lBRXBEO2VBRUksaUJBQU87SUFDWCxDQUFDOzs7O0lBRU0sd0NBQVE7OztJQUFmO1FBRUksOEJBQThCO1FBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOztnQkFwQkosU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxlQUFlO29CQUN6QixneUJBQTZDO29CQUUxQyxJQUFJLEVBQUU7d0JBQ0Ysa0JBQWtCLEVBQUUsa0JBQWtCO3dCQUN0QyxlQUFlLEVBQUUsZUFBZTtxQkFDbkM7O2lCQUNKOzs7O0lBYUQsNEJBQUM7Q0FBQSxBQXJCRCxDQVMyQyxhQUFhLEdBWXZEO1NBWlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBBY3Rpb25Db250cm9sIH0gZnJvbSAnLi4vYWN0aW9uLmNvbnRyb2wnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb250cm9sIHRoYXQgZXhlY3V0ZXMgYWN0aW9ucy4gXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2FjdGlvbi1idXR0b24nLFxuXHR0ZW1wbGF0ZVVybDogJy4vYnV0dG9uLWFjdGlvbi5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2J1dHRvbi1hY3Rpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbc3R5bGUubWluV2lkdGhdJzogJ2NvbnRlbnQubWluV2lkdGgnLFxuICAgICAgICAnW3N0eWxlLndpZHRoXSc6ICdjb250ZW50LndpZHRoJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgQWN0aW9uQnV0dG9uQ29tcG9uZW50IGV4dGVuZHMgQWN0aW9uQ29udHJvbCBpbXBsZW1lbnRzIE9uSW5pdFxue1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpXG4gICAge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cblxuICAgIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkXG4gICAge1xuICAgICAgICAvKiBTZXRzIHRoZSBkZWZhdWx0IHZhbHVlcy4gKi9cbiAgICAgICAgdGhpcy5pbml0KCcnLCAnJywgdHJ1ZSk7XG4gICAgfVxufVxuIl19