/**
 * @fileoverview added by tsickle
 * Generated from: lib/search/record/record.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { Record } from '../../entities/public-api';
var RecordComponent = /** @class */ (function () {
    function RecordComponent() {
    }
    /**
     * @return {?}
     */
    RecordComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    RecordComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-record',
                    template: "<mat-card *ngIf=\"record\">\n    <mat-card-header>\n        <mat-card-title>{{record.title}}</mat-card-title>\n        <mat-card-subtitle>{{record.source_repo}}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n        {{record.description}}\n    </mat-card-content>\n    <mat-card-actions>\n        <mat-chip-list>\n            <mat-chip *ngFor=\"let keyword of record.keywords\">{{keyword}}</mat-chip>\n        </mat-chip-list>\n    </mat-card-actions>\n</mat-card>\n<mat-divider>\n</mat-divider>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    RecordComponent.ctorParameters = function () { return []; };
    RecordComponent.propDecorators = {
        record: [{ type: Input }]
    };
    return RecordComponent;
}());
export { RecordComponent };
if (false) {
    /** @type {?} */
    RecordComponent.prototype.record;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RvY28tbGliLyIsInNvdXJjZXMiOlsibGliL3NlYXJjaC9yZWNvcmQvcmVjb3JkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVuRDtJQVNFO0lBQWdCLENBQUM7Ozs7SUFFakIsa0NBQVE7OztJQUFSO0lBRUEsQ0FBQzs7Z0JBYkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixxaEJBQXNDOztpQkFFdkM7Ozs7O3lCQUdFLEtBQUs7O0lBUVIsc0JBQUM7Q0FBQSxBQWZELElBZUM7U0FWWSxlQUFlOzs7SUFFMUIsaUNBQ3NCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlY29yZCB9IGZyb20gJy4uLy4uL2VudGl0aWVzL3B1YmxpYy1hcGknO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0b2NvLXJlY29yZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZWNvcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9yZWNvcmQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBSZWNvcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyByZWNvcmQ6IFJlY29yZDtcbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcblxuICB9XG5cbn1cbiJdfQ==