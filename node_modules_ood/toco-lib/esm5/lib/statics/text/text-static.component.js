/**
 * @fileoverview added by tsickle
 * Generated from: lib/statics/text/text-static.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
/**
 * Represents a static control that shows a text.
 */
var StaticTextComponent = /** @class */ (function () {
    function StaticTextComponent() {
        this.width = '100%';
        this.appearance = 'outline';
        this.desc = undefined;
        this.value = undefined;
        this.valueByDefault = 'There is not any text to show!';
        this.textAlign = 'left';
        this.input_static = undefined;
    }
    /**
     * @return {?}
     */
    StaticTextComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.value === undefined)
            this.value = this.valueByDefault;
        this.input_static = new FormControl(this.value);
    };
    /**
     * Handler method that is called when the control's value changes in the UI.
     * It is always used to set the `value` input field as the component value.
     * For internal use only.
     */
    /**
     * Handler method that is called when the control's value changes in the UI.
     * It is always used to set the `value` input field as the component value.
     * For internal use only.
     * @return {?}
     */
    StaticTextComponent.prototype.handleInput = /**
     * Handler method that is called when the control's value changes in the UI.
     * It is always used to set the `value` input field as the component value.
     * For internal use only.
     * @return {?}
     */
    function () {
        /* It always sets the `value` input field as the component value. */
        this.input_static.setValue(this.value);
    };
    StaticTextComponent.decorators = [
        { type: Component, args: [{
                    selector: 'static-text',
                    template: "\n<mat-form-field class=\"text-mat-form-field control-without-interactivity\" [appearance]=\"appearance\">\n    <mat-label>{{ desc }}</mat-label>\n    <input matInput [formControl]=\"input_static\" [style.textAlign]=\"textAlign\" [attr.aria-label]=\"desc\" (input)=\"handleInput()\" />\n</mat-form-field>\n",
                    host: {
                        '[style.width]': 'width'
                    },
                    styles: [".text-mat-form-field{width:100%}.control-without-interactivity{pointer-events:none}"]
                }] }
    ];
    /** @nocollapse */
    StaticTextComponent.ctorParameters = function () { return []; };
    StaticTextComponent.propDecorators = {
        width: [{ type: Input }],
        appearance: [{ type: Input }],
        desc: [{ type: Input }],
        value: [{ type: Input }],
        valueByDefault: [{ type: Input }],
        textAlign: [{ type: Input }]
    };
    return StaticTextComponent;
}());
export { StaticTextComponent };
if (false) {
    /**
     * The control's width.
     * The width of the content area, padding area or border area (depending on `box-sizing`) of certain boxes.
     * By default, its value is `'100%'`.
     * @type {?}
     */
    StaticTextComponent.prototype.width;
    /**
     * The control's appearance.
     * By default, its value is `'outline'`.
     * @type {?}
     */
    StaticTextComponent.prototype.appearance;
    /**
     * The control's description.
     * By default, its value is `undefined` and it is not showed.
     * @type {?}
     */
    StaticTextComponent.prototype.desc;
    /**
     * The control's value.
     * By default, its value is `undefined`.
     * @type {?}
     */
    StaticTextComponent.prototype.value;
    /**
     * The control's default value.
     * By default, its value is `'There is not any text to show!'`.
     * @type {?}
     */
    StaticTextComponent.prototype.valueByDefault;
    /**
     * Returns the control's text align.
     * By default, its value is `'left'`.
     * @type {?}
     */
    StaticTextComponent.prototype.textAlign;
    /**
     * Returns a reference to the `FormControl` that tracks the value and validity state
     * of the internal control that contains the text input.
     * For internal use only.
     * @type {?}
     */
    StaticTextComponent.prototype.input_static;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1zdGF0aWMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdG9jby1saWIvIiwic291cmNlcyI6WyJsaWIvc3RhdGljcy90ZXh0L3RleHQtc3RhdGljLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUs3QztJQTREQztRQUVDLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxjQUFjLEdBQUcsZ0NBQWdDLENBQUM7UUFDdkQsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7UUFFeEIsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVTLHNDQUFROzs7SUFBZjtRQUVGLElBQUcsSUFBSSxDQUFDLEtBQUssS0FBSyxTQUFTO1lBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBRTlELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRDs7OztPQUlHOzs7Ozs7O0lBQ0kseUNBQVc7Ozs7OztJQUFsQjtRQUVDLG9FQUFvRTtRQUNwRSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Z0JBeEZELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsYUFBYTtvQkFDdkIsOFRBQTJDO29CQUV4QyxJQUFJLEVBQUU7d0JBQ0YsZUFBZSxFQUFFLE9BQU87cUJBQzNCOztpQkFDSjs7Ozs7d0JBUUMsS0FBSzs2QkFPTCxLQUFLO3VCQU9MLEtBQUs7d0JBT0wsS0FBSztpQ0FPTCxLQUFLOzRCQU9MLEtBQUs7O0lBdUNQLDBCQUFDO0NBQUEsQUF6RkQsSUF5RkM7U0FqRlksbUJBQW1COzs7Ozs7OztJQU8vQixvQ0FDcUI7Ozs7OztJQU1yQix5Q0FDMEI7Ozs7OztJQU0xQixtQ0FDb0I7Ozs7OztJQU1wQixvQ0FDcUI7Ozs7OztJQU1yQiw2Q0FDOEI7Ozs7OztJQU05Qix3Q0FDNEI7Ozs7Ozs7SUFPNUIsMkNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIHN0YXRpYyBjb250cm9sIHRoYXQgc2hvd3MgYSB0ZXh0LiBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnc3RhdGljLXRleHQnLFxuXHR0ZW1wbGF0ZVVybDogJy4vdGV4dC1zdGF0aWMuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi90ZXh0LXN0YXRpYy5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS53aWR0aF0nOiAnd2lkdGgnXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBTdGF0aWNUZXh0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0XG57XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRyb2wncyB3aWR0aC4gXG4gICAgICogVGhlIHdpZHRoIG9mIHRoZSBjb250ZW50IGFyZWEsIHBhZGRpbmcgYXJlYSBvciBib3JkZXIgYXJlYSAoZGVwZW5kaW5nIG9uIGBib3gtc2l6aW5nYCkgb2YgY2VydGFpbiBib3hlcy4gXG4gICAgICogQnkgZGVmYXVsdCwgaXRzIHZhbHVlIGlzIGAnMTAwJSdgLiBcbiAgICAgKi9cblx0QElucHV0KClcblx0cHVibGljIHdpZHRoOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29udHJvbCdzIGFwcGVhcmFuY2UuIFxuICAgICAqIEJ5IGRlZmF1bHQsIGl0cyB2YWx1ZSBpcyBgJ291dGxpbmUnYC4gXG4gICAgICovXG5cdEBJbnB1dCgpXG5cdHB1YmxpYyBhcHBlYXJhbmNlOiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIFRoZSBjb250cm9sJ3MgZGVzY3JpcHRpb24uIFxuXHQgKiBCeSBkZWZhdWx0LCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAgYW5kIGl0IGlzIG5vdCBzaG93ZWQuIFxuXHQgKi9cblx0QElucHV0KClcblx0cHVibGljIGRlc2M6IHN0cmluZztcblxuXHQvKipcblx0ICogVGhlIGNvbnRyb2wncyB2YWx1ZS4gXG5cdCAqIEJ5IGRlZmF1bHQsIGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYC4gXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRwdWJsaWMgdmFsdWU6IHN0cmluZztcblxuXHQvKipcblx0ICogVGhlIGNvbnRyb2wncyBkZWZhdWx0IHZhbHVlLiBcblx0ICogQnkgZGVmYXVsdCwgaXRzIHZhbHVlIGlzIGAnVGhlcmUgaXMgbm90IGFueSB0ZXh0IHRvIHNob3chJ2AuIFxuXHQgKi9cblx0QElucHV0KClcblx0cHVibGljIHZhbHVlQnlEZWZhdWx0OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb250cm9sJ3MgdGV4dCBhbGlnbi4gXG4gICAgICogQnkgZGVmYXVsdCwgaXRzIHZhbHVlIGlzIGAnbGVmdCdgLiBcbiAgICAgKi9cblx0QElucHV0KClcbiAgICBwdWJsaWMgdGV4dEFsaWduOiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIFJldHVybnMgYSByZWZlcmVuY2UgdG8gdGhlIGBGb3JtQ29udHJvbGAgdGhhdCB0cmFja3MgdGhlIHZhbHVlIGFuZCB2YWxpZGl0eSBzdGF0ZSBcblx0ICogb2YgdGhlIGludGVybmFsIGNvbnRyb2wgdGhhdCBjb250YWlucyB0aGUgdGV4dCBpbnB1dC4gXG5cdCAqIEZvciBpbnRlcm5hbCB1c2Ugb25seS4gXG5cdCAqL1xuXHRwdWJsaWMgaW5wdXRfc3RhdGljOiBGb3JtQ29udHJvbDtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoKVxuXHR7XG5cdFx0dGhpcy53aWR0aCA9ICcxMDAlJztcblx0XHR0aGlzLmFwcGVhcmFuY2UgPSAnb3V0bGluZSc7XG5cdFx0dGhpcy5kZXNjID0gdW5kZWZpbmVkO1xuXHRcdHRoaXMudmFsdWUgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy52YWx1ZUJ5RGVmYXVsdCA9ICdUaGVyZSBpcyBub3QgYW55IHRleHQgdG8gc2hvdyEnO1xuXHRcdHRoaXMudGV4dEFsaWduID0gJ2xlZnQnO1xuXG5cdFx0dGhpcy5pbnB1dF9zdGF0aWMgPSB1bmRlZmluZWQ7XG5cdH1cblxuICAgIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkXG5cdHtcblx0XHRpZih0aGlzLnZhbHVlID09PSB1bmRlZmluZWQpIHRoaXMudmFsdWUgPSB0aGlzLnZhbHVlQnlEZWZhdWx0O1xuXG5cdFx0dGhpcy5pbnB1dF9zdGF0aWMgPSBuZXcgRm9ybUNvbnRyb2wodGhpcy52YWx1ZSk7XG5cdH1cblxuXHQvKipcblx0ICogSGFuZGxlciBtZXRob2QgdGhhdCBpcyBjYWxsZWQgd2hlbiB0aGUgY29udHJvbCdzIHZhbHVlIGNoYW5nZXMgaW4gdGhlIFVJLiBcblx0ICogSXQgaXMgYWx3YXlzIHVzZWQgdG8gc2V0IHRoZSBgdmFsdWVgIGlucHV0IGZpZWxkIGFzIHRoZSBjb21wb25lbnQgdmFsdWUuIFxuXHQgKiBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuIFxuXHQgKi9cblx0cHVibGljIGhhbmRsZUlucHV0KCk6IHZvaWRcblx0e1xuXHRcdC8qIEl0IGFsd2F5cyBzZXRzIHRoZSBgdmFsdWVgIGlucHV0IGZpZWxkIGFzIHRoZSBjb21wb25lbnQgdmFsdWUuICovXG5cdFx0dGhpcy5pbnB1dF9zdGF0aWMuc2V0VmFsdWUodGhpcy52YWx1ZSk7XG5cdH1cbn1cbiJdfQ==