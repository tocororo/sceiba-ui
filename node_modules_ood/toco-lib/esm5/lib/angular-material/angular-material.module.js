/**
 * @fileoverview added by tsickle
 * Generated from: lib/angular-material/angular-material.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { LayoutModule } from '@angular/cdk/layout';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatButtonModule } from '@angular/material/button';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatCardModule } from '@angular/material/card';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatOptionModule, MatNativeDateModule } from '@angular/material/core';
import { MatDialogModule } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatGridListModule } from '@angular/material/grid-list';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatMenuModule } from '@angular/material/menu';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatSelectModule } from '@angular/material/select';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatTableModule } from '@angular/material/table';
import { MatSortModule } from '@angular/material';
import { MatTabsModule } from '@angular/material/tabs';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatListModule } from '@angular/material/list';
import { MatTreeModule } from '@angular/material/tree';
import { MatBadgeModule } from '@angular/material/badge';
import { MatStepperModule } from '@angular/material/stepper';
import { MatRippleModule } from '@angular/material/core';
import { MatDividerModule } from '@angular/material/divider';
/**
 * A module that contains all angular material modules that are needed.
 */
var AngularMaterialModule = /** @class */ (function () {
    function AngularMaterialModule() {
    }
    AngularMaterialModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        LayoutModule,
                        MatButtonModule,
                        MatButtonToggleModule,
                        MatMenuModule,
                        MatToolbarModule,
                        MatTooltipModule,
                        MatIconModule,
                        MatCardModule,
                        MatInputModule,
                        MatCheckboxModule,
                        MatFormFieldModule,
                        MatDialogModule,
                        MatGridListModule,
                        MatSnackBarModule,
                        MatProgressBarModule,
                        MatProgressSpinnerModule,
                        MatSidenavModule,
                        MatTabsModule,
                        MatChipsModule,
                        MatTableModule,
                        MatSortModule,
                        MatPaginatorModule,
                        MatSlideToggleModule,
                        MatSelectModule,
                        MatOptionModule,
                        MatAutocompleteModule,
                        MatExpansionModule,
                        MatDatepickerModule,
                        MatNativeDateModule,
                        MatListModule,
                        MatTreeModule,
                        MatBadgeModule,
                        MatStepperModule,
                        MatRippleModule,
                        MatDividerModule,
                    ],
                    exports: [
                        LayoutModule,
                        MatButtonModule,
                        MatButtonToggleModule,
                        MatMenuModule,
                        MatToolbarModule,
                        MatTooltipModule,
                        MatIconModule,
                        MatCardModule,
                        MatInputModule,
                        MatCheckboxModule,
                        MatFormFieldModule,
                        MatDialogModule,
                        MatGridListModule,
                        MatSnackBarModule,
                        MatProgressSpinnerModule,
                        MatProgressBarModule,
                        MatSidenavModule,
                        MatTabsModule,
                        MatChipsModule,
                        MatTableModule,
                        MatSortModule,
                        MatPaginatorModule,
                        MatSlideToggleModule,
                        MatSelectModule,
                        MatOptionModule,
                        MatAutocompleteModule,
                        MatExpansionModule,
                        MatDatepickerModule,
                        MatNativeDateModule,
                        MatListModule,
                        MatTreeModule,
                        MatBadgeModule,
                        MatStepperModule,
                        MatRippleModule,
                        MatDividerModule,
                    ]
                },] }
    ];
    return AngularMaterialModule;
}());
export { AngularMaterialModule };
//# sourceMappingURL=data:application/json;base64,