/**
 * @fileoverview added by tsickle
 * Generated from: lib/backend/notification.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { HttpService } from '../core/public-api';
import { Environment } from '../core/public-api';
var NotificationService = /** @class */ (function (_super) {
    tslib_1.__extends(NotificationService, _super);
    function NotificationService(env, http) {
        var _this = _super.call(this, http) || this;
        _this.env = env;
        _this.http = http;
        return _this;
    }
    /**
     * @param {?} count
     * @param {?} page
     * @return {?}
     */
    NotificationService.prototype.getNotificationsList = /**
     * @param {?} count
     * @param {?} page
     * @return {?}
     */
    function (count, page) {
        return this.http.get(this.env.sceibaApi + 'notification/list');
    };
    /**
     * @param {?} id
     * @return {?}
     */
    NotificationService.prototype.setNotificationViewed = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.http.get(this.env.sceibaApi + 'notification/viewed/' + id);
    };
    NotificationService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    NotificationService.ctorParameters = function () { return [
        { type: Environment },
        { type: HttpClient }
    ]; };
    return NotificationService;
}(HttpService));
export { NotificationService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NotificationService.prototype.env;
    /**
     * @type {?}
     * @protected
     */
    NotificationService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9iYWNrZW5kL25vdGlmaWNhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR2xELE9BQU8sRUFBRSxXQUFXLEVBQVksTUFBTSxvQkFBb0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFakQ7SUFDeUMsK0NBQVc7SUFHaEQsNkJBQW9CLEdBQWdCLEVBQVksSUFBZ0I7UUFBaEUsWUFDSSxrQkFBTSxJQUFJLENBQUMsU0FDZDtRQUZtQixTQUFHLEdBQUgsR0FBRyxDQUFhO1FBQVksVUFBSSxHQUFKLElBQUksQ0FBWTs7SUFFaEUsQ0FBQzs7Ozs7O0lBRUQsa0RBQW9COzs7OztJQUFwQixVQUFxQixLQUFhLEVBQUUsSUFBWTtRQUM1QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFnQixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7Ozs7O0lBR0QsbURBQXFCOzs7O0lBQXJCLFVBQXNCLEVBQVU7UUFDNUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBZ0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUMsc0JBQXNCLEdBQUMsRUFBRSxDQUFDLENBQUM7SUFDdEYsQ0FBQzs7Z0JBZkosVUFBVTs7OztnQkFGRixXQUFXO2dCQUpYLFVBQVU7O0lBc0JuQiwwQkFBQztDQUFBLEFBaEJELENBQ3lDLFdBQVcsR0FlbkQ7U0FmWSxtQkFBbUI7Ozs7OztJQUdoQixrQ0FBd0I7Ozs7O0lBQUUsbUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSHR0cFNlcnZpY2UsIFJlc3BvbnNlIH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcbmltcG9ydCB7IEVudmlyb25tZW50IH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvblNlcnZpY2UgZXh0ZW5kcyBIdHRwU2VydmljZSB7XG5cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZW52OiBFbnZpcm9ubWVudCwgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQpIHtcbiAgICAgICAgc3VwZXIoaHR0cCk7XG4gICAgfVxuXG4gICAgZ2V0Tm90aWZpY2F0aW9uc0xpc3QoY291bnQ6IG51bWJlciwgcGFnZTogbnVtYmVyKTogT2JzZXJ2YWJsZTxSZXNwb25zZTxhbnk+PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICdub3RpZmljYXRpb24vbGlzdCcpO1xuICAgIH1cblxuXG4gICAgc2V0Tm90aWZpY2F0aW9uVmlld2VkKGlkOiBudW1iZXIpOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+e1xuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxSZXNwb25zZTxhbnk+Pih0aGlzLmVudi5zY2VpYmFBcGkrJ25vdGlmaWNhdGlvbi92aWV3ZWQvJytpZCk7XG4gICAgfVxufVxuIl19