/**
 * @fileoverview added by tsickle
 * Generated from: lib/backend/catalog.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 *   Copyright (c) 2020 Universidad de Pinar del Río "Hermanos Saíz Montes de Oca"
 *   All rights reserved.
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { HttpService } from '../core/public-api';
import { Environment } from '../core/public-api';
var CatalogService = /** @class */ (function (_super) {
    tslib_1.__extends(CatalogService, _super);
    function CatalogService(env, http) {
        var _this = _super.call(this, http) || this;
        _this.env = env;
        _this.http = http;
        return _this;
    }
    /**
     * @param {?} count
     * @param {?} page
     * @param {?} parameters
     * @return {?}
     */
    CatalogService.prototype.getJournalsPage = /**
     * @param {?} count
     * @param {?} page
     * @param {?} parameters
     * @return {?}
     */
    function (count, page, parameters) {
        try {
            /** @type {?} */
            var params = new HttpParams();
            if (parameters) {
                for (var i = 0; i < parameters.length; i++) {
                    params = params.set(parameters[i].field, parameters[i].value);
                }
            }
            /** @type {?} */
            var options = {
                params: params.set('size', count.toString(10)).set('page', (page).toString(10))
            };
            return this.http.get(this.env.sceibaApi + 'source/journals', options);
        }
        catch (error) {
        }
    };
    /**
     * @return {?}
     */
    CatalogService.prototype.getJournalsCount = /**
     * @return {?}
     */
    function () {
        try {
            return this.http.get(this.env.sceibaApi + 'source/count');
        }
        catch (error) {
        }
    };
    /**
     * @return {?}
     */
    CatalogService.prototype.getJournalsVocab = /**
     * @return {?}
     */
    function () {
        return this.http.get(this.env.sceibaApi + 'taxonomy/vocabulary/list');
    };
    /**
     * @param {?} vocabId
     * @return {?}
     */
    CatalogService.prototype.getTerminosByVocab = /**
     * @param {?} vocabId
     * @return {?}
     */
    function (vocabId) {
        try {
            return this.http.get(this.env.sceibaApi + 'taxonomy/term/list/' + vocabId);
        }
        catch (error) {
        }
    };
    //   getPeople():Observable<People_Response>{
    //     return this.http.get<People_Response>(this.dominio);
    //   }
    //   getPeopleById(id: number):Observable<Person_Response>{
    //         return this.http.get<Person_Response>(this.dominio+'/'+id);
    //     }
    //   getPeoplepaginator(inicio: number, cant: number):Observable<People_Response>{
    //       return this.http.get<People_Response>(this.dominio+'/'+inicio+'/'+cant);
    //   }
    //     addPeople(body):Observable<Response>{
    //       return this.http.post<Response>(this.dominio,body);
    //   }
    //   getPeople():Observable<People_Response>{
    //     return this.http.get<People_Response>(this.dominio);
    //   }
    //   getPeopleById(id: number):Observable<Person_Response>{
    //         return this.http.get<Person_Response>(this.dominio+'/'+id);
    //     }
    //   getPeoplepaginator(inicio: number, cant: number):Observable<People_Response>{
    //       return this.http.get<People_Response>(this.dominio+'/'+inicio+'/'+cant);
    //   }
    //     addPeople(body):Observable<Response>{
    //       return this.http.post<Response>(this.dominio,body);
    //   }
    /**
     * @param {?} uuid
     * @return {?}
     */
    CatalogService.prototype.getSourceByUUID = 
    //   getPeople():Observable<People_Response>{
    //     return this.http.get<People_Response>(this.dominio);
    //   }
    //   getPeopleById(id: number):Observable<Person_Response>{
    //         return this.http.get<Person_Response>(this.dominio+'/'+id);
    //     }
    //   getPeoplepaginator(inicio: number, cant: number):Observable<People_Response>{
    //       return this.http.get<People_Response>(this.dominio+'/'+inicio+'/'+cant);
    //   }
    //     addPeople(body):Observable<Response>{
    //       return this.http.post<Response>(this.dominio,body);
    //   }
    /**
     * @param {?} uuid
     * @return {?}
     */
    function (uuid) {
        /** @type {?} */
        var req = this.env.sceibaApi + 'source/' + uuid;
        return this.http.get(req);
    };
    /**
     * @param {?} uuid
     * @return {?}
     */
    CatalogService.prototype.getSourcesOrgAggregation = /**
     * @param {?} uuid
     * @return {?}
     */
    function (uuid) {
        /** @type {?} */
        var req = this.env.sceibaApi + 'source/aggs/org/' + uuid;
        return this.http.get(req);
    };
    CatalogService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    CatalogService.ctorParameters = function () { return [
        { type: Environment },
        { type: HttpClient }
    ]; };
    return CatalogService;
}(HttpService));
export { CatalogService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CatalogService.prototype.env;
    /**
     * @type {?}
     * @protected
     */
    CatalogService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0YWxvZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vdG9jby1saWIvIiwic291cmNlcyI6WyJsaWIvYmFja2VuZC9jYXRhbG9nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQU1BLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUc5RCxPQUFPLEVBQUUsV0FBVyxFQUFZLE1BQU0sb0JBQW9CLENBQUM7QUFHM0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWpEO0lBQ29DLDBDQUFXO0lBRTNDLHdCQUFvQixHQUFnQixFQUFZLElBQWdCO1FBQWhFLFlBQ0ksa0JBQU0sSUFBSSxDQUFDLFNBQ2Q7UUFGbUIsU0FBRyxHQUFILEdBQUcsQ0FBYTtRQUFZLFVBQUksR0FBSixJQUFJLENBQVk7O0lBRWhFLENBQUM7Ozs7Ozs7SUFFRCx3Q0FBZTs7Ozs7O0lBQWYsVUFBZ0IsS0FBYSxFQUFFLElBQVksRUFBRSxVQUFnQztRQUN6RSxJQUFJOztnQkFDSSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUU7WUFDN0IsSUFBSSxVQUFVLEVBQUU7Z0JBQ1osS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ3hDLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFBO2lCQUNoRTthQUNKOztnQkFDSyxPQUFPLEdBQUc7Z0JBQ1osTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ2xGO1lBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBZ0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDeEY7UUFDRCxPQUFPLEtBQUssRUFBRTtTQUNiO0lBQ0wsQ0FBQzs7OztJQUVELHlDQUFnQjs7O0lBQWhCO1FBQ0ksSUFBSTtZQUNBLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWdCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLGNBQWMsQ0FBQyxDQUFDO1NBQzVFO1FBQUMsT0FBTyxLQUFLLEVBQUU7U0FFZjtJQUNMLENBQUM7Ozs7SUFFRCx5Q0FBZ0I7OztJQUFoQjtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWdCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLDBCQUEwQixDQUFDLENBQUM7SUFDekYsQ0FBQzs7Ozs7SUFDRCwyQ0FBa0I7Ozs7SUFBbEIsVUFBbUIsT0FBZTtRQUM5QixJQUFJO1lBQ0EsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBTSxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsR0FBRyxPQUFPLENBQUMsQ0FBQztTQUNuRjtRQUFDLE9BQU8sS0FBSyxFQUFFO1NBRWY7SUFDTCxDQUFDO0lBRUQsNkNBQTZDO0lBQzdDLDJEQUEyRDtJQUUzRCxNQUFNO0lBQ04sMkRBQTJEO0lBQzNELHNFQUFzRTtJQUV0RSxRQUFRO0lBRVIsa0ZBQWtGO0lBQ2xGLGlGQUFpRjtJQUVqRixNQUFNO0lBQ04sNENBQTRDO0lBQzVDLDREQUE0RDtJQUM1RCxNQUFNOzs7Ozs7Ozs7Ozs7Ozs7OztJQUVOLHdDQUFlOzs7Ozs7Ozs7Ozs7Ozs7OztJQUFmLFVBQWdCLElBQUk7O1lBQ1YsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLFNBQVMsR0FBRyxJQUFJO1FBQ2pELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWdCLEdBQUcsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBQ0QsaURBQXdCOzs7O0lBQXhCLFVBQXlCLElBQUk7O1lBQ3JCLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsR0FBRyxJQUFJO1FBQzFELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWdCLEdBQUcsQ0FBQyxDQUFDO0lBQzNDLENBQUM7O2dCQW5FSixVQUFVOzs7O2dCQUZGLFdBQVc7Z0JBTlgsVUFBVTs7SUE0RW5CLHFCQUFDO0NBQUEsQUFwRUQsQ0FDb0MsV0FBVyxHQW1FOUM7U0FuRVksY0FBYzs7Ozs7O0lBRVgsNkJBQXdCOzs7OztJQUFFLDhCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiAgIENvcHlyaWdodCAoYykgMjAyMCBVbml2ZXJzaWRhZCBkZSBQaW5hciBkZWwgUsOtbyBcIkhlcm1hbm9zIFNhw616IE1vbnRlcyBkZSBPY2FcIlxuICogICBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICovXG5cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cFBhcmFtcyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSHR0cFNlcnZpY2UsIFJlc3BvbnNlIH0gZnJvbSAnLi4vY29yZS9wdWJsaWMtYXBpJztcbmltcG9ydCB7IEZpbHRlckh0dHBNYXAgfSBmcm9tICcuLi9maWx0ZXJzL3B1YmxpYy1hcGknO1xuXG5pbXBvcnQgeyBFbnZpcm9ubWVudCB9IGZyb20gJy4uL2NvcmUvcHVibGljLWFwaSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDYXRhbG9nU2VydmljZSBleHRlbmRzIEh0dHBTZXJ2aWNlIHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZW52OiBFbnZpcm9ubWVudCwgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQpIHtcbiAgICAgICAgc3VwZXIoaHR0cCk7XG4gICAgfVxuXG4gICAgZ2V0Sm91cm5hbHNQYWdlKGNvdW50OiBudW1iZXIsIHBhZ2U6IG51bWJlciwgcGFyYW1ldGVyczogQXJyYXk8RmlsdGVySHR0cE1hcD4pOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxldCBwYXJhbXMgPSBuZXcgSHR0cFBhcmFtcygpO1xuICAgICAgICAgICAgaWYgKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhcmFtZXRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zID0gcGFyYW1zLnNldChwYXJhbWV0ZXJzW2ldLmZpZWxkLCBwYXJhbWV0ZXJzW2ldLnZhbHVlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMuc2V0KCdzaXplJywgY291bnQudG9TdHJpbmcoMTApKS5zZXQoJ3BhZ2UnLCAocGFnZSkudG9TdHJpbmcoMTApKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICdzb3VyY2Uvam91cm5hbHMnLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEpvdXJuYWxzQ291bnQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PFJlc3BvbnNlPGFueT4+KHRoaXMuZW52LnNjZWliYUFwaSArICdzb3VyY2UvY291bnQnKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcblxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0Sm91cm5hbHNWb2NhYigpOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8UmVzcG9uc2U8YW55Pj4odGhpcy5lbnYuc2NlaWJhQXBpICsgJ3RheG9ub215L3ZvY2FidWxhcnkvbGlzdCcpO1xuICAgIH1cbiAgICBnZXRUZXJtaW5vc0J5Vm9jYWIodm9jYWJJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PGFueT4odGhpcy5lbnYuc2NlaWJhQXBpICsgJ3RheG9ub215L3Rlcm0vbGlzdC8nICsgdm9jYWJJZCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vICAgZ2V0UGVvcGxlKCk6T2JzZXJ2YWJsZTxQZW9wbGVfUmVzcG9uc2U+e1xuICAgIC8vICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxQZW9wbGVfUmVzcG9uc2U+KHRoaXMuZG9taW5pbyk7XG5cbiAgICAvLyAgIH1cbiAgICAvLyAgIGdldFBlb3BsZUJ5SWQoaWQ6IG51bWJlcik6T2JzZXJ2YWJsZTxQZXJzb25fUmVzcG9uc2U+e1xuICAgIC8vICAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8UGVyc29uX1Jlc3BvbnNlPih0aGlzLmRvbWluaW8rJy8nK2lkKTtcblxuICAgIC8vICAgICB9XG5cbiAgICAvLyAgIGdldFBlb3BsZXBhZ2luYXRvcihpbmljaW86IG51bWJlciwgY2FudDogbnVtYmVyKTpPYnNlcnZhYmxlPFBlb3BsZV9SZXNwb25zZT57XG4gICAgLy8gICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8UGVvcGxlX1Jlc3BvbnNlPih0aGlzLmRvbWluaW8rJy8nK2luaWNpbysnLycrY2FudCk7XG5cbiAgICAvLyAgIH1cbiAgICAvLyAgICAgYWRkUGVvcGxlKGJvZHkpOk9ic2VydmFibGU8UmVzcG9uc2U+e1xuICAgIC8vICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxSZXNwb25zZT4odGhpcy5kb21pbmlvLGJvZHkpO1xuICAgIC8vICAgfVxuXG4gICAgZ2V0U291cmNlQnlVVUlEKHV1aWQpOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+IHtcbiAgICAgICAgY29uc3QgcmVxID0gdGhpcy5lbnYuc2NlaWJhQXBpICsgJ3NvdXJjZS8nICsgdXVpZDtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8UmVzcG9uc2U8YW55Pj4ocmVxKTtcbiAgICB9XG4gICAgZ2V0U291cmNlc09yZ0FnZ3JlZ2F0aW9uKHV1aWQpOiBPYnNlcnZhYmxlPFJlc3BvbnNlPGFueT4+IHtcbiAgICAgIGNvbnN0IHJlcSA9IHRoaXMuZW52LnNjZWliYUFwaSArICdzb3VyY2UvYWdncy9vcmcvJyArIHV1aWQ7XG4gICAgICByZXR1cm4gdGhpcy5odHRwLmdldDxSZXNwb25zZTxhbnk+PihyZXEpO1xuICAgIH1cbn1cbiJdfQ==