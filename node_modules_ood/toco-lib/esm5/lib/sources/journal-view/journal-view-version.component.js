/**
 * @fileoverview added by tsickle
 * Generated from: lib/sources/journal-view/journal-view-version.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { MatSnackBar } from '@angular/material';
import { MessageHandler, StatusCode } from '../../core/public-api';
import { JournalVersion, VocabulariesInmutableNames } from '../../entities/public-api';
import { JournalDataType } from './journal-view.component';
var JournalViewVersionComponent = /** @class */ (function () {
    function JournalViewVersionComponent(_snackBar) {
        this._snackBar = _snackBar;
        this.journalDataType = JournalDataType;
        this.panelOpenState = false;
        this.currentJournalChecked = false;
        this.editingJournalChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.currentJournal == undefined)
            this.currentJournal = new JournalVersion();
        this.loadJournalData();
        if (this.type == undefined)
            this.type = JournalDataType.default;
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        console.log("***////****////***///");
        this.ngOnInit();
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.loadJournalData = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentDataBaseTerms = new Array();
        this.currentGroupTerms = new Array();
        this.currentInstitutionTerms = new Array();
        this.currentLicenceTerms = new Array();
        this.currentProvinceTerms = new Array();
        this.currentSubjectTerms = new Array();
        this.vocabularies = VocabulariesInmutableNames;
        if (this.currentJournal.data.classifications) {
            this.currentJournal.data.classifications.forEach((/**
             * @param {?} termSource
             * @return {?}
             */
            function (termSource) {
                switch (termSource.vocabulary.toString()) {
                    case VocabulariesInmutableNames.CUBAN_INTITUTIONS:
                        _this.currentInstitutionTerms.push(termSource);
                        break;
                    case VocabulariesInmutableNames.INDEXES:
                        _this.currentDataBaseTerms.push(termSource);
                        break;
                    case VocabulariesInmutableNames.INDEXES_CLASIFICATION:
                        _this.currentGroupTerms.push(termSource);
                        break;
                    case VocabulariesInmutableNames.LICENCES:
                        _this.currentLicenceTerms.push(termSource);
                        break;
                    case VocabulariesInmutableNames.CUBAN_PROVINCES:
                        _this.currentProvinceTerms.push(termSource);
                        break;
                    case VocabulariesInmutableNames.SUBJECTS:
                        _this.currentSubjectTerms.push(termSource);
                        break;
                }
            }));
        }
    };
    /**
     * Changes the field `reviewed` of a `Journal`, that means the user saw these version
     * and consider it not has more information.
     */
    /**
     * Changes the field `reviewed` of a `Journal`, that means the user saw these version
     * and consider it not has more information.
     * @return {?}
     */
    JournalViewVersionComponent.prototype.markAsViewed = /**
     * Changes the field `reviewed` of a `Journal`, that means the user saw these version
     * and consider it not has more information.
     * @return {?}
     */
    function () {
        if (this.currentJournalChecked) {
            this.currentJournal.data.reviewed = true;
            // TODO: hacer el request al backend de marcar la version como vista o
            /** @type {?} */
            var m = new MessageHandler(this._snackBar);
            m.showMessage(StatusCode.OK, "RevisiÃ³n marcada como vista!!!");
        }
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.fieldEditingJournalChange = /**
     * @return {?}
     */
    function () {
        this.editingJournalChange.emit(this.editingJournal);
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.replace = /**
     * @return {?}
     */
    function () {
        this.editingJournal = this.currentJournal;
        // this.editingJournal.data.classifications = [];
        // this.editingJournal.data.classifications = this.currentJournal.data.classifications;
        this.editingJournalChange.emit(this.editingJournal);
        // // this.currentJournal.data.classifications.forEach((termSource: SourceClasification) => {
        // //     this.editingJournal.data.classifications.push(termSource);
        // // });
        console.log("editingJournal remplazado", this.editingJournal);
    };
    /**
     * Concats a `Journal` property by a equal property in `JournalData`.
     * @param type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.
     * @param termId is a `Term` identifyer, only needs if `type` is `JournalDataType.term`.
     * @NOTE this function call `replace(..., true)`
     */
    /**
     * Concats a `Journal` property by a equal property in `JournalData`.
     * \@NOTE this function call `replace(..., true)`
     * @param {?} type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.
     * @param {?} termSource
     * @return {?}
     */
    JournalViewVersionComponent.prototype.concat = /**
     * Concats a `Journal` property by a equal property in `JournalData`.
     * \@NOTE this function call `replace(..., true)`
     * @param {?} type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.
     * @param {?} termSource
     * @return {?}
     */
    function (type, termSource) {
        if (type == JournalDataType.term) {
            /** @type {?} */
            var notFound = true;
            for (var index = 0; index < this.editingJournal.data.classifications.length; index++) {
                /** @type {?} */
                var element = this.editingJournal.data.classifications[index];
                if (element.id == termSource.id) {
                    this.editingJournal.data.classifications[index].data =
                        termSource.data;
                    notFound = false;
                }
            }
            if (notFound) {
                this.editingJournal.data.classifications.push(termSource);
            }
            this.editingJournalChange.emit(this.editingJournal);
        }
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.replaceSubjects = /**
     * @return {?}
     */
    function () {
        this.replaceClassifications(VocabulariesInmutableNames.SUBJECTS);
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.replaceIndexes = /**
     * @return {?}
     */
    function () {
        this.replaceClassifications(VocabulariesInmutableNames.INDEXES);
    };
    /**
     * @param {?} vocab
     * @return {?}
     */
    JournalViewVersionComponent.prototype.replaceClassifications = /**
     * @param {?} vocab
     * @return {?}
     */
    function (vocab) {
        /** @type {?} */
        var found = false;
        /** @type {?} */
        var newts = [];
        this.editingJournal.data.classifications.forEach((/**
         * @param {?} ts
         * @return {?}
         */
        function (ts) {
            if (ts.vocabulary != vocab) {
                newts.push(ts);
            }
        }));
        this.currentJournal.data.classifications.forEach((/**
         * @param {?} ts
         * @return {?}
         */
        function (ts) {
            if (ts.vocabulary == vocab) {
                newts.push(ts);
            }
        }));
        this.editingJournal.data.classifications = newts;
        this.editingJournalChange.emit(this.editingJournal);
    };
    /**
     * @return {?}
     */
    JournalViewVersionComponent.prototype.replaceOrganizations = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var found = false;
        /** @type {?} */
        var newts = [];
        this.currentJournal.data.organizations.forEach((/**
         * @param {?} ts
         * @return {?}
         */
        function (ts) {
            newts.push(ts);
        }));
        this.editingJournal.data.organizations = newts;
        this.editingJournalChange.emit(this.editingJournal);
    };
    JournalViewVersionComponent.decorators = [
        { type: Component, args: [{
                    selector: "toco-journal-view-version",
                    template: "<mat-card *ngIf=\"currentJournal.data\">\n  <mat-card-header>\n    <!-- <img mat-card-avatar *ngIf=\"currentJournal.data.logo; else logotemplate\" [style.background-size]=\"'cover'\" src=\"currentJournal.data.logo\">\n            <ng-template #logotemplate>\n                <img mat-card-avatar [src]=\"defaultLogo\" alt=\"\">\n            </ng-template> -->\n\n    <mat-card-title>\n      <div fxLAyout=\"row\" fxLayoutAlign=\"space-between start\">\n        <mat-icon\n          class=\"mat-18 notification-position\"\n          color=\"accent\"\n          *ngIf=\"currentJournal.is_current\"\n          matTooltip=\"{{ currentJournal.comment }}\"\n          >star</mat-icon\n        >\n        <mat-icon\n          class=\"mat-18 notification-position\"\n          color=\"accent\"\n          *ngIf=\"!currentJournal.reviewed\"\n          matTooltip=\"{{ currentJournal.comment }}\"\n          >adjust</mat-icon\n        >\n      </div>\n    </mat-card-title>\n\n    <mat-card-subtitle>\n      <mat-label> {{ currentJournal.created_at | date }}. </mat-label>\n      <mat-label>\n        {{ currentJournal.userprofile.identify() }}\n      </mat-label>\n    </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-divider [inset]=\"true\" style=\"margin-bottom: 1em\"></mat-divider>\n\n  <mat-card-content>\n    <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.title\"\n    ></toco-journal-view-version-field>\n\n    <!-- subtitle -->\n    <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.subtitle\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.shortname\"\n    ></toco-journal-view-version-field>\n\n    <mat-label style=\"font-weight: bold\">ISSN: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnP\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnE\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnL\"\n      ></toco-journal-view-version-field>\n    </div>\n    <mat-label style=\"font-weight: bold\">RNPS: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.rnpsP\"\n      ></toco-journal-view-version-field>\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.rnpsE\"\n      ></toco-journal-view-version-field>\n    </div>\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.url\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.oaiurl\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.email\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.seriadas_cubanas\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.purpose\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.start_year\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.end_year\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.frequency\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.description\"\n    ></toco-journal-view-version-field>\n\n    <div\n      *ngIf=\"currentJournal.data.description\"\n      class=\"e2e-inner-html-bound text-align-justify\"\n      [innerHTML]=\"currentJournal.data.description\"\n    ></div>\n\n    <mat-label style=\"font-weight: bold\">Redes Sociales:</mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.facebook\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.twitter\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.linkedin\"\n      ></toco-journal-view-version-field>\n    </div>\n\n    <!-- show terms -->\n    <mat-divider\n      [inset]=\"true\"\n      style=\"margin-bottom: 1em; margin-top: 1em\"\n    ></mat-divider>\n\n    <!-- <p>\n      <mat-label style=\"font-weight: bold;\"> Instituci\u00F3n: </mat-label>\n      <mat-label\n        *ngIf=\"currentInstitutionTerms.length == 0\"\n        class=\"text-muted text-through\"\n        >Vac\u00EDo</mat-label\n      >\n      <ng-container *ngFor=\"let termSource of currentInstitutionTerms\">\n        <mat-label style=\"padding-left: 1em;\">\n          {{ termSource.description }}\n        </mat-label>\n      </ng-container>\n    </p> -->\n    <!-- <mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n      <mat-card-header>\n        <mat-card-title> Grupo: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentGroupTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vac\u00EDo</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentGroupTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n      <mat-card-header>\n        <mat-card-title> Provincia: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentProvinceTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vac\u00EDo</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentProvinceTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card> -->\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title> Licencia: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentLicenceTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vac\u00EDo</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentLicenceTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceSubjects()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n\n          Materias:\n        </mat-card-title>\n        <mat-label\n          *ngIf=\"currentSubjectTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vac\u00EDo</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentSubjectTerms\">\n            <mat-chip>\n              <!-- <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button> -->\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceOrganizations()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n          Organizaciones:\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-organizations\n          [sourceData]=\"currentJournal.data\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-organizations>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceIndexes()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n\n          Indizaciones:\n        </mat-card-title>\n        <!-- <mat-label\n          *ngIf=\"currentDataBaseTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vac\u00EDo</mat-label\n        > -->\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-indexes\n          [sourceData]=\"currentJournal.data\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-indexes>\n        <!-- <mat-accordion>\n          <ng-container *ngFor=\"let termSource of currentDataBaseTerms\">\n            <mat-expansion-panel\n              (opened)=\"panelOpenState = true\"\n              (closed)=\"panelOpenState = false\"\n            >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  <button\n                    mat-icon-button\n                    color=\"accent\"\n                    matTooltip=\"Agregar\"\n                    (click)=\"concat(journalDataType.term, termSource)\"\n                  >\n                    <mat-icon class=\"mat-18\">merge_type</mat-icon>\n                  </button>\n                  {{ termSource.description }}\n                </mat-panel-title>\n                <mat-panel-description> </mat-panel-description>\n              </mat-expansion-panel-header>\n              <p *ngIf=\"termSource.data\">\n                <strong>URL: </strong> {{ termSource.data.url }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['initial_cover']\">\n                <strong>Cobertura inicio: </strong>\n                {{ termSource.data[\"initial_cover\"] }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['end_cover']\">\n                <strong>Cobertura hasta: </strong>\n                {{ termSource.data[\"end_cover\"] }}\n              </p>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion> -->\n      </mat-card-content>\n    </mat-card>\n  </mat-card-content>\n\n  <mat-divider [inset]=\"true\"></mat-divider>\n\n  <!-- <mat-card-actions\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between center\"\n    fxLayoutGap=\"10px\"\n    style=\"padding: 1em\"\n  >\n    <mat-checkbox\n                [(ngModel)]=\"currentJournalChecked\"\n                (change)=\"markAsViewed()\"\n            >\n                Marcar como Visto\n            </mat-checkbox>\n\n    <div fxLayoutGap=\"10px\">\n      <button mat-stroked-button color=\"primary\" (click)=\"replace()\">\n        Sustituir todos los campos\n      </button>\n      <!-- <button mat-raised-button color=\"accent\">Descartar</button>\n    </div>\n  </mat-card-actions> -->\n</mat-card>\n",
                    styles: [".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]
                }] }
    ];
    /** @nocollapse */
    JournalViewVersionComponent.ctorParameters = function () { return [
        { type: MatSnackBar }
    ]; };
    JournalViewVersionComponent.propDecorators = {
        currentJournal: [{ type: Input }],
        type: [{ type: Input }],
        editingJournal: [{ type: Input }],
        editingJournalChange: [{ type: Output }]
    };
    return JournalViewVersionComponent;
}());
export { JournalViewVersionComponent };
if (false) {
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentJournal;
    /** @type {?} */
    JournalViewVersionComponent.prototype.type;
    /** @type {?} */
    JournalViewVersionComponent.prototype.editingJournal;
    /** @type {?} */
    JournalViewVersionComponent.prototype.journalDataType;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentInstitutionTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentDataBaseTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentGroupTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentProvinceTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentSubjectTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentLicenceTerms;
    /** @type {?} */
    JournalViewVersionComponent.prototype.vocabularies;
    /** @type {?} */
    JournalViewVersionComponent.prototype.panelOpenState;
    /** @type {?} */
    JournalViewVersionComponent.prototype.currentJournalChecked;
    /** @type {?} */
    JournalViewVersionComponent.prototype.editingJournalChange;
    /**
     * @type {?}
     * @private
     */
    JournalViewVersionComponent.prototype._snackBar;
}
//# sourceMappingURL=data:application/json;base64,