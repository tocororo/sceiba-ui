/**
 * @fileoverview added by tsickle
 * Generated from: lib/sources/sources-list/sources-list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 *   Copyright (c) 2020 Universidad de Pinar del Río "Hermanos Saíz Montes de Oca"
 *   All rights reserved.
 */
import { Component, ViewChild } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { merge, of as observableOf } from 'rxjs';
import { startWith, switchMap, map, catchError } from 'rxjs/operators';
import { MatPaginator } from '@angular/material/paginator';
import { MatTableDataSource } from '@angular/material/table';
import { MetadataService } from '../../core/public-api';
import { Journal, JournalData, ISSN } from '../../entities/public-api';
import { FiltersService } from '../../filters/public-api';
import { Environment } from '../../core/env';
import { CatalogService } from '../../backend/public-api';
import { CatalogFiltersComponent } from '../catalog-filters/catalog-filters.component';
var SourcesListComponent = /** @class */ (function () {
    function SourcesListComponent(service, metadata, filterService, env) {
        this.service = service;
        this.metadata = metadata;
        this.filterService = filterService;
        this.env = env;
        this.journalList = [];
        this.loading = true;
        this.dataSource = new MatTableDataSource();
        this.columnsToDisplay = ['title', 'rnps', 'p-issn'];
        this.length = 0;
        this.pageSize = 5;
        this.pageSizeOptions = [5, 10, 15, 20];
        this.sceibaHost = '';
        this.layoutPosition = [
            {
                name: 'Derecha',
                layout: 'row-reverse',
                aling: 'center baseline',
                width: '22'
            },
            {
                name: 'Izquierda',
                layout: 'row',
                aling: 'center baseline',
                width: '22'
            },
            {
                name: 'Arriba',
                layout: 'column',
                aling: 'center center',
                width: '90'
            },
            {
                name: 'Abajo',
                layout: 'column-reverse',
                aling: 'center center',
                width: '90'
            }
        ];
        this.currentlayout = this.layoutPosition[1];
        this.sceibaHost = env.sceibaHost + '/catalog';
    }
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.metadata.setStandardMeta("Catálogo de Revistas Científicas", "", "");
        this.paginator.firstPage();
        this.paginator.pageSize = 5;
        this.service.getJournalsCount().subscribe((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            _this.length = response.data.count;
        }));
        this.fetchJournalData();
        this.filterService.paramsChanged.subscribe((/**
         * @param {?} params
         * @return {?}
         */
        function (params) {
            _this.params = params;
            _this.fetchJournalData();
        }));
    };
    // onPaginatorChanged(){
    //   this.filterService.changeFilter('count',this.paginator.pageSize, false);
    //   this.filterService.changeFilter('page',this.paginator.pageIndex);
    // }
    // onPaginatorChanged(){
    //   this.filterService.changeFilter('count',this.paginator.pageSize, false);
    //   this.filterService.changeFilter('page',this.paginator.pageIndex);
    // }
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.fetchJournalData = 
    // onPaginatorChanged(){
    //   this.filterService.changeFilter('count',this.paginator.pageSize, false);
    //   this.filterService.changeFilter('page',this.paginator.pageIndex);
    // }
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.loading = true;
        // this.dataSource.data = this.service.getJournalsPage(this.count, this.page);
        /** @type {?} */
        var arr = new Array();
        merge().pipe(startWith({}), switchMap((/**
         * @return {?}
         */
        function () {
            _this.loading = true;
            return (/** @type {?} */ (_this.service)).getJournalsPage(_this.paginator.pageSize, _this.paginator.pageIndex, _this.params);
        })), map((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            // Flip flag to show that loading has finished.
            _this.loading = false;
            // this.isRateLimitReached = false;
            // this.resultsLength = response.total_count;
            _this.length = response.data.sources.count;
            response.data.sources.data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                /** @type {?} */
                var j = new Journal();
                j.id = item.id;
                j.uuid = item.uuid;
                /** @type {?} */
                var info = new JournalData();
                info.url = item.data != null ? item.data.url : '';
                info.title = item.name;
                info.subtitle = item.subtitle;
                info.shortname = item.shortname;
                /** @type {?} */
                var issn = new ISSN();
                issn.e = item.data != null ? item.data.issn.e : '';
                issn.l = item.data != null ? item.data.issn.l : '';
                issn.p = item.data != null ? item.data.issn.p : '';
                info.issn = issn;
                info.rnps = item.data != null ? item.data.rnps : '';
                info.logo = item.data != null ? item.data.logo : '';
                info.purpose = item.purpose;
                info.description = item.data != null ? item.data.description : '';
                j.data = info;
                arr.push(j);
            }));
            return arr;
        })), catchError((/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.loading = false;
            console.log('ERRORRR ' + error);
            // Catch if the GitHub API has reached its rate limit. Return empty data.
            // this.isRateLimitReached = true;
            return observableOf([]);
        }))).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) { return _this.dataSource.data = data; }));
    };
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.onScrollUp = /**
     * @return {?}
     */
    function () {
        // console.log("scrolled up!!");
    };
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        if (this.journalList.length == 0) {
            this.loading = false;
            return true;
        }
        return false;
    };
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.isLoading = /**
     * @return {?}
     */
    function () {
        return this.loading;
    };
    /**
     * @return {?}
     */
    SourcesListComponent.prototype.openme = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var a = navigator.userAgent.match(/Android/i);
        /** @type {?} */
        var b = navigator.userAgent.match(/BlackBerry/i);
        /** @type {?} */
        var apple = navigator.userAgent.match(/iPhone|iPad|iPod/i);
        /** @type {?} */
        var o = navigator.userAgent.match(/Opera Mini/i);
        /** @type {?} */
        var i = navigator.userAgent.match(/IEMobile/i);
        if (a != null || b != null || apple != null || o != null || i != null) {
            return false;
        }
        return true;
    };
    /**
     * @param {?} index
     * @return {?}
     */
    SourcesListComponent.prototype.changeLayoutPosition = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.currentlayout = this.layoutPosition[index];
    };
    SourcesListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-sources-list',
                    template: "<!-- <div infiniteScroll [infiniteScrollDistance]=\"0\" [infiniteScrollUpDistance]=\"0.5\" [infiniteScrollThrottle]=\"10\" (scrolled)=\"onScrollDown()\"\n  (scrolledUp)=\"onScrollUp()\"> -->\n\n\n    <!-- <toco-page-header [info]=\"['Cat\u00E1logo de Revistas Cient\u00EDficas Cubanas']\">\n    </toco-page-header> -->\n    <div fxLayoutAlign=\"end center\" fxLayout=\"row\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>view_quilt</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"changeLayoutPosition(0)\">\n          <mat-icon>arrow_forward</mat-icon>\n          <span>{{layoutPosition[0].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(1)\">\n          <mat-icon>arrow_back</mat-icon>\n          <span>{{layoutPosition[1].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(2)\">\n          <mat-icon>arrow_upward</mat-icon>\n          <span>{{layoutPosition[2].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(3)\">\n          <mat-icon>arrow_downward</mat-icon>\n          <span>{{layoutPosition[3].name}}</span>\n        </button>\n      </mat-menu>\n    </div>\n\n\n    <div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n\n      <toco-catalog-filters-container fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxFlex=\"{{currentlayout.width}}\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\"\n        fxLayoutGap=\"1em\" class=\"width-90 back-grey mat-elevation-z8\">\n      </toco-catalog-filters-container>\n\n\n\n      <div class=\"mat-elevation-z8 width-90 margin1em\">\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Titulo</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.title}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"rnps\">\n            <th mat-header-cell *matHeaderCellDef>RNPS</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.rnps}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"p-issn\">\n            <th mat-header-cell *matHeaderCellDef>P-ISSN</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.issn.p}} </td>\n          </ng-container>\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n              <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-description e2e-inner-html-bound\" [innerHTML]=\"element.data.description\"></div>\n\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\"\n              [pageSize]=\"pageSize\"\n              [pageSizeOptions]=\"pageSizeOptions\"\n              (page)=\"fetchJournalData()\">\n        </mat-paginator>\n      </div>\n\n      <mat-card *ngIf=\"!isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n        <mat-spinner></mat-spinner>\n        <!--<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n      </mat-card>\n\n      <!-- <mat-card *ngIf=\"isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n        <h1>No hay Informaci\u00F3n para Mostrar</h1>\n      </mat-card> -->\n    </div>\n\n    <!--\n      </mat-drawer-content>\n\n\n\n    </mat-drawer-container> -->\n\n<!-- </div> -->\n",
                    animations: [
                        trigger('detailExpand', [
                            state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),
                            state('expanded', style({ height: '*' })),
                            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
                        ]),
                    ],
                    styles: [".width-card{width:30%;min-width:240px;margin-left:24px;margin-top:24px}.card-float-left{float:left}.center-spinner{width:90.5%;min-width:240px;margin-left:24px;margin-right:24px;margin-top:24px}.back-grey{background:rgba(0,0,0,.01);margin:1.5em 1em;padding:1em;min-width:18em}.width-90{width:90%}.width-93{width:93.5%}table{width:90%}.margin1em{margin:1em}.menu-pull-right{flex:1 1 auto}table.mat-table{width:100%}tr.example-detail-row{height:0}tr.example-element-row:not(.example-expanded-row):hover{background:#f5f5f5}tr.example-element-row:not(.example-expanded-row):active{background:#efefef}.example-element-row td{border-bottom-width:0}.example-element-detail{overflow:hidden;display:flex}.example-element-diagram{min-width:80px;border:2px solid #000;padding:8px;font-weight:lighter;margin:8px 0;height:104px}.example-element-symbol{font-weight:700;font-size:40px;line-height:normal}.example-element-description{padding:16px}.example-element-description-attribution{opacity:.5}"]
                }] }
    ];
    /** @nocollapse */
    SourcesListComponent.ctorParameters = function () { return [
        { type: CatalogService },
        { type: MetadataService },
        { type: FiltersService },
        { type: Environment }
    ]; };
    SourcesListComponent.propDecorators = {
        paginator: [{ type: ViewChild, args: [MatPaginator, { static: true },] }],
        filter_component: [{ type: ViewChild, args: [CatalogFiltersComponent, { static: true },] }]
    };
    return SourcesListComponent;
}());
export { SourcesListComponent };
if (false) {
    /** @type {?} */
    SourcesListComponent.prototype.journalList;
    /**
     * @type {?}
     * @private
     */
    SourcesListComponent.prototype.loading;
    /** @type {?} */
    SourcesListComponent.prototype.dataSource;
    /** @type {?} */
    SourcesListComponent.prototype.columnsToDisplay;
    /** @type {?} */
    SourcesListComponent.prototype.expandedElement;
    /** @type {?} */
    SourcesListComponent.prototype.length;
    /** @type {?} */
    SourcesListComponent.prototype.pageSize;
    /** @type {?} */
    SourcesListComponent.prototype.pageSizeOptions;
    /** @type {?} */
    SourcesListComponent.prototype.pageEvent;
    /** @type {?} */
    SourcesListComponent.prototype.params;
    /** @type {?} */
    SourcesListComponent.prototype.sceibaHost;
    /** @type {?} */
    SourcesListComponent.prototype.layoutPosition;
    /** @type {?} */
    SourcesListComponent.prototype.currentlayout;
    /** @type {?} */
    SourcesListComponent.prototype.paginator;
    /** @type {?} */
    SourcesListComponent.prototype.filter_component;
    /**
     * @type {?}
     * @private
     */
    SourcesListComponent.prototype.service;
    /**
     * @type {?}
     * @private
     */
    SourcesListComponent.prototype.metadata;
    /**
     * @type {?}
     * @private
     */
    SourcesListComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    SourcesListComponent.prototype.env;
}
//# sourceMappingURL=data:application/json;base64,