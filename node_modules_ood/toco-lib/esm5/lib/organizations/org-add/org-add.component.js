/**
 * @fileoverview added by tsickle
 * Generated from: lib/organizations/org-add/org-add.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { FormGroup } from '@angular/forms';
import { OperationAction, ContainerPanelComponent } from '../../forms/public-api';
var OrgAddComponent = /** @class */ (function () {
    function OrgAddComponent(_router, _activatedRoute) {
        this._router = _router;
        this._activatedRoute = _activatedRoute;
        this.operationAction = OperationAction;
        this.panelFormSection = new FormGroup({}, []);
    }
    /**
     * @return {?}
     */
    OrgAddComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /* Creates the panel's content. */
        this.panelContent = this._initPanelContent();
    };
    /**
     * Returns the panel's content.
     */
    /**
     * Returns the panel's content.
     * @private
     * @return {?}
     */
    OrgAddComponent.prototype._initPanelContent = /**
     * Returns the panel's content.
     * @private
     * @return {?}
     */
    function () {
        return {
            /* The 'label' and 'title' fields have the same values, but they are different fields with different functionalities. */
            'formSection': this.panelFormSection,
            'name': 'panel',
            'label': 'Adiciona una nueva organización',
            'controlType': ContainerPanelComponent,
            'title': 'Adiciona una nueva organización',
            'description': '',
            'iconName': undefined /*''*/,
            'formSectionContent': [
            //TODO: Poner los campos.'
            ]
        };
    };
    /**
     * Does the tasks for the operation action.
     * @param op The operation action.
     */
    /**
     * Does the tasks for the operation action.
     * @param {?} op The operation action.
     * @return {?}
     */
    OrgAddComponent.prototype.doOperationAction = /**
     * Does the tasks for the operation action.
     * @param {?} op The operation action.
     * @return {?}
     */
    function (op) {
        if (op == OperationAction.submit) {
            //TODO: Do the tasks for the submit action. 
        }
        /* Currently, it does not do any task for the cancel action. */
        this._router.navigate(['../', { 'operation': op }]);
    };
    Object.defineProperty(OrgAddComponent.prototype, "isSubmitActionDisabled", {
        /**
         * Returns true if the submit action is disabled; otherwise, false.
         */
        get: /**
         * Returns true if the submit action is disabled; otherwise, false.
         * @return {?}
         */
        function () {
            return this.panelFormSection.invalid;
        },
        enumerable: true,
        configurable: true
    });
    OrgAddComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-org-add',
                    template: "\n<container-panel [content]=\"panelContent\"></container-panel>\n\n<h3>Add the rest of <span [ngStyle]=\"{ 'color': 'red' }\">readonly</span> content to `panelContent.formSectionContent` field!</h3>\n\n<div [ngStyle]=\"{'margin': '1em 0 1em 0'}\">\n    <button mat-raised-button color=\"primary\" (click)=\"doOperationAction(operationAction.cancel)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"isSubmitActionDisabled\" (click)=\"doOperationAction(operationAction.submit)\">Submit</button>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    OrgAddComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute }
    ]; };
    return OrgAddComponent;
}());
export { OrgAddComponent };
if (false) {
    /**
     * Represents the `OperationAction` enum for internal use.
     * @type {?}
     */
    OrgAddComponent.prototype.operationAction;
    /**
     * Represents the organization for adding.
     * @type {?}
     */
    OrgAddComponent.prototype.org;
    /**
     * Tracks the value and validity state of the internal child controls that contains this component.
     * @type {?}
     * @private
     */
    OrgAddComponent.prototype.panelFormSection;
    /**
     * Contains the panel's content.
     * @type {?}
     */
    OrgAddComponent.prototype.panelContent;
    /**
     * @type {?}
     * @private
     */
    OrgAddComponent.prototype._router;
    /**
     * @type {?}
     * @private
     */
    OrgAddComponent.prototype._activatedRoute;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnLWFkZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9vcmdhbml6YXRpb25zL29yZy1hZGQvb3JnLWFkZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzNDLE9BQU8sRUFBRSxlQUFlLEVBQTZCLHVCQUF1QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0c7SUEyQkMseUJBQTJCLE9BQWUsRUFBVSxlQUErQjtRQUF4RCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQVUsb0JBQWUsR0FBZixlQUFlLENBQWdCO1FBRWxGLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLFNBQVMsQ0FBQyxFQUFHLEVBQUUsRUFBRyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVNLGtDQUFROzs7SUFBZjtRQUVDLGtDQUFrQztRQUNsQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRTs7T0FFRzs7Ozs7O0lBQ0ssMkNBQWlCOzs7OztJQUF6QjtRQUVGLE9BQU87O1lBRU4sYUFBYSxFQUFFLElBQUksQ0FBQyxnQkFBZ0I7WUFDcEMsTUFBTSxFQUFFLE9BQU87WUFDZixPQUFPLEVBQUUsaUNBQWlDO1lBQzFDLGFBQWEsRUFBRSx1QkFBdUI7WUFDdEMsT0FBTyxFQUFFLGlDQUFpQztZQUMxQyxhQUFhLEVBQUUsRUFBRTtZQUNqQixVQUFVLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDNUIsb0JBQW9CLEVBQUU7WUFDckIsMEJBQTBCO2FBQzFCO1NBQ0QsQ0FBQztJQUNILENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNJLDJDQUFpQjs7Ozs7SUFBeEIsVUFBeUIsRUFBbUI7UUFFM0MsSUFBRyxFQUFFLElBQUksZUFBZSxDQUFDLE1BQU0sRUFDL0I7WUFDQyw0Q0FBNEM7U0FDNUM7UUFFRCwrREFBK0Q7UUFFL0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFLRCxzQkFBVyxtREFBc0I7UUFIakM7O1dBRUc7Ozs7O1FBQ0g7WUFFQyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7UUFDdEMsQ0FBQzs7O09BQUE7O2dCQWpGRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLGtpQkFBdUM7O2lCQUV2Qzs7OztnQkFWUSxNQUFNO2dCQUFFLGNBQWM7O0lBd0YvQixzQkFBQztDQUFBLEFBbEZELElBa0ZDO1NBN0VZLGVBQWU7Ozs7OztJQUszQiwwQ0FBd0Q7Ozs7O0lBS3hELDhCQUF5Qjs7Ozs7O0lBS3pCLDJDQUFzQzs7Ozs7SUFLdEMsdUNBQWtDOzs7OztJQUVmLGtDQUF1Qjs7Ozs7SUFBRSwwQ0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIsIEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgT3JnYW5pemF0aW9uIH0gZnJvbSAnLi4vLi4vZW50aXRpZXMvcHVibGljLWFwaSc7XG5pbXBvcnQgeyBPcGVyYXRpb25BY3Rpb24sIEZvcm1TZWN0aW9uLCBQYW5lbENvbnRlbnQsIENvbnRhaW5lclBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZm9ybXMvcHVibGljLWFwaSc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ3RvY28tb3JnLWFkZCcsXG5cdHRlbXBsYXRlVXJsOiAnLi9vcmctYWRkLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJy4vb3JnLWFkZC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE9yZ0FkZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdFxue1xuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgdGhlIGBPcGVyYXRpb25BY3Rpb25gIGVudW0gZm9yIGludGVybmFsIHVzZS4gXG4gICAgICovXG5cdHB1YmxpYyByZWFkb25seSBvcGVyYXRpb25BY3Rpb246IHR5cGVvZiBPcGVyYXRpb25BY3Rpb247XG5cblx0LyoqXG5cdCAqIFJlcHJlc2VudHMgdGhlIG9yZ2FuaXphdGlvbiBmb3IgYWRkaW5nLiBcblx0ICovXG5cdHB1YmxpYyBvcmc6IE9yZ2FuaXphdGlvbjtcblxuXHQvKipcblx0ICogVHJhY2tzIHRoZSB2YWx1ZSBhbmQgdmFsaWRpdHkgc3RhdGUgb2YgdGhlIGludGVybmFsIGNoaWxkIGNvbnRyb2xzIHRoYXQgY29udGFpbnMgdGhpcyBjb21wb25lbnQuIFxuXHQgKi9cblx0cHJpdmF0ZSBwYW5lbEZvcm1TZWN0aW9uOiBGb3JtU2VjdGlvbjtcblx0XG4gICAgLyoqXG4gICAgICogQ29udGFpbnMgdGhlIHBhbmVsJ3MgY29udGVudC4gXG4gICAgICovXG5cdHB1YmxpYyBwYW5lbENvbnRlbnQ6IFBhbmVsQ29udGVudDtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBfcm91dGVyOiBSb3V0ZXIsIHByaXZhdGUgX2FjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSlcblx0e1xuXHRcdHRoaXMub3BlcmF0aW9uQWN0aW9uID0gT3BlcmF0aW9uQWN0aW9uO1xuXHRcdHRoaXMucGFuZWxGb3JtU2VjdGlvbiA9IG5ldyBGb3JtR3JvdXAoeyB9LCBbIF0pO1xuXHR9XG5cblx0cHVibGljIG5nT25Jbml0KClcblx0e1xuXHRcdC8qIENyZWF0ZXMgdGhlIHBhbmVsJ3MgY29udGVudC4gKi9cblx0XHR0aGlzLnBhbmVsQ29udGVudCA9IHRoaXMuX2luaXRQYW5lbENvbnRlbnQoKTtcblx0fVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgcGFuZWwncyBjb250ZW50LiBcbiAgICAgKi9cbiAgICBwcml2YXRlIF9pbml0UGFuZWxDb250ZW50KCk6IGFueS8vUGFuZWxDb250ZW50XG4gICAge1xuXHRcdHJldHVybiB7XG5cdFx0XHQvKiBUaGUgJ2xhYmVsJyBhbmQgJ3RpdGxlJyBmaWVsZHMgaGF2ZSB0aGUgc2FtZSB2YWx1ZXMsIGJ1dCB0aGV5IGFyZSBkaWZmZXJlbnQgZmllbGRzIHdpdGggZGlmZmVyZW50IGZ1bmN0aW9uYWxpdGllcy4gKi9cblx0XHRcdCdmb3JtU2VjdGlvbic6IHRoaXMucGFuZWxGb3JtU2VjdGlvbixcblx0XHRcdCduYW1lJzogJ3BhbmVsJyxcblx0XHRcdCdsYWJlbCc6ICdBZGljaW9uYSB1bmEgbnVldmEgb3JnYW5pemFjacOzbicsXG5cdFx0XHQnY29udHJvbFR5cGUnOiBDb250YWluZXJQYW5lbENvbXBvbmVudCxcblx0XHRcdCd0aXRsZSc6ICdBZGljaW9uYSB1bmEgbnVldmEgb3JnYW5pemFjacOzbicsXG5cdFx0XHQnZGVzY3JpcHRpb24nOiAnJyxcblx0XHRcdCdpY29uTmFtZSc6IHVuZGVmaW5lZCAvKicnKi8sXG5cdFx0XHQnZm9ybVNlY3Rpb25Db250ZW50JzogW1xuXHRcdFx0XHQvL1RPRE86IFBvbmVyIGxvcyBjYW1wb3MuJ1xuXHRcdFx0XVxuXHRcdH07XG5cdH1cblxuXHQvKipcblx0ICogRG9lcyB0aGUgdGFza3MgZm9yIHRoZSBvcGVyYXRpb24gYWN0aW9uLiBcblx0ICogQHBhcmFtIG9wIFRoZSBvcGVyYXRpb24gYWN0aW9uLiBcblx0ICovXG5cdHB1YmxpYyBkb09wZXJhdGlvbkFjdGlvbihvcDogT3BlcmF0aW9uQWN0aW9uKTogdm9pZFxuXHR7XG5cdFx0aWYob3AgPT0gT3BlcmF0aW9uQWN0aW9uLnN1Ym1pdClcblx0XHR7XG5cdFx0XHQvL1RPRE86IERvIHRoZSB0YXNrcyBmb3IgdGhlIHN1Ym1pdCBhY3Rpb24uIFxuXHRcdH1cblxuXHRcdC8qIEN1cnJlbnRseSwgaXQgZG9lcyBub3QgZG8gYW55IHRhc2sgZm9yIHRoZSBjYW5jZWwgYWN0aW9uLiAqL1xuXG5cdFx0dGhpcy5fcm91dGVyLm5hdmlnYXRlKFsnLi4vJywgeyAnb3BlcmF0aW9uJzogb3AgfV0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc3VibWl0IGFjdGlvbiBpcyBkaXNhYmxlZDsgb3RoZXJ3aXNlLCBmYWxzZS4gXG5cdCAqL1xuXHRwdWJsaWMgZ2V0IGlzU3VibWl0QWN0aW9uRGlzYWJsZWQoKTogYm9vbGVhblxuXHR7XG5cdFx0cmV0dXJuIHRoaXMucGFuZWxGb3JtU2VjdGlvbi5pbnZhbGlkO1xuXHR9XG59XG4iXX0=