/**
 * @fileoverview added by tsickle
 * Generated from: lib/organizations/org-view/org-view.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { Organization } from '../../entities/public-api';
import { OrgViewAccordionType } from './org-view-accordion/org-view-accordion.component';
/**
 * @record
 */
export function RelationshipLink() { }
if (false) {
    /** @type {?} */
    RelationshipLink.prototype.url;
    /** @type {?} */
    RelationshipLink.prototype.name;
}
/**
 * @record
 */
export function RelationshipsValue() { }
if (false) {
    /** @type {?} */
    RelationshipsValue.prototype.links;
}
var OrgViewComponent = /** @class */ (function () {
    function OrgViewComponent() {
        this.showContent = true;
        this.orgViewAccordionType = OrgViewAccordionType;
        this.org = undefined;
    }
    /**
     * @return {?}
     */
    OrgViewComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // si se recibe un objeto que no tiene todos los campos.
        /** @type {?} */
        var org_full = new Organization();
        org_full.deepcopy(this.org);
        this.org = org_full;
        this._panelsTitle_Relationships = ['Organizaciones Padres', 'Organizaciones Hijas', 'Organizaciones Relacionadas'];
        this._relationshipsValue = this._createRelationshipsValue();
        this._addressesValue = this._createAddressesValue(); /* This initialization is first than the `_panelsTitle_Addresses` initialization. */
        // this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
        this._panelsTitle_Addresses = this._createPanelsTitle_Addresses();
    };
    /**
     * @return {?}
     */
    OrgViewComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.ngOnInit();
    };
    /**
     * Creates a generic array of panels title.
     * Usage example:
     * this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
     * @param orgViewAccordionType The `OrgViewAccordionComponent` type.
     * @param panelsTitleCount Amount of panels title.
     */
    /**
     * Creates a generic array of panels title.
     * Usage example:
     * this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
     * @private
     * @param {?} orgViewAccordionType The `OrgViewAccordionComponent` type.
     * @param {?} panelsTitleCount Amount of panels title.
     * @return {?}
     */
    OrgViewComponent.prototype._createPanelsTitle_Generic = /**
     * Creates a generic array of panels title.
     * Usage example:
     * this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];
     * @private
     * @param {?} orgViewAccordionType The `OrgViewAccordionComponent` type.
     * @param {?} panelsTitleCount Amount of panels title.
     * @return {?}
     */
    function (orgViewAccordionType, panelsTitleCount) {
        /** @type {?} */
        var panelsTitle = [];
        /* Initializae the `panelsTitle` array. */
        for (var i = 0; i < panelsTitleCount;) {
            panelsTitle.push(orgViewAccordionType + " (" + ++i + ") of (" + panelsTitleCount + ")");
        }
        return panelsTitle;
    };
    /**
     * @private
     * @return {?}
     */
    OrgViewComponent.prototype._createPanelsTitle_Addresses = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var panelsTitle = [];
        /** @type {?} */
        var panelsTitleCount = this._addressesValue.length;
        /* Initializae the `panelsTitle` array. */
        for (var i = 0; i < panelsTitleCount; i++) {
            panelsTitle.push(this._addressesValue[i].city + " | " + this._addressesValue[i].country + " " + ((this._addressesValue[i].primary) ? '(Principal)' : ''));
        }
        return panelsTitle;
    };
    /**
     * @private
     * @return {?}
     */
    OrgViewComponent.prototype._createRelationshipsValue = /**
     * @private
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b;
        /* The positions represent:
             * pos = 0 --> Organizaciones Padres
             * pos = 1 --> Organizaciones Hijas
             * pos = 2 --> Organizaciones Relacionadas */
        /** @type {?} */
        var result = [];
        /** @type {?} */
        var pos = -1;
        /** @type {?} */
        var item;
        try {
            for (var _c = tslib_1.__values(this._panelsTitle_Relationships), _d = _c.next(); !_d.done; _d = _c.next()) {
                item = _d.value;
                result.push({
                    'links': []
                });
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (this.org.relationships) {
            try {
                for (var _e = tslib_1.__values(this.org.relationships), _f = _e.next(); !_f.done; _f = _e.next()) {
                    item = _f.value;
                    switch (item.type) {
                        case 'parent':
                            {
                                pos = 0;
                                break;
                            }
                        case 'child':
                            {
                                pos = 1;
                                break;
                            }
                        default: /* 'related' */
                            {
                                pos = 2;
                                break;
                            }
                    }
                    result[pos].links.push({
                        // 'url': `${ item.id }/view`,
                        'url': '/' + item.id + '/view',
                        'name': item.label
                    });
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return result;
    };
    /**
     * Returns an array of addresses ordered by the `primary` field of its addresses,
     * the true values are first than the false values.
     */
    /**
     * Returns an array of addresses ordered by the `primary` field of its addresses,
     * the true values are first than the false values.
     * @private
     * @return {?}
     */
    OrgViewComponent.prototype._createAddressesValue = /**
     * Returns an array of addresses ordered by the `primary` field of its addresses,
     * the true values are first than the false values.
     * @private
     * @return {?}
     */
    function () {
        var e_3, _a;
        /** @type {?} */
        var result = [];
        /** @type {?} */
        var noPrimary = [];
        try {
            for (var _b = tslib_1.__values(this.org.addresses), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (item.primary) {
                    result.push(item);
                }
                else {
                    noPrimary.push(item);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return result.concat(noPrimary);
    };
    Object.defineProperty(OrgViewComponent.prototype, "getPanelsTitle_Relationships", {
        get: /**
         * @return {?}
         */
        function () {
            return this._panelsTitle_Relationships;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewComponent.prototype, "getValue_Relationships", {
        get: /**
         * @return {?}
         */
        function () {
            return this._relationshipsValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewComponent.prototype, "getPanelsTitle_Addresses", {
        get: /**
         * @return {?}
         */
        function () {
            return this._panelsTitle_Addresses;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewComponent.prototype, "getValue_Addresses", {
        get: /**
         * @return {?}
         */
        function () {
            return this._addressesValue;
        },
        enumerable: true,
        configurable: true
    });
    OrgViewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-org-view',
                    template: "\n<mat-card *ngIf=\"org\" class=\"container-panel-mat-card\" [attr.aria-label]=\"'Muestra la organizaci\u00F3n seleccionada'\">\n  <mat-card-header>\n\n    <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n    <mat-card-title class=\"title-padding\">{{ org.name }}</mat-card-title>\n    <mat-card-subtitle class=\"title-padding\">SceibaOrgID: {{ org.id }}</mat-card-subtitle>\n    <mat-card-subtitle *ngIf=\"org.status\" class=\"cursor-default title-padding\">\n      Estatus de la organizaci\u00F3n: {{ org.status }}\n    </mat-card-subtitle>\n\n  </mat-card-header>\n\n  <mat-card-content *ngIf=\"showContent\">\n\n    <static-table *ngIf=\"org.identifiers && org.identifiers.length\" [desc]=\"'Lista de los identificadores de la organizaci\u00F3n'\" [value]=\"org.identifiers\"\n      [columnsObjectProperty]=\"['idtype', 'value']\"\n      [columnsHeaderText]=\"['Identifier type', 'Identifier value']\"\n    >\n    </static-table>\n    <static-chips *ngIf=\"org.aliases && org.aliases.length\" [desc]=\"'Lista de otros nombres con los que se conoce la organizaci\u00F3n'\" [value]=\"org.aliases\"></static-chips>\n    <static-chips *ngIf=\"org.acronyms && org.acronyms.length\" [desc]=\"'Lista de los acr\u00F3nimos con que se conoce la organizaci\u00F3n'\" [value]=\"org.acronyms\"></static-chips>\n    <static-chips *ngIf=\"org.types && org.types.length\" [desc]=\"'Lista de los tipos que describen la organizaci\u00F3n'\" [value]=\"org.types\"></static-chips>\n    <static-text *ngIf=\"org.wikipedia_url\" [desc]=\"'URL de la p\u00E1gina de Wikipedia de la organizaci\u00F3n'\" [value]=\"org.wikipedia_url\"></static-text>\n    <static-text *ngIf=\"org.redirect\" [desc]=\"'URL de la p\u00E1gina originaria de la organizaci\u00F3n'\" [value]=\"org.redirect.properties.value\"></static-text>\n    <static-text *ngIf=\"org.email_address\" [desc]=\"'Correo electr\u00F3nico de contacto de la organizaci\u00F3n'\" [value]=\"org.email_address\"></static-text>\n    <!-- <static-chips *ngIf=\"org.ip_addresses && org.ip_addresses.length\" [desc]=\"'Lista de direcciones IP conocidas que pertenecen a la organizaci\u00F3n'\" [value]=\"org.ip_addresses\"></static-chips> -->\n    <static-text *ngIf=\"org.established\" [desc]=\"'A\u00F1o de fundada la organizaci\u00F3n'\" [value]=\"org.established\"></static-text>\n    <static-text *ngIf=\"org.onei_registry\" [desc]=\"'N\u00FAmero de registro en la ONEI'\" [value]=\"org.onei_registry\"></static-text>\n    <static-chips *ngIf=\"org.links && org.links.length\" [desc]=\"'Lista de los enlaces conocidos de la organizaci\u00F3n'\" [value]=\"org.links\"></static-chips>\n    <static-table *ngIf=\"org.labels && org.labels.length\" [desc]=\"'Nombre de la organizaci\u00F3n en diferentes lenguajes'\" [value]=\"org.labels\"\n      [columnsObjectProperty]=\"['label', 'iso639']\"\n      [columnsHeaderText]=\"['Institute name in a language variant', 'ISO-639-1 language code']\"\n    >\n    </static-table>\n    <toco-org-view-accordion *ngIf=\"org.relationships && org.relationships.length\" [desc]=\"'Relaciones con otras organizaciones'\" [value]=\"getValue_Relationships\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Relationships\"\n      [panelsTitle] = \"getPanelsTitle_Relationships\"\n    >\n    </toco-org-view-accordion>\n    <toco-org-view-accordion *ngIf=\"org.addresses && org.addresses.length\" [desc]=\"'Direcciones conocidas de la organizaci\u00F3n'\" [value]=\"getValue_Addresses\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Addresses\"\n      [panelsTitle] = \"getPanelsTitle_Addresses\"\n    >\n    </toco-org-view-accordion>\n\n  </mat-card-content>\n</mat-card>\n",
                    styles: [".cursor-default{cursor:default}.title-padding{padding:0 0 0 .1em}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover}.form-container{display:flex;flex-direction:column;justify-content:start;width:40%}"]
                }] }
    ];
    /** @nocollapse */
    OrgViewComponent.ctorParameters = function () { return []; };
    OrgViewComponent.propDecorators = {
        org: [{ type: Input }],
        showContent: [{ type: Input }]
    };
    return OrgViewComponent;
}());
export { OrgViewComponent };
if (false) {
    /**
     * Represents the `OrgViewAccordionType` enum for internal use.
     * @type {?}
     */
    OrgViewComponent.prototype.orgViewAccordionType;
    /**
     * Represents the current organization.
     * @type {?}
     */
    OrgViewComponent.prototype.org;
    /** @type {?} */
    OrgViewComponent.prototype.showContent;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._panelsTitle_Relationships;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._relationshipsValue;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._panelsTitle_Addresses;
    /**
     * @type {?}
     * @private
     */
    OrgViewComponent.prototype._addressesValue;
}
//# sourceMappingURL=data:application/json;base64,