/**
 * @fileoverview added by tsickle
 * Generated from: lib/organizations/org-view/org-view-geo-names-city/org-view-geo-names-city.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { GeoNamesCity } from '../../../entities/public-api';
var OrgViewGeoNamesCityComponent = /** @class */ (function () {
    function OrgViewGeoNamesCityComponent() {
        this.appearance = 'outline';
        this.desc = undefined;
        this.value = undefined;
        this._geonames_admin1 = [];
        this._geonames_admin2 = [];
        this._nuts_level1 = [];
        this._nuts_level2 = [];
        this._nuts_level3 = [];
    }
    /**
     * @return {?}
     */
    OrgViewGeoNamesCityComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.value) {
            if (this.value.geonames_admin1)
                this._createValueAsArray(this.value.geonames_admin1, this._geonames_admin1);
            if (this.value.geonames_admin2)
                this._createValueAsArray(this.value.geonames_admin2, this._geonames_admin2);
            if (this.value.nuts_level1)
                this._createValueAsArray(this.value.nuts_level1, this._nuts_level1);
            if (this.value.nuts_level2)
                this._createValueAsArray(this.value.nuts_level2, this._nuts_level2);
            if (this.value.nuts_level3)
                this._createValueAsArray(this.value.nuts_level3, this._nuts_level3);
        }
    };
    /**
     * @private
     * @param {?} objFromCopy
     * @param {?} arrayToFill
     * @return {?}
     */
    OrgViewGeoNamesCityComponent.prototype._createValueAsArray = /**
     * @private
     * @param {?} objFromCopy
     * @param {?} arrayToFill
     * @return {?}
     */
    function (objFromCopy, arrayToFill) {
        Object.keys(objFromCopy).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            arrayToFill.push({
                'property': key,
                'value': objFromCopy[key]
            });
        }));
    };
    Object.defineProperty(OrgViewGeoNamesCityComponent.prototype, "getGeoNamesAdmin1", {
        /**
         * Returns the `geonames_admin1` value as an array for using by `StaticTableComponent`.
         */
        get: /**
         * Returns the `geonames_admin1` value as an array for using by `StaticTableComponent`.
         * @return {?}
         */
        function () {
            return this._geonames_admin1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewGeoNamesCityComponent.prototype, "getGeoNamesAdmin2", {
        /**
         * Returns the `geonames_admin2` value as an array for using by `StaticTableComponent`.
         */
        get: /**
         * Returns the `geonames_admin2` value as an array for using by `StaticTableComponent`.
         * @return {?}
         */
        function () {
            return this._geonames_admin2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewGeoNamesCityComponent.prototype, "getNutsLevel1", {
        /**
         * Returns the `nuts_level1` value as an array for using by `StaticTableComponent`.
         */
        get: /**
         * Returns the `nuts_level1` value as an array for using by `StaticTableComponent`.
         * @return {?}
         */
        function () {
            return this._nuts_level1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewGeoNamesCityComponent.prototype, "getNutsLevel2", {
        /**
         * Returns the `nuts_level2` value as an array for using by `StaticTableComponent`.
         */
        get: /**
         * Returns the `nuts_level2` value as an array for using by `StaticTableComponent`.
         * @return {?}
         */
        function () {
            return this._nuts_level2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OrgViewGeoNamesCityComponent.prototype, "getNutsLevel3", {
        /**
         * Returns the `nuts_level3` value as an array for using by `StaticTableComponent`.
         */
        get: /**
         * Returns the `nuts_level3` value as an array for using by `StaticTableComponent`.
         * @return {?}
         */
        function () {
            return this._nuts_level3;
        },
        enumerable: true,
        configurable: true
    });
    OrgViewGeoNamesCityComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-org-view-geo-names-city',
                    template: "\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el \u00FAnico que est\u00E1 hecho. -->\n<fieldset class=\"static-geo-names-city-fieldset\">\n    <legend class=\"static-geo-names-city-fieldset-legend\">{{ desc }}</legend>\n\n    <static-text *ngIf=\"value.id\" [desc]=\"'Identificador GeoNames'\" [value]=\"value.id\"></static-text>\n    <static-text *ngIf=\"value.city\" [desc]=\"'Nombre de la ciudad'\" [value]=\"value.city\"></static-text>\n    <static-table *ngIf=\"value.geonames_admin1\" [desc]=\"'geonames_admin1'\" [value]=\"getGeoNamesAdmin1\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.geonames_admin2\" [desc]=\"'geonames_admin2'\" [value]=\"getGeoNamesAdmin2\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level1\" [desc]=\"'nuts_level1'\" [value]=\"getNutsLevel1\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level2\" [desc]=\"'nuts_level2'\" [value]=\"getNutsLevel2\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level3\" [desc]=\"'nuts_level3'\" [value]=\"getNutsLevel3\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n</fieldset>\n",
                    styles: [".static-geo-names-city-fieldset{width:auto;margin:-4px 0 24px;padding:14px 10px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.static-geo-names-city-fieldset-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]
                }] }
    ];
    /** @nocollapse */
    OrgViewGeoNamesCityComponent.ctorParameters = function () { return []; };
    OrgViewGeoNamesCityComponent.propDecorators = {
        appearance: [{ type: Input }],
        desc: [{ type: Input }],
        value: [{ type: Input }]
    };
    return OrgViewGeoNamesCityComponent;
}());
export { OrgViewGeoNamesCityComponent };
if (false) {
    /**
     * The control's appearance.
     * By default, its value is `'outline'`.
     * @type {?}
     */
    OrgViewGeoNamesCityComponent.prototype.appearance;
    /**
     * The control's description.
     * By default, its value is `undefined` and it is not showed.
     * @type {?}
     */
    OrgViewGeoNamesCityComponent.prototype.desc;
    /**
     * A linked GeoNames data associated with the organization.
     * By default, its value is `undefined`.
     * @type {?}
     */
    OrgViewGeoNamesCityComponent.prototype.value;
    /**
     * @type {?}
     * @private
     */
    OrgViewGeoNamesCityComponent.prototype._geonames_admin1;
    /**
     * @type {?}
     * @private
     */
    OrgViewGeoNamesCityComponent.prototype._geonames_admin2;
    /**
     * @type {?}
     * @private
     */
    OrgViewGeoNamesCityComponent.prototype._nuts_level1;
    /**
     * @type {?}
     * @private
     */
    OrgViewGeoNamesCityComponent.prototype._nuts_level2;
    /**
     * @type {?}
     * @private
     */
    OrgViewGeoNamesCityComponent.prototype._nuts_level3;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnLXZpZXctZ2VvLW5hbWVzLWNpdHkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vdG9jby1saWIvIiwic291cmNlcyI6WyJsaWIvb3JnYW5pemF0aW9ucy9vcmctdmlldy9vcmctdmlldy1nZW8tbmFtZXMtY2l0eS9vcmctdmlldy1nZW8tbmFtZXMtY2l0eS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFNUQ7SUFrQ0M7UUFFQyxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztRQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztRQUV2QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVNLCtDQUFROzs7SUFBZjtRQUVDLElBQUksSUFBSSxDQUFDLEtBQUssRUFDZDtZQUNDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlO2dCQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztZQUM1RyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZTtnQkFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDNUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7Z0JBQUUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNoRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVztnQkFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ2hHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXO2dCQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDaEc7SUFDRixDQUFDOzs7Ozs7O0lBRU8sMERBQW1COzs7Ozs7SUFBM0IsVUFBNEIsV0FBd0IsRUFBRSxXQUEwQjtRQUUvRSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFDLEdBQVc7WUFDNUMsV0FBVyxDQUFDLElBQUksQ0FBQztnQkFDaEIsVUFBVSxFQUFFLEdBQUc7Z0JBQ2YsT0FBTyxFQUFFLFdBQVcsQ0FBQyxHQUFHLENBQUM7YUFDekIsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxFQUFDLENBQUM7SUFDSixDQUFDO0lBS0Qsc0JBQVcsMkRBQWlCO1FBSDVCOztXQUVHOzs7OztRQUNIO1lBRUMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsQ0FBQzs7O09BQUE7SUFLRCxzQkFBVywyREFBaUI7UUFINUI7O1dBRUc7Ozs7O1FBQ0g7WUFFQyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztRQUM5QixDQUFDOzs7T0FBQTtJQUtELHNCQUFXLHVEQUFhO1FBSHhCOztXQUVHOzs7OztRQUNIO1lBRUMsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzFCLENBQUM7OztPQUFBO0lBS0Qsc0JBQVcsdURBQWE7UUFIeEI7O1dBRUc7Ozs7O1FBQ0g7WUFFQyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUFLRCxzQkFBVyx1REFBYTtRQUh4Qjs7V0FFRzs7Ozs7UUFDSDtZQUVDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMxQixDQUFDOzs7T0FBQTs7Z0JBM0dELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxneERBQXVEOztpQkFFdkQ7Ozs7OzZCQU9DLEtBQUs7dUJBT0wsS0FBSzt3QkFPTCxLQUFLOztJQW1GUCxtQ0FBQztDQUFBLEFBNUdELElBNEdDO1NBdkdZLDRCQUE0Qjs7Ozs7OztJQU14QyxrREFDMEI7Ozs7OztJQU0xQiw0Q0FDb0I7Ozs7OztJQU1wQiw2Q0FDMkI7Ozs7O0lBRTNCLHdEQUF3Qzs7Ozs7SUFDeEMsd0RBQXdDOzs7OztJQUN4QyxvREFBb0M7Ozs7O0lBQ3BDLG9EQUFvQzs7Ozs7SUFDcEMsb0RBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBhcmFtcyB9IGZyb20gJy4uLy4uLy4uL2NvcmUvcHVibGljLWFwaSc7XG5pbXBvcnQgeyBHZW9OYW1lc0NpdHkgfSBmcm9tICcuLi8uLi8uLi9lbnRpdGllcy9wdWJsaWMtYXBpJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAndG9jby1vcmctdmlldy1nZW8tbmFtZXMtY2l0eScsXG5cdHRlbXBsYXRlVXJsOiAnLi9vcmctdmlldy1nZW8tbmFtZXMtY2l0eS5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL29yZy12aWV3LWdlby1uYW1lcy1jaXR5LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgT3JnVmlld0dlb05hbWVzQ2l0eUNvbXBvbmVudFxue1xuICAgIC8qKlxuICAgICAqIFRoZSBjb250cm9sJ3MgYXBwZWFyYW5jZS4gXG4gICAgICogQnkgZGVmYXVsdCwgaXRzIHZhbHVlIGlzIGAnb3V0bGluZSdgLiBcbiAgICAgKi9cblx0QElucHV0KClcblx0cHVibGljIGFwcGVhcmFuY2U6IHN0cmluZztcblxuXHQvKipcblx0ICogVGhlIGNvbnRyb2wncyBkZXNjcmlwdGlvbi4gXG5cdCAqIEJ5IGRlZmF1bHQsIGl0cyB2YWx1ZSBpcyBgdW5kZWZpbmVkYCBhbmQgaXQgaXMgbm90IHNob3dlZC4gXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRwdWJsaWMgZGVzYzogc3RyaW5nO1xuXG5cdC8qKlxuXHQgKiBBIGxpbmtlZCBHZW9OYW1lcyBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgb3JnYW5pemF0aW9uLiBcbiAgICAgKiBCeSBkZWZhdWx0LCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAuIFxuXHQgKi9cblx0QElucHV0KClcblx0cHVibGljIHZhbHVlOiBHZW9OYW1lc0NpdHk7XG5cblx0cHJpdmF0ZSBfZ2VvbmFtZXNfYWRtaW4xOiBQYXJhbXM8YW55PltdO1xuXHRwcml2YXRlIF9nZW9uYW1lc19hZG1pbjI6IFBhcmFtczxhbnk+W107XG5cdHByaXZhdGUgX251dHNfbGV2ZWwxOiBQYXJhbXM8YW55PltdO1xuXHRwcml2YXRlIF9udXRzX2xldmVsMjogUGFyYW1zPGFueT5bXTtcblx0cHJpdmF0ZSBfbnV0c19sZXZlbDM6IFBhcmFtczxhbnk+W107XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKClcblx0e1xuXHRcdHRoaXMuYXBwZWFyYW5jZSA9ICdvdXRsaW5lJztcblx0XHR0aGlzLmRlc2MgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy52YWx1ZSA9IHVuZGVmaW5lZDtcblxuXHRcdHRoaXMuX2dlb25hbWVzX2FkbWluMSA9IFtdO1xuXHRcdHRoaXMuX2dlb25hbWVzX2FkbWluMiA9IFtdO1xuXHRcdHRoaXMuX251dHNfbGV2ZWwxID0gW107XG5cdFx0dGhpcy5fbnV0c19sZXZlbDIgPSBbXTtcblx0XHR0aGlzLl9udXRzX2xldmVsMyA9IFtdO1xuXHR9XG5cblx0cHVibGljIG5nT25Jbml0KCk6IHZvaWRcblx0e1xuXHRcdGlmICh0aGlzLnZhbHVlKVxuXHRcdHtcblx0XHRcdGlmICh0aGlzLnZhbHVlLmdlb25hbWVzX2FkbWluMSkgdGhpcy5fY3JlYXRlVmFsdWVBc0FycmF5KHRoaXMudmFsdWUuZ2VvbmFtZXNfYWRtaW4xLCB0aGlzLl9nZW9uYW1lc19hZG1pbjEpO1xuXHRcdFx0aWYgKHRoaXMudmFsdWUuZ2VvbmFtZXNfYWRtaW4yKSB0aGlzLl9jcmVhdGVWYWx1ZUFzQXJyYXkodGhpcy52YWx1ZS5nZW9uYW1lc19hZG1pbjIsIHRoaXMuX2dlb25hbWVzX2FkbWluMik7XG5cdFx0XHRpZiAodGhpcy52YWx1ZS5udXRzX2xldmVsMSkgdGhpcy5fY3JlYXRlVmFsdWVBc0FycmF5KHRoaXMudmFsdWUubnV0c19sZXZlbDEsIHRoaXMuX251dHNfbGV2ZWwxKTtcblx0XHRcdGlmICh0aGlzLnZhbHVlLm51dHNfbGV2ZWwyKSB0aGlzLl9jcmVhdGVWYWx1ZUFzQXJyYXkodGhpcy52YWx1ZS5udXRzX2xldmVsMiwgdGhpcy5fbnV0c19sZXZlbDIpO1xuXHRcdFx0aWYgKHRoaXMudmFsdWUubnV0c19sZXZlbDMpIHRoaXMuX2NyZWF0ZVZhbHVlQXNBcnJheSh0aGlzLnZhbHVlLm51dHNfbGV2ZWwzLCB0aGlzLl9udXRzX2xldmVsMyk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBfY3JlYXRlVmFsdWVBc0FycmF5KG9iakZyb21Db3B5OiBQYXJhbXM8YW55PiwgYXJyYXlUb0ZpbGw6IFBhcmFtczxhbnk+W10pOiB2b2lkXG5cdHtcblx0XHRPYmplY3Qua2V5cyhvYmpGcm9tQ29weSkuZm9yRWFjaCgoa2V5OiBzdHJpbmcpOiB2b2lkID0+IHtcblx0XHRcdGFycmF5VG9GaWxsLnB1c2goe1xuXHRcdFx0XHQncHJvcGVydHknOiBrZXksXG5cdFx0XHRcdCd2YWx1ZSc6IG9iakZyb21Db3B5W2tleV1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybnMgdGhlIGBnZW9uYW1lc19hZG1pbjFgIHZhbHVlIGFzIGFuIGFycmF5IGZvciB1c2luZyBieSBgU3RhdGljVGFibGVDb21wb25lbnRgLiBcblx0ICovXG5cdHB1YmxpYyBnZXQgZ2V0R2VvTmFtZXNBZG1pbjEoKTogUGFyYW1zPGFueT5bXVxuXHR7XG5cdFx0cmV0dXJuIHRoaXMuX2dlb25hbWVzX2FkbWluMTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIHRoZSBgZ2VvbmFtZXNfYWRtaW4yYCB2YWx1ZSBhcyBhbiBhcnJheSBmb3IgdXNpbmcgYnkgYFN0YXRpY1RhYmxlQ29tcG9uZW50YC4gXG5cdCAqL1xuXHRwdWJsaWMgZ2V0IGdldEdlb05hbWVzQWRtaW4yKCk6IFBhcmFtczxhbnk+W11cblx0e1xuXHRcdHJldHVybiB0aGlzLl9nZW9uYW1lc19hZG1pbjI7XG5cdH1cblxuXHQvKipcblx0ICogUmV0dXJucyB0aGUgYG51dHNfbGV2ZWwxYCB2YWx1ZSBhcyBhbiBhcnJheSBmb3IgdXNpbmcgYnkgYFN0YXRpY1RhYmxlQ29tcG9uZW50YC4gXG5cdCAqL1xuXHRwdWJsaWMgZ2V0IGdldE51dHNMZXZlbDEoKTogUGFyYW1zPGFueT5bXVxuXHR7XG5cdFx0cmV0dXJuIHRoaXMuX251dHNfbGV2ZWwxO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybnMgdGhlIGBudXRzX2xldmVsMmAgdmFsdWUgYXMgYW4gYXJyYXkgZm9yIHVzaW5nIGJ5IGBTdGF0aWNUYWJsZUNvbXBvbmVudGAuIFxuXHQgKi9cblx0cHVibGljIGdldCBnZXROdXRzTGV2ZWwyKCk6IFBhcmFtczxhbnk+W11cblx0e1xuXHRcdHJldHVybiB0aGlzLl9udXRzX2xldmVsMjtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIHRoZSBgbnV0c19sZXZlbDNgIHZhbHVlIGFzIGFuIGFycmF5IGZvciB1c2luZyBieSBgU3RhdGljVGFibGVDb21wb25lbnRgLiBcblx0ICovXG5cdHB1YmxpYyBnZXQgZ2V0TnV0c0xldmVsMygpOiBQYXJhbXM8YW55PltdXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fbnV0c19sZXZlbDM7XG5cdH1cbn1cbiJdfQ==