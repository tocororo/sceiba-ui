/**
 * @fileoverview added by tsickle
 * Generated from: lib/entities/organization.entity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { EntityBase, Entity } from './common';
/** @type {?} */
export var OrganizationRelationships = {
    PARENT: { label: 'Padre', value: 'parent' },
    CHILD: { label: 'Hija', value: 'child' },
    RELATED: { label: 'Relacionada', value: 'related' },
};
/**
 * Entity for `LabelDiffLang` based on schema `organization-v1.0.0.json`.
 * Name of the institute in different language.
 */
var /**
 * Entity for `LabelDiffLang` based on schema `organization-v1.0.0.json`.
 * Name of the institute in different language.
 */
LabelDiffLang = /** @class */ (function (_super) {
    tslib_1.__extends(LabelDiffLang, _super);
    function LabelDiffLang() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Institute name in a language variant.
         */
        _this.label = '';
        /**
         * ISO-639-1 language code.
         */
        _this.iso639 = '';
        return _this;
    }
    return LabelDiffLang;
}(EntityBase));
/**
 * Entity for `LabelDiffLang` based on schema `organization-v1.0.0.json`.
 * Name of the institute in different language.
 */
export { LabelDiffLang };
if (false) {
    /**
     * Institute name in a language variant.
     * @type {?}
     */
    LabelDiffLang.prototype.label;
    /**
     * ISO-639-1 language code.
     * @type {?}
     */
    LabelDiffLang.prototype.iso639;
}
/**
 * Entity for `Redirected` based on schema `organization-v1.0.0.json`.
 * Which organization redirects.
 */
var /**
 * Entity for `Redirected` based on schema `organization-v1.0.0.json`.
 * Which organization redirects.
 */
Redirected = /** @class */ (function (_super) {
    tslib_1.__extends(Redirected, _super);
    function Redirected() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Institute name in a language variant.
         */
        _this.idtype = '';
        /**
         * ISO-639-1 language code.
         */
        _this.value = '';
        return _this;
    }
    return Redirected;
}(EntityBase));
/**
 * Entity for `Redirected` based on schema `organization-v1.0.0.json`.
 * Which organization redirects.
 */
export { Redirected };
if (false) {
    /**
     * Institute name in a language variant.
     * @type {?}
     */
    Redirected.prototype.idtype;
    /**
     * ISO-639-1 language code.
     * @type {?}
     */
    Redirected.prototype.value;
}
/**
 * Entity for `Relationship` based on schema `organization-v1.0.0.json`.
 * A relationship the institute has to other.
 */
var /**
 * Entity for `Relationship` based on schema `organization-v1.0.0.json`.
 * A relationship the institute has to other.
 */
Relationship = /** @class */ (function (_super) {
    tslib_1.__extends(Relationship, _super);
    function Relationship() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Organization Identifiers, different from GRID mapping.
         */
        _this.identifiers = new Array();
        /**
         * Relationship type.
         */
        _this.type = '';
        /**
         * Name of the related institute.
         */
        _this.label = '';
        return _this;
    }
    return Relationship;
}(Entity));
/**
 * Entity for `Relationship` based on schema `organization-v1.0.0.json`.
 * A relationship the institute has to other.
 */
export { Relationship };
if (false) {
    /**
     * Organization Identifiers, different from GRID mapping.
     * @type {?}
     */
    Relationship.prototype.identifiers;
    /**
     * Relationship type.
     * @type {?}
     */
    Relationship.prototype.type;
    /**
     * Name of the related institute.
     * @type {?}
     */
    Relationship.prototype.label;
}
/**
 * Entity for `GeoNamesAdmin` based on schema `organization-v1.0.0.json`.
 */
var /**
 * Entity for `GeoNamesAdmin` based on schema `organization-v1.0.0.json`.
 */
GeoNamesAdmin = /** @class */ (function (_super) {
    tslib_1.__extends(GeoNamesAdmin, _super);
    function GeoNamesAdmin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * ID in the region format.
         */
        _this.id = '';
        /**
         * Name of the region.
         */
        _this.name = '';
        /**
         * Preferred ASCII encoded name for the region.
         */
        _this.ascii_name = '';
        return _this;
    }
    return GeoNamesAdmin;
}(EntityBase));
/**
 * Entity for `GeoNamesAdmin` based on schema `organization-v1.0.0.json`.
 */
export { GeoNamesAdmin };
if (false) {
    /**
     * ID in the region format.
     * @type {?}
     */
    GeoNamesAdmin.prototype.id;
    /**
     * Name of the region.
     * @type {?}
     */
    GeoNamesAdmin.prototype.name;
    /**
     * Preferred ASCII encoded name for the region.
     * @type {?}
     */
    GeoNamesAdmin.prototype.ascii_name;
}
/**
 * Entity for `GeoNamesCity` based on schema `organization-v1.0.0.json`.
 * The linked GeoNames data.
 */
var /**
 * Entity for `GeoNamesCity` based on schema `organization-v1.0.0.json`.
 * The linked GeoNames data.
 */
GeoNamesCity = /** @class */ (function (_super) {
    tslib_1.__extends(GeoNamesCity, _super);
    function GeoNamesCity() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * GeoNames ID.
         */
        _this.id = 0;
        /**
         * Name of the city.
         */
        _this.city = '';
        /**
         * geonames_admin1.
         */
        _this.geonames_admin1 = undefined;
        /**
         * geonames_admin2.
         */
        _this.geonames_admin2 = undefined;
        /**
         * nuts_level1.
         */
        _this.nuts_level1 = undefined;
        /**
         * nuts_level2.
         */
        _this.nuts_level2 = undefined;
        /**
         * nuts_level3.
         */
        _this.nuts_level3 = undefined;
        return _this;
    }
    return GeoNamesCity;
}(EntityBase));
/**
 * Entity for `GeoNamesCity` based on schema `organization-v1.0.0.json`.
 * The linked GeoNames data.
 */
export { GeoNamesCity };
if (false) {
    /**
     * GeoNames ID.
     * @type {?}
     */
    GeoNamesCity.prototype.id;
    /**
     * Name of the city.
     * @type {?}
     */
    GeoNamesCity.prototype.city;
    /**
     * geonames_admin1.
     * @type {?}
     */
    GeoNamesCity.prototype.geonames_admin1;
    /**
     * geonames_admin2.
     * @type {?}
     */
    GeoNamesCity.prototype.geonames_admin2;
    /**
     * nuts_level1.
     * @type {?}
     */
    GeoNamesCity.prototype.nuts_level1;
    /**
     * nuts_level2.
     * @type {?}
     */
    GeoNamesCity.prototype.nuts_level2;
    /**
     * nuts_level3.
     * @type {?}
     */
    GeoNamesCity.prototype.nuts_level3;
}
/**
 * Entity for `Address` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
var /**
 * Entity for `Address` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
Address = /** @class */ (function (_super) {
    tslib_1.__extends(Address, _super);
    function Address() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Name of the city.
         */
        _this.city = '';
        /**
         * Name of the country.
         */
        _this.country = '';
        /**
         * ISO 3166-1 alpha-2 code of the country.
         */
        _this.country_code = '';
        /**
         * Latitute of the institute.
         */
        _this.lat = 0;
        /**
         * Longitude of the institute.
         */
        _this.lng = 0;
        /**
         * First line of the address.
         */
        _this.line_1 = '';
        /**
         * Second line of the address.
         */
        _this.line_2 = '';
        /**
         * Third line of the address.
         */
        _this.line_3 = '';
        /**
         * Postcode/zipcode.
         */
        _this.postcode = '';
        /**
         * If there is more than one address, identifies the main location.
         * This address identifies the main location.
         */
        _this.primary = false;
        /**
         * Name of the state/region.
         */
        _this.state = '';
        /**
         * ISO 3166-2 region code.
         */
        _this.state_code = '';
        /**
         * Name of the municipality.
         */
        _this.municipality = '';
        /**
         * dpa municipality code.
         */
        _this.municipality_dpa = '';
        /**
         * Linked GeoNames data.
         */
        _this.geonames_city = undefined;
        return _this;
    }
    return Address;
}(EntityBase));
/**
 * Entity for `Address` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
export { Address };
if (false) {
    /**
     * Name of the city.
     * @type {?}
     */
    Address.prototype.city;
    /**
     * Name of the country.
     * @type {?}
     */
    Address.prototype.country;
    /**
     * ISO 3166-1 alpha-2 code of the country.
     * @type {?}
     */
    Address.prototype.country_code;
    /**
     * Latitute of the institute.
     * @type {?}
     */
    Address.prototype.lat;
    /**
     * Longitude of the institute.
     * @type {?}
     */
    Address.prototype.lng;
    /**
     * First line of the address.
     * @type {?}
     */
    Address.prototype.line_1;
    /**
     * Second line of the address.
     * @type {?}
     */
    Address.prototype.line_2;
    /**
     * Third line of the address.
     * @type {?}
     */
    Address.prototype.line_3;
    /**
     * Postcode/zipcode.
     * @type {?}
     */
    Address.prototype.postcode;
    /**
     * If there is more than one address, identifies the main location.
     * This address identifies the main location.
     * @type {?}
     */
    Address.prototype.primary;
    /**
     * Name of the state/region.
     * @type {?}
     */
    Address.prototype.state;
    /**
     * ISO 3166-2 region code.
     * @type {?}
     */
    Address.prototype.state_code;
    /**
     * Name of the municipality.
     * @type {?}
     */
    Address.prototype.municipality;
    /**
     * dpa municipality code.
     * @type {?}
     */
    Address.prototype.municipality_dpa;
    /**
     * Linked GeoNames data.
     * @type {?}
     */
    Address.prototype.geonames_city;
}
/**
 * Entity for `RedirectPropertiesIdtype` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
var /**
 * Entity for `RedirectPropertiesIdtype` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
RedirectPropertiesIdtype = /** @class */ (function (_super) {
    tslib_1.__extends(RedirectPropertiesIdtype, _super);
    function RedirectPropertiesIdtype() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * description for RedirectPropertiesIdtype.
         */
        _this.description = '';
        /**
         * type of RedirectPropertiesIdtype.
         */
        _this.type = '';
        /**
         * enum for RedirectPropertiesIdtype.
         */
        _this.enum = new Array();
        return _this;
    }
    return RedirectPropertiesIdtype;
}(EntityBase));
/**
 * Entity for `RedirectPropertiesIdtype` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
export { RedirectPropertiesIdtype };
if (false) {
    /**
     * description for RedirectPropertiesIdtype.
     * @type {?}
     */
    RedirectPropertiesIdtype.prototype.description;
    /**
     * type of RedirectPropertiesIdtype.
     * @type {?}
     */
    RedirectPropertiesIdtype.prototype.type;
    /**
     * enum for RedirectPropertiesIdtype.
     * @type {?}
     */
    RedirectPropertiesIdtype.prototype.enum;
}
/**
 * Entity for `RedirectProperties` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
var /**
 * Entity for `RedirectProperties` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
RedirectProperties = /** @class */ (function (_super) {
    tslib_1.__extends(RedirectProperties, _super);
    function RedirectProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Name of the city.
         */
        _this.idtype = undefined;
        /**
         * Name of the country.
         */
        _this.value = undefined;
        return _this;
    }
    return RedirectProperties;
}(EntityBase));
/**
 * Entity for `RedirectProperties` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
export { RedirectProperties };
if (false) {
    /**
     * Name of the city.
     * @type {?}
     */
    RedirectProperties.prototype.idtype;
    /**
     * Name of the country.
     * @type {?}
     */
    RedirectProperties.prototype.value;
}
/**
 * Entity for `Redirect` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
var /**
 * Entity for `Redirect` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
Redirect = /** @class */ (function (_super) {
    tslib_1.__extends(Redirect, _super);
    function Redirect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Type of redirect.
         */
        _this.type = '';
        /**
         * Show additional properties for redirect if true.
         */
        _this.additionalProperties = false;
        /**
         * Properties for redirect.
         */
        _this.properties = undefined;
        return _this;
    }
    return Redirect;
}(EntityBase));
/**
 * Entity for `Redirect` based on schema `organization-v1.0.0.json`.
 * An address associated with the institute.
 */
export { Redirect };
if (false) {
    /**
     * Type of redirect.
     * @type {?}
     */
    Redirect.prototype.type;
    /**
     * Show additional properties for redirect if true.
     * @type {?}
     */
    Redirect.prototype.additionalProperties;
    /**
     * Properties for redirect.
     * @type {?}
     */
    Redirect.prototype.properties;
}
/**
 * Entity for `Organizations` based on schema `organization-v1.0.0.json`.
 */
var /**
 * Entity for `Organizations` based on schema `organization-v1.0.0.json`.
 */
Organization = /** @class */ (function (_super) {
    tslib_1.__extends(Organization, _super);
    function Organization() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Organization Identifiers, different from GRID mapping.
         */
        _this.identifiers = new Array();
        /**
         * The name typically used to refer to the institute.
         */
        _this.name = '';
        /**
         * For an active institute, this is always set to active.
         */
        _this.status = '';
        /**
         * The list of other names the institute is known as.
         */
        _this.aliases = new Array();
        /**
         * The list of short acronyms the institute is known as (e.g. MRC for the Medical Research Council).
         */
        _this.acronyms = new Array();
        /**
         * The list of types describing the institute.
         */
        _this.types = new Array();
        /**
         * URL of the wikipedia page for the institute.
         */
        _this.wikipedia_url = '';
        /**
         * Contact email address for the institute.
         */
        _this.email_address = '';
        /**
         * The list of IP addresses known to belong to the institute.
         */
        _this.ip_addresses = new Array();
        /**
         * Year the institute opened, CE.
         */
        _this.established = -1;
        /**
         * Year the institute registered on ONEI.
         */
        _this.onei_registry = -1;
        /**
         * If its able for exporting to international organizations systems.
         */
        _this.exportable = false;
        /**
         * The list of URLs linking to things like the homepage for the institute.
         */
        _this.links = new Array();
        /**
         * Name of the institute in different languages.
         */
        _this.labels = new Array();
        /**
         * Any relationships the institute has to others.
         */
        _this.relationships = new Array();
        /**
         * An array of addresses associated with the institute.
         */
        _this.addresses = new Array();
        /**
         * An array of addresses associated with the institute.
         */
        _this.redirect = undefined;
        return _this;
    }
    return Organization;
}(Entity));
/**
 * Entity for `Organizations` based on schema `organization-v1.0.0.json`.
 */
export { Organization };
if (false) {
    /**
     * Organization Identifiers, different from GRID mapping.
     * @type {?}
     */
    Organization.prototype.identifiers;
    /**
     * The name typically used to refer to the institute.
     * @type {?}
     */
    Organization.prototype.name;
    /**
     * For an active institute, this is always set to active.
     * @type {?}
     */
    Organization.prototype.status;
    /**
     * The list of other names the institute is known as.
     * @type {?}
     */
    Organization.prototype.aliases;
    /**
     * The list of short acronyms the institute is known as (e.g. MRC for the Medical Research Council).
     * @type {?}
     */
    Organization.prototype.acronyms;
    /**
     * The list of types describing the institute.
     * @type {?}
     */
    Organization.prototype.types;
    /**
     * URL of the wikipedia page for the institute.
     * @type {?}
     */
    Organization.prototype.wikipedia_url;
    /**
     * Contact email address for the institute.
     * @type {?}
     */
    Organization.prototype.email_address;
    /**
     * The list of IP addresses known to belong to the institute.
     * @type {?}
     */
    Organization.prototype.ip_addresses;
    /**
     * Year the institute opened, CE.
     * @type {?}
     */
    Organization.prototype.established;
    /**
     * Year the institute registered on ONEI.
     * @type {?}
     */
    Organization.prototype.onei_registry;
    /**
     * If its able for exporting to international organizations systems.
     * @type {?}
     */
    Organization.prototype.exportable;
    /**
     * The list of URLs linking to things like the homepage for the institute.
     * @type {?}
     */
    Organization.prototype.links;
    /**
     * Name of the institute in different languages.
     * @type {?}
     */
    Organization.prototype.labels;
    /**
     * Any relationships the institute has to others.
     * @type {?}
     */
    Organization.prototype.relationships;
    /**
     * An array of addresses associated with the institute.
     * @type {?}
     */
    Organization.prototype.addresses;
    /**
     * An array of addresses associated with the institute.
     * @type {?}
     */
    Organization.prototype.redirect;
}
//# sourceMappingURL=data:application/json;base64,