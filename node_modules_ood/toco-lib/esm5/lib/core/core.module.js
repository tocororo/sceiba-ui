/**
 * @fileoverview added by tsickle
 * Generated from: lib/core/core.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { SharedModule } from '../shared/public-api';
import { ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { NgxChartsModule } from '@swimlane/ngx-charts';
// import { throwIfAlreadyLoaded } from './module-import-guard';
import { BodyComponent } from './body/body.component';
import { Error404Component } from './error404/error404.component';
import { FooterComponent } from './footer/footer.component';
import { HomeComponent } from './home/home.component';
import { InfoCardComponent } from './info-card/info-card.component';
import { JournalCardComponent } from './journal-card/journal-card.component';
import { NavComponent } from './nav/nav.component';
import { PageHeaderComponent } from './page-header/page-header.component';
import { PageNotFoundComponent } from './page-not-found/page-not-found.component';
import { CoreRoutingModule } from './core-routing.module';
import { MetadataService } from './metadata.service';
import { RoadMapComponent } from './utils/road-map/road-map.component';
import { RoadMapSceibaComponent } from './utils/road-map-sceiba/road-map-sceiba.component';
import { GetViewContainerDirective } from './utils/get-view-container.directive';
import { EqualLengthDirective } from './utils/validator';
import { DialogContentComponent, DialogDeleteConfirmComponent } from './utils/message-handler';
import { ProgressComponent } from './utils/progress';
import { SceibaAppsComponent } from './sceiba-apps/sceiba-apps.component';
var CoreModule = /** @class */ (function () {
    function CoreModule(parentModule) {
        //throwIfAlreadyLoaded(parentModule, 'CoreModule');
    }
    CoreModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        BodyComponent,
                        Error404Component,
                        FooterComponent,
                        HomeComponent,
                        InfoCardComponent,
                        JournalCardComponent,
                        NavComponent,
                        PageHeaderComponent,
                        PageNotFoundComponent,
                        RoadMapComponent,
                        RoadMapSceibaComponent,
                        GetViewContainerDirective,
                        EqualLengthDirective,
                        DialogContentComponent,
                        DialogDeleteConfirmComponent,
                        ProgressComponent,
                        SceibaAppsComponent
                    ],
                    imports: [
                        SharedModule,
                        ReactiveFormsModule,
                        TranslateModule,
                        NgxChartsModule,
                        CoreRoutingModule
                    ],
                    exports: [
                        BodyComponent,
                        Error404Component,
                        FooterComponent,
                        HomeComponent,
                        InfoCardComponent,
                        JournalCardComponent,
                        NavComponent,
                        PageHeaderComponent,
                        PageNotFoundComponent,
                        RoadMapComponent,
                        RoadMapSceibaComponent,
                        GetViewContainerDirective,
                        EqualLengthDirective,
                        DialogContentComponent,
                        DialogDeleteConfirmComponent,
                        ProgressComponent,
                        SceibaAppsComponent
                    ],
                    entryComponents: [
                        DialogContentComponent,
                        DialogDeleteConfirmComponent
                    ],
                    providers: [
                        MetadataService
                    ]
                },] }
    ];
    /** @nocollapse */
    CoreModule.ctorParameters = function () { return [
        { type: CoreModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
    ]; };
    return CoreModule;
}());
export { CoreModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2NvcmUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQUt2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzVELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFbEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzNGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9GLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRTFFO0lBMERJLG9CQUEyQyxZQUF3QjtRQUUvRCxtREFBbUQ7SUFDdkQsQ0FBQzs7Z0JBN0RKLFFBQVEsU0FBQztvQkFDTixZQUFZLEVBQUU7d0JBQ1YsYUFBYTt3QkFDYixpQkFBaUI7d0JBQ2pCLGVBQWU7d0JBQ2YsYUFBYTt3QkFDYixpQkFBaUI7d0JBQ2pCLG9CQUFvQjt3QkFDcEIsWUFBWTt3QkFDWixtQkFBbUI7d0JBQ25CLHFCQUFxQjt3QkFDckIsZ0JBQWdCO3dCQUNoQixzQkFBc0I7d0JBQ3RCLHlCQUF5Qjt3QkFDekIsb0JBQW9CO3dCQUNwQixzQkFBc0I7d0JBQ3RCLDRCQUE0Qjt3QkFDNUIsaUJBQWlCO3dCQUNqQixtQkFBbUI7cUJBQ3RCO29CQUVELE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLG1CQUFtQjt3QkFDbkIsZUFBZTt3QkFDZixlQUFlO3dCQUNmLGlCQUFpQjtxQkFDcEI7b0JBRUQsT0FBTyxFQUFFO3dCQUNMLGFBQWE7d0JBQ2IsaUJBQWlCO3dCQUNqQixlQUFlO3dCQUNmLGFBQWE7d0JBQ2IsaUJBQWlCO3dCQUNqQixvQkFBb0I7d0JBQ3BCLFlBQVk7d0JBQ1osbUJBQW1CO3dCQUNuQixxQkFBcUI7d0JBQ3JCLGdCQUFnQjt3QkFDaEIsc0JBQXNCO3dCQUN0Qix5QkFBeUI7d0JBQ3pCLG9CQUFvQjt3QkFDcEIsc0JBQXNCO3dCQUN0Qiw0QkFBNEI7d0JBQzVCLGlCQUFpQjt3QkFDakIsbUJBQW1CO3FCQUN0QjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2Isc0JBQXNCO3dCQUN0Qiw0QkFBNEI7cUJBQy9CO29CQUNELFNBQVMsRUFBRTt3QkFDUCxlQUFlO3FCQUNsQjtpQkFDSjs7OztnQkFHNEQsVUFBVSx1QkFBL0MsUUFBUSxZQUFJLFFBQVE7O0lBSTVDLGlCQUFDO0NBQUEsQUE5REQsSUE4REM7U0FOWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBOZ01vZHVsZSwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZWRNb2R1bGUgfSBmcm9tICcuLi9zaGFyZWQvcHVibGljLWFwaSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBOZ3hDaGFydHNNb2R1bGUgfSBmcm9tICdAc3dpbWxhbmUvbmd4LWNoYXJ0cyc7XG5cbi8vIGltcG9ydCB7IHRocm93SWZBbHJlYWR5TG9hZGVkIH0gZnJvbSAnLi9tb2R1bGUtaW1wb3J0LWd1YXJkJztcblxuXG5pbXBvcnQgeyBCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9ib2R5L2JvZHkuY29tcG9uZW50JztcbmltcG9ydCB7IEVycm9yNDA0Q29tcG9uZW50IH0gZnJvbSAnLi9lcnJvcjQwNC9lcnJvcjQwNC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9vdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9mb290ZXIvZm9vdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIb21lQ29tcG9uZW50IH0gZnJvbSAnLi9ob21lL2hvbWUuY29tcG9uZW50JztcbmltcG9ydCB7IEluZm9DYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9pbmZvLWNhcmQvaW5mby1jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBKb3VybmFsQ2FyZENvbXBvbmVudCB9IGZyb20gJy4vam91cm5hbC1jYXJkL2pvdXJuYWwtY2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmF2Q29tcG9uZW50IH0gZnJvbSAnLi9uYXYvbmF2LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYWdlSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlLWhlYWRlci9wYWdlLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGFnZU5vdEZvdW5kQ29tcG9uZW50IH0gZnJvbSAnLi9wYWdlLW5vdC1mb3VuZC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBDb3JlUm91dGluZ01vZHVsZSB9IGZyb20gJy4vY29yZS1yb3V0aW5nLm1vZHVsZSc7XG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuL21ldGFkYXRhLnNlcnZpY2UnO1xuaW1wb3J0IHsgUm9hZE1hcENvbXBvbmVudCB9IGZyb20gJy4vdXRpbHMvcm9hZC1tYXAvcm9hZC1tYXAuY29tcG9uZW50JztcbmltcG9ydCB7IFJvYWRNYXBTY2VpYmFDb21wb25lbnQgfSBmcm9tICcuL3V0aWxzL3JvYWQtbWFwLXNjZWliYS9yb2FkLW1hcC1zY2VpYmEuY29tcG9uZW50JztcbmltcG9ydCB7IEdldFZpZXdDb250YWluZXJEaXJlY3RpdmUgfSBmcm9tICcuL3V0aWxzL2dldC12aWV3LWNvbnRhaW5lci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRXF1YWxMZW5ndGhEaXJlY3RpdmUgfSBmcm9tICcuL3V0aWxzL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBEaWFsb2dDb250ZW50Q29tcG9uZW50LCBEaWFsb2dEZWxldGVDb25maXJtQ29tcG9uZW50IH0gZnJvbSAnLi91dGlscy9tZXNzYWdlLWhhbmRsZXInO1xuaW1wb3J0IHsgUHJvZ3Jlc3NDb21wb25lbnQgfSBmcm9tICcuL3V0aWxzL3Byb2dyZXNzJztcbmltcG9ydCB7IFNjZWliYUFwcHNDb21wb25lbnQgfSBmcm9tICcuL3NjZWliYS1hcHBzL3NjZWliYS1hcHBzLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIEJvZHlDb21wb25lbnQsXG4gICAgICAgIEVycm9yNDA0Q29tcG9uZW50LFxuICAgICAgICBGb290ZXJDb21wb25lbnQsXG4gICAgICAgIEhvbWVDb21wb25lbnQsXG4gICAgICAgIEluZm9DYXJkQ29tcG9uZW50LFxuICAgICAgICBKb3VybmFsQ2FyZENvbXBvbmVudCxcbiAgICAgICAgTmF2Q29tcG9uZW50LFxuICAgICAgICBQYWdlSGVhZGVyQ29tcG9uZW50LFxuICAgICAgICBQYWdlTm90Rm91bmRDb21wb25lbnQsXG4gICAgICAgIFJvYWRNYXBDb21wb25lbnQsXG4gICAgICAgIFJvYWRNYXBTY2VpYmFDb21wb25lbnQsXG4gICAgICAgIEdldFZpZXdDb250YWluZXJEaXJlY3RpdmUsXG4gICAgICAgIEVxdWFsTGVuZ3RoRGlyZWN0aXZlLFxuICAgICAgICBEaWFsb2dDb250ZW50Q29tcG9uZW50LFxuICAgICAgICBEaWFsb2dEZWxldGVDb25maXJtQ29tcG9uZW50LFxuICAgICAgICBQcm9ncmVzc0NvbXBvbmVudCxcbiAgICAgICAgU2NlaWJhQXBwc0NvbXBvbmVudFxuICAgIF0sXG5cbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIFNoYXJlZE1vZHVsZSxcbiAgICAgICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICAgICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgICAgICBOZ3hDaGFydHNNb2R1bGUsXG4gICAgICAgIENvcmVSb3V0aW5nTW9kdWxlXG4gICAgXSxcblxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgQm9keUNvbXBvbmVudCxcbiAgICAgICAgRXJyb3I0MDRDb21wb25lbnQsXG4gICAgICAgIEZvb3RlckNvbXBvbmVudCxcbiAgICAgICAgSG9tZUNvbXBvbmVudCxcbiAgICAgICAgSW5mb0NhcmRDb21wb25lbnQsXG4gICAgICAgIEpvdXJuYWxDYXJkQ29tcG9uZW50LFxuICAgICAgICBOYXZDb21wb25lbnQsXG4gICAgICAgIFBhZ2VIZWFkZXJDb21wb25lbnQsXG4gICAgICAgIFBhZ2VOb3RGb3VuZENvbXBvbmVudCxcbiAgICAgICAgUm9hZE1hcENvbXBvbmVudCxcbiAgICAgICAgUm9hZE1hcFNjZWliYUNvbXBvbmVudCxcbiAgICAgICAgR2V0Vmlld0NvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICAgICAgRXF1YWxMZW5ndGhEaXJlY3RpdmUsXG4gICAgICAgIERpYWxvZ0NvbnRlbnRDb21wb25lbnQsXG4gICAgICAgIERpYWxvZ0RlbGV0ZUNvbmZpcm1Db21wb25lbnQsXG4gICAgICAgIFByb2dyZXNzQ29tcG9uZW50LFxuICAgICAgICBTY2VpYmFBcHBzQ29tcG9uZW50XG4gICAgXSxcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICAgICAgRGlhbG9nQ29udGVudENvbXBvbmVudCxcbiAgICAgICAgRGlhbG9nRGVsZXRlQ29uZmlybUNvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIE1ldGFkYXRhU2VydmljZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29yZU1vZHVsZVxue1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBAU2tpcFNlbGYoKSBwYXJlbnRNb2R1bGU6IENvcmVNb2R1bGUpXG4gICAge1xuICAgICAgICAvL3Rocm93SWZBbHJlYWR5TG9hZGVkKHBhcmVudE1vZHVsZSwgJ0NvcmVNb2R1bGUnKTtcbiAgICB9XG59XG4iXX0=