/**
 * @fileoverview added by tsickle
 * Generated from: lib/core/body/body.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
var BodyComponent = /** @class */ (function () {
    function BodyComponent() {
    }
    /**
     * @return {?}
     */
    BodyComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.doReplace();
    };
    /**
     * @return {?}
     */
    BodyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.body) {
            this.doReplace();
        }
    };
    /**
     * @return {?}
     */
    BodyComponent.prototype.doReplace = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var find = "/public/inline-images/";
        /** @type {?} */
        var replace = "/public/inline-images/";
        /** @type {?} */
        var str = this.body.replace(find, replace);
        this.processed = str;
    };
    BodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-body',
                    template: "\n<div class=\"container mat-body\">\n  <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"body\"> </div>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    BodyComponent.ctorParameters = function () { return []; };
    BodyComponent.propDecorators = {
        body: [{ type: Input }]
    };
    return BodyComponent;
}());
export { BodyComponent };
if (false) {
    /** @type {?} */
    BodyComponent.prototype.body;
    /** @type {?} */
    BodyComponent.prototype.processed;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9keS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2JvZHkvYm9keS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6RDtJQVlJO0lBQ0UsQ0FBQzs7OztJQUVILG1DQUFXOzs7SUFBWDtRQUNJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQsZ0NBQVE7OztJQUFSO1FBQ0ksSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1gsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3BCO0lBQ0wsQ0FBQzs7OztJQUVELGlDQUFTOzs7SUFBVDs7WUFDUSxJQUFJLEdBQUcsd0JBQXdCOztZQUMvQixPQUFPLEdBQUcsd0JBQXdCOztZQUNsQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztRQUMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztJQUN6QixDQUFDOztnQkE5QkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxXQUFXO29CQUNyQixrSkFBb0M7O2lCQUV2Qzs7Ozs7dUJBR0ksS0FBSzs7SUF3QlYsb0JBQUM7Q0FBQSxBQS9CRCxJQStCQztTQTFCWSxhQUFhOzs7SUFFdEIsNkJBQ2E7O0lBRWIsa0NBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0b2NvLWJvZHknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ib2R5LmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9ib2R5LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBASW5wdXQoKVxuICAgIGJvZHk6IHN0cmluZztcblxuICAgIHByb2Nlc3NlZDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoKVxuICAgIHsgfVxuXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZG9SZXBsYWNlKCk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmJvZHkpIHtcbiAgICAgICAgICAgIHRoaXMuZG9SZXBsYWNlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkb1JlcGxhY2UoKSB7XG4gICAgICAgIHZhciBmaW5kID0gXCIvcHVibGljL2lubGluZS1pbWFnZXMvXCI7XG4gICAgICAgIHZhciByZXBsYWNlID0gXCIvcHVibGljL2lubGluZS1pbWFnZXMvXCI7XG4gICAgICAgIHZhciBzdHIgPSB0aGlzLmJvZHkucmVwbGFjZShmaW5kLCByZXBsYWNlKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzZWQgPSBzdHI7XG4gICAgfVxufVxuIl19