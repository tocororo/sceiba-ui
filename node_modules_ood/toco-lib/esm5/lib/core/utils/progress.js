/**
 * @fileoverview added by tsickle
 * Generated from: lib/core/utils/progress.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
// @Component({
//     selector: 'toco-progress',
//     template: `
//     <mat-progress-bar *ngIf="loading"
//         mode="indeterminate" color="warn" style="z-index: 1001">
//     </mat-progress-bar>
//     <div *ngIf="loading && position == 'fixed'" class="overlay-fixed">
//     </div >
//     <div *ngIf="loading && position == 'absolute'" class="overlay-absolute">
//     </div> `,
//     styles: [
// `.overlay-fixed {
//     opacity:    0.4;
//     background: #000;
//     width:      100%;
//     height:     100%;
//     z-index:    1000;
//     top:        0;
//     left:       0;
//     position:   fixed;
//   }
//   .overlay-absolute {
//     opacity:    0.4;
//     background: #000;
//     width:      100%;
//     height:     100%;
//     z-index:    1000;
//     top:        0;
//     left:       0;
//     position:   absolute;
//   }`
//     ]
//   })
var ProgressComponent = /** @class */ (function () {
    function ProgressComponent() {
        this.loading = false;
        this.position = 'fixed';
    }
    ProgressComponent.decorators = [
        { type: Component, args: [{
                    selector: 'toco-progress',
                    template: "\n    <div class=\"spinner\" *ngIf=\"loading\">\n      <div class=\"bounce1\"></div>\n      <div class=\"bounce2\"></div>\n      <div class=\"bounce3\"></div>\n    </div>\n ",
                    styles: ["\n.overlay-fixed {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   fixed;\n    }\n    .overlay-absolute {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   absolute;\n    }\n\n.spinner {\nmargin: 5px auto 0;\nwidth: 70px;\ntext-align: center;\n}\n\n.spinner > div {\nwidth: 14px;\nheight: 14px;\n\n\nborder-radius: 100%;\ndisplay: inline-block;\n-webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\nanimation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\nbackground-color:#007e3e;\n-webkit-animation-delay: -0.60s;\nanimation-delay: -0.60s;\n}\n\n.spinner .bounce2 {\nbackground-color: #018d79;\n-webkit-animation-delay: -0.30s;\nanimation-delay: -0.30s;\n}\n\n.spinner .bounce3 {\nbackground-color: #0f6684;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n0%, 80%, 100% { -webkit-transform: scale(0) }\n40% { -webkit-transform: scale(1.0) }\n}\n\n@keyframes sk-bouncedelay {\n0%, 80%, 100% {\n  -webkit-transform: scale(0);\n  transform: scale(0);\n} 40% {\n  -webkit-transform: scale(1.0);\n  transform: scale(1.0);\n}\n}"]
                }] }
    ];
    /** @nocollapse */
    ProgressComponent.ctorParameters = function () { return []; };
    ProgressComponent.propDecorators = {
        loading: [{ type: Input }],
        position: [{ type: Input }]
    };
    return ProgressComponent;
}());
export { ProgressComponent };
if (false) {
    /** @type {?} */
    ProgressComponent.prototype.loading;
    /** @type {?} */
    ProgressComponent.prototype.position;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly90b2NvLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL3V0aWxzL3Byb2dyZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3Qy9DO0lBeUZNO1FBSE8sWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixhQUFRLEdBQUcsT0FBTyxDQUFDO0lBQ1YsQ0FBQzs7Z0JBekZ0QixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLFFBQVEsRUFBRSwrS0FNWjs2QkFHRiwyekNBb0VFO2lCQUdDOzs7OzswQkFHTSxLQUFLOzJCQUVMLEtBQUs7O0lBR1osd0JBQUM7Q0FBQSxBQTFGRCxJQTBGQztTQU5ZLGlCQUFpQjs7O0lBQ3hCLG9DQUN1Qjs7SUFDdkIscUNBQzBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyBAQ29tcG9uZW50KHtcbi8vICAgICBzZWxlY3RvcjogJ3RvY28tcHJvZ3Jlc3MnLFxuLy8gICAgIHRlbXBsYXRlOiBgXG4vLyAgICAgPG1hdC1wcm9ncmVzcy1iYXIgKm5nSWY9XCJsb2FkaW5nXCJcbi8vICAgICAgICAgbW9kZT1cImluZGV0ZXJtaW5hdGVcIiBjb2xvcj1cIndhcm5cIiBzdHlsZT1cInotaW5kZXg6IDEwMDFcIj5cbi8vICAgICA8L21hdC1wcm9ncmVzcy1iYXI+XG4vLyAgICAgPGRpdiAqbmdJZj1cImxvYWRpbmcgJiYgcG9zaXRpb24gPT0gJ2ZpeGVkJ1wiIGNsYXNzPVwib3ZlcmxheS1maXhlZFwiPlxuXG4vLyAgICAgPC9kaXYgPlxuLy8gICAgIDxkaXYgKm5nSWY9XCJsb2FkaW5nICYmIHBvc2l0aW9uID09ICdhYnNvbHV0ZSdcIiBjbGFzcz1cIm92ZXJsYXktYWJzb2x1dGVcIj5cblxuLy8gICAgIDwvZGl2PiBgLFxuXG4vLyAgICAgc3R5bGVzOiBbXG4vLyBgLm92ZXJsYXktZml4ZWQge1xuLy8gICAgIG9wYWNpdHk6ICAgIDAuNDtcbi8vICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuLy8gICAgIHdpZHRoOiAgICAgIDEwMCU7XG4vLyAgICAgaGVpZ2h0OiAgICAgMTAwJTtcbi8vICAgICB6LWluZGV4OiAgICAxMDAwO1xuLy8gICAgIHRvcDogICAgICAgIDA7XG4vLyAgICAgbGVmdDogICAgICAgMDtcbi8vICAgICBwb3NpdGlvbjogICBmaXhlZDtcbi8vICAgfVxuLy8gICAub3ZlcmxheS1hYnNvbHV0ZSB7XG4vLyAgICAgb3BhY2l0eTogICAgMC40O1xuLy8gICAgIGJhY2tncm91bmQ6ICMwMDA7XG4vLyAgICAgd2lkdGg6ICAgICAgMTAwJTtcbi8vICAgICBoZWlnaHQ6ICAgICAxMDAlO1xuLy8gICAgIHotaW5kZXg6ICAgIDEwMDA7XG4vLyAgICAgdG9wOiAgICAgICAgMDtcbi8vICAgICBsZWZ0OiAgICAgICAwO1xuLy8gICAgIHBvc2l0aW9uOiAgIGFic29sdXRlO1xuLy8gICB9YFxuLy8gICAgIF1cblxuLy8gICB9KVxuXG4gIEBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndG9jby1wcm9ncmVzcycsXG4gICAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwic3Bpbm5lclwiICpuZ0lmPVwibG9hZGluZ1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImJvdW5jZTFcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJib3VuY2UyXCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiYm91bmNlM1wiPjwvZGl2PlxuICAgIDwvZGl2PlxuIGAsXG5cbiAgICBzdHlsZXM6IFtcbmBcbi5vdmVybGF5LWZpeGVkIHtcbiAgICAgIG9wYWNpdHk6ICAgIDAuNDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgICB3aWR0aDogICAgICAxMDAlO1xuICAgICAgaGVpZ2h0OiAgICAgMTAwJTtcbiAgICAgIHotaW5kZXg6ICAgIDEwMDA7XG4gICAgICB0b3A6ICAgICAgICAwO1xuICAgICAgbGVmdDogICAgICAgMDtcbiAgICAgIHBvc2l0aW9uOiAgIGZpeGVkO1xuICAgIH1cbiAgICAub3ZlcmxheS1hYnNvbHV0ZSB7XG4gICAgICBvcGFjaXR5OiAgICAwLjQ7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgICAgd2lkdGg6ICAgICAgMTAwJTtcbiAgICAgIGhlaWdodDogICAgIDEwMCU7XG4gICAgICB6LWluZGV4OiAgICAxMDAwO1xuICAgICAgdG9wOiAgICAgICAgMDtcbiAgICAgIGxlZnQ6ICAgICAgIDA7XG4gICAgICBwb3NpdGlvbjogICBhYnNvbHV0ZTtcbiAgICB9XG5cbi5zcGlubmVyIHtcbm1hcmdpbjogNXB4IGF1dG8gMDtcbndpZHRoOiA3MHB4O1xudGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc3Bpbm5lciA+IGRpdiB7XG53aWR0aDogMTRweDtcbmhlaWdodDogMTRweDtcblxuXG5ib3JkZXItcmFkaXVzOiAxMDAlO1xuZGlzcGxheTogaW5saW5lLWJsb2NrO1xuLXdlYmtpdC1hbmltYXRpb246IHNrLWJvdW5jZWRlbGF5IDEuNHMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYm90aDtcbmFuaW1hdGlvbjogc2stYm91bmNlZGVsYXkgMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xufVxuXG4uc3Bpbm5lciAuYm91bmNlMSB7XG5iYWNrZ3JvdW5kLWNvbG9yOiMwMDdlM2U7XG4td2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuNjBzO1xuYW5pbWF0aW9uLWRlbGF5OiAtMC42MHM7XG59XG5cbi5zcGlubmVyIC5ib3VuY2UyIHtcbmJhY2tncm91bmQtY29sb3I6ICMwMThkNzk7XG4td2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMzBzO1xuYW5pbWF0aW9uLWRlbGF5OiAtMC4zMHM7XG59XG5cbi5zcGlubmVyIC5ib3VuY2UzIHtcbmJhY2tncm91bmQtY29sb3I6ICMwZjY2ODQ7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzay1ib3VuY2VkZWxheSB7XG4wJSwgODAlLCAxMDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApIH1cbjQwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApIH1cbn1cblxuQGtleWZyYW1lcyBzay1ib3VuY2VkZWxheSB7XG4wJSwgODAlLCAxMDAlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xufSA0MCUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xufVxufWBcbiAgICBdXG5cbiAgfSlcblxuICBleHBvcnQgY2xhc3MgUHJvZ3Jlc3NDb21wb25lbnQge1xuICAgICAgICBASW5wdXQoKVxuICAgICAgICBwdWJsaWMgbG9hZGluZyA9IGZhbHNlO1xuICAgICAgICBASW5wdXQoKVxuICAgICAgICBwdWJsaWMgcG9zaXRpb24gPSAnZml4ZWQnO1xuICAgICAgICBjb25zdHJ1Y3RvcigpIHsgfVxuICB9XG5cbiJdfQ==