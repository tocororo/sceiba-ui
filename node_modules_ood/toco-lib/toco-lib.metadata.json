{"__symbolic":"module","version":4,"metadata":{"TocoLibService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"TocoLibComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"lib-toco-lib","template":"\n    <p>\n      toco-lib works!\n    </p>\n  ","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TocoLibModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"TocoLibComponent"}],"imports":[],"exports":[{"__symbolic":"reference","name":"TocoLibComponent"}]}]}],"members":{}},"AngularMaterialModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":41,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/cdk/layout","name":"LayoutModule","line":43,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":44,"character":8},{"__symbolic":"reference","module":"@angular/material/button-toggle","name":"MatButtonToggleModule","line":45,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":46,"character":8},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":47,"character":8},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":48,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":49,"character":8},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":50,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":51,"character":8},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":52,"character":8},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":57,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":58,"character":8},{"__symbolic":"reference","module":"@angular/material/sidenav","name":"MatSidenavModule","line":59,"character":8},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":60,"character":8},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":61,"character":8},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":62,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSortModule","line":63,"character":8},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":64,"character":8},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":65,"character":8},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":66,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":67,"character":8},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":68,"character":8},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":69,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":70,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":71,"character":8},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":72,"character":8},{"__symbolic":"reference","module":"@angular/material/tree","name":"MatTreeModule","line":73,"character":8},{"__symbolic":"reference","module":"@angular/material/badge","name":"MatBadgeModule","line":74,"character":8},{"__symbolic":"reference","module":"@angular/material/stepper","name":"MatStepperModule","line":75,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":76,"character":8},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":77,"character":8}],"exports":[{"__symbolic":"reference","module":"@angular/cdk/layout","name":"LayoutModule","line":81,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":82,"character":8},{"__symbolic":"reference","module":"@angular/material/button-toggle","name":"MatButtonToggleModule","line":83,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":84,"character":8},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":85,"character":8},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":86,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":87,"character":8},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":88,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":89,"character":8},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":90,"character":8},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":91,"character":8},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":92,"character":8},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":93,"character":8},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":94,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":95,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":96,"character":8},{"__symbolic":"reference","module":"@angular/material/sidenav","name":"MatSidenavModule","line":97,"character":8},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":98,"character":8},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":99,"character":8},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":100,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSortModule","line":101,"character":8},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":102,"character":8},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":103,"character":8},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":104,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatOptionModule","line":105,"character":8},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":106,"character":8},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":107,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":108,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":109,"character":8},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":110,"character":8},{"__symbolic":"reference","module":"@angular/material/tree","name":"MatTreeModule","line":111,"character":8},{"__symbolic":"reference","module":"@angular/material/badge","name":"MatBadgeModule","line":112,"character":8},{"__symbolic":"reference","module":"@angular/material/stepper","name":"MatStepperModule","line":113,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":114,"character":8},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":115,"character":8}]}]}],"members":{}},"storageFactory":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"reference","name":"localStorage"}},"AuthenticationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":19,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"AuthenticationComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":26,"character":8},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":27,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthModule","line":28,"character":8},"member":"forRoot"}}],"exports":[{"__symbolic":"reference","name":"AuthenticationComponent"}],"providers":[{"provide":{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":37,"character":19},"useFactory":{"__symbolic":"reference","name":"storageFactory"}},{"__symbolic":"reference","name":"OauthAuthenticationService"},{"__symbolic":"reference","name":"SimpleAuthenticationService"},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":42,"character":21},"useClass":{"__symbolic":"reference","name":"OauthAuthenticationService"},"multi":true}]}]}],"members":{}},"authConfig":{"loginUrl":"https://localhost:5000/oauth/authorize","tokenEndpoint":"https://localhost:5000/oauth/token","redirectUri":"https://127.0.0.1:4200/","clientId":"a0QpogRmC5iyrhLbfIqmDEbOhhr9nUzOYYPAhWW1","oidc":false,"timeoutFactor":0.8,"scope":"user:email"},"OauthInfo":{"__symbolic":"interface"},"AuthenticationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":53,"character":1},"arguments":[{"selector":"toco-authentication","template":"\n<div *ngIf=\"!isButtonLogin;else template_buttonLogin\" fxLayoutAlign=\"center center\" fxLayout=\"row\">\n    <mat-card fxLayoutAlign=\"center center\" fxLayout=\"column\">\n\n        <mat-card-header>\n            <mat-card-title *ngIf=\"!userName\">{{ 'TOCO_AUTHENTICATION.MAT_CARD_TITLE_AUTH' | translate }}</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content fxLayoutAlign=\"center center\" fxLayout=\"column\">\n            <button *ngIf=\"!userName;else templateName\" mat-raised-button color=\"primary\" style=\"width: 12em\" (click)=\"login()\">\n                <img src=\"https://sceiba-lab.upr.edu.cu/static/images/sceiba-logo-white.png\" alt=\"Sceiba\" width=\"100\" style=\"padding-top: .9em; padding-bottom: .9em\">\n            </button>\n\n            <ng-template #templateName>\n                <h1>{{ 'TOCO_AUTHENTICATION.H1_HOLA' | translate }} {{ userName }}</h1>\n                <button mat-raised-button color=\"primary\" style=\"width: 12em\" (click)=\"logoff()\">\n                    {{ 'TOCO_AUTHENTICATION.BUTTON_SALIR' | translate }}\n                </button>\n            </ng-template>\n\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<ng-template #template_buttonLogin>\n    <button *ngIf=\"isButtonLoginIcon\" mat-icon-button (click)=\"login()\" matTooltip=\"{{ isButtonLoginText }}\">\n        <mat-icon>lock_open</mat-icon>\n    </button>\n    <button *ngIf=\"!isButtonLoginIcon\" mat-raised-button color=\"primary\" (click)=\"login()\">\n        {{ isButtonLoginText }}\n        <mat-icon class=\"mat-18\">lock_open</mat-icon>\n    </button>\n</ng-template>\n","styles":[".card-width{width:25%;min-width:15em}"]}]}],"members":{"isButtonLogin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"isButtonLoginIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"isButtonLoginText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"oauthInfo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"UserProfileService"},{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":105,"character":20},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthService","line":106,"character":26},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":107,"character":26},{"__symbolic":"reference","name":"OauthAuthenticationService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":109,"character":24}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"configure":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"logoff":[{"__symbolic":"method"}]}},"AuthBackend":{"sceiba":"sceiba","cuor":"cuor"},"OauthAuthenticationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":31,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":46,"character":9}}]],"parameters":[{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":41,"character":30},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":42,"character":24},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":43,"character":25},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthService","line":44,"character":30},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthResourceServerErrorHandler","line":45,"character":30},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthModuleConfig","line":46,"character":42}]}],"login":[{"__symbolic":"method"}],"logout":[{"__symbolic":"method"}],"getUserInfo":[{"__symbolic":"method"}],"canActivate":[{"__symbolic":"method"}],"intercept":[{"__symbolic":"method"}],"configure":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"SimpleAuthenticationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":135,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":42,"character":24},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":43,"character":25}]}],"logguedChange":[{"__symbolic":"method"}],"getUserInfo":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"BackendModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"providers":[{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","name":"CatalogService"}]}]}],"members":{}},"CatalogService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"HttpService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":15,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":18,"character":58}]}],"getJournalsPage":[{"__symbolic":"method"}],"getJournalsCount":[{"__symbolic":"method"}],"getJournalsVocab":[{"__symbolic":"method"}],"getTerminosByVocab":[{"__symbolic":"method"}],"getSourceByUUID":[{"__symbolic":"method"}],"getSourcesOrgAggregation":[{"__symbolic":"method"}]}},"NotificationService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"HttpService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":7,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":11,"character":58}]}],"getNotificationsList":[{"__symbolic":"method"}],"setNotificationViewed":[{"__symbolic":"method"}]}},"ROOT_API":"api","ENDPOINT_APIS":{"organizations":"api/organizations"},"OrganizationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":39,"character":38},{"__symbolic":"reference","name":"MessageService"}]}],"get":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"log":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"OrganizationServiceNoAuth":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":130,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpBackend","line":135,"character":57}]}],"getOrganizationByUUID":[{"__symbolic":"method"}],"getOrganizationRelationships":[{"__symbolic":"method"}],"getOrganizationByPID":[{"__symbolic":"method"}],"getOrganizations":[{"__symbolic":"method"}]}},"SearchService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":13,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpBackend","line":27,"character":64}]}],"getAggregation":[{"__symbolic":"method"}],"getRecords":[{"__symbolic":"method"}],"getSources":[{"__symbolic":"method"}],"getOrganizations":[{"__symbolic":"method"}],"getOrganizationById":[{"__symbolic":"method"}],"updateOrganizations":[{"__symbolic":"method"}],"getSourcesOrgAggregation":[{"__symbolic":"method"}]}},"SourceService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":37,"character":18},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpBackend","line":38,"character":21},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":39,"character":26}]}],"getMySources":[{"__symbolic":"method"}],"getMySourcesAllRoles":[{"__symbolic":"method"}],"adhocstringgify":[{"__symbolic":"method"}],"count_to_len":[{"__symbolic":"method"}],"editSource":[{"__symbolic":"method"}],"makeSourceAsApproved":[{"__symbolic":"method"}],"makeSourceAsUnApproved":[{"__symbolic":"method"}],"newSource":[{"__symbolic":"method"}],"getIssnInfo":[{"__symbolic":"method"}],"getSourcesByTermUUID":[{"__symbolic":"method"}],"getSourceVersions":[{"__symbolic":"method"}],"countSourcesByTerm":[{"__symbolic":"method"}],"getSourceByUUID":[{"__symbolic":"method"}],"permissionGetSourceEditors":[{"__symbolic":"method"}],"permissionSetSourceEditor":[{"__symbolic":"method"}],"permissionGetSourceManagers":[{"__symbolic":"method"}],"permissionSetSourceManager":[{"__symbolic":"method"}],"permissionGetOrganizationManagers":[{"__symbolic":"method"}],"permissionSetOrganizationManager":[{"__symbolic":"method"}],"permissionGetTermManagers":[{"__symbolic":"method"}],"permissionSetTermManager":[{"__symbolic":"method"}]}},"SourceServiceNoAuth":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":254,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpBackend","line":38,"character":21}]}],"getSourceByUUID":[{"__symbolic":"method"}],"getSourceByISSN":[{"__symbolic":"method"}],"getSourceByPID":[{"__symbolic":"method"}],"getSources":[{"__symbolic":"method"}],"getSourcesStats":[{"__symbolic":"method"}]}},"TaxonomyService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":20,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":33,"character":54},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":33,"character":88}]}],"getVocabulary":[{"__symbolic":"method"}],"getTermListByIDs":[{"__symbolic":"method"}],"getTermByID":[{"__symbolic":"method"}],"getTermByUUID":[{"__symbolic":"method"}],"getTermsTreeByVocab":[{"__symbolic":"method"}],"newVocabulary":[{"__symbolic":"method"}],"editVocabulary":[{"__symbolic":"method"}],"getVocabularies":[{"__symbolic":"method"}],"newTerm":[{"__symbolic":"method"}],"editTerm":[{"__symbolic":"method"}],"getCurrentUserPermissions":[{"__symbolic":"method"}]}},"UserProfileService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":15,"character":22}]}],"getUserInfo":[{"__symbolic":"method"}],"getUsers":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"CoreModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":30,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"BodyComponent"},{"__symbolic":"reference","name":"Error404Component"},{"__symbolic":"reference","name":"FooterComponent"},{"__symbolic":"reference","name":"HomeComponent"},{"__symbolic":"reference","name":"InfoCardComponent"},{"__symbolic":"reference","name":"JournalCardComponent"},{"__symbolic":"reference","name":"NavComponent"},{"__symbolic":"reference","name":"PageHeaderComponent"},{"__symbolic":"reference","name":"PageNotFoundComponent"},{"__symbolic":"reference","name":"RoadMapComponent"},{"__symbolic":"reference","name":"RoadMapSceibaComponent"},{"__symbolic":"reference","name":"GetViewContainerDirective"},{"__symbolic":"reference","name":"EqualLengthDirective"},{"__symbolic":"reference","name":"DialogContentComponent"},{"__symbolic":"reference","name":"DialogDeleteConfirmComponent"},{"__symbolic":"reference","name":"ProgressComponent"},{"__symbolic":"reference","name":"SceibaAppsComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":53,"character":8},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":54,"character":8},{"__symbolic":"reference","module":"@swimlane/ngx-charts","name":"NgxChartsModule","line":55,"character":8},{"__symbolic":"reference","name":"ɵa"}],"exports":[{"__symbolic":"reference","name":"BodyComponent"},{"__symbolic":"reference","name":"Error404Component"},{"__symbolic":"reference","name":"FooterComponent"},{"__symbolic":"reference","name":"HomeComponent"},{"__symbolic":"reference","name":"InfoCardComponent"},{"__symbolic":"reference","name":"JournalCardComponent"},{"__symbolic":"reference","name":"NavComponent"},{"__symbolic":"reference","name":"PageHeaderComponent"},{"__symbolic":"reference","name":"PageNotFoundComponent"},{"__symbolic":"reference","name":"RoadMapComponent"},{"__symbolic":"reference","name":"RoadMapSceibaComponent"},{"__symbolic":"reference","name":"GetViewContainerDirective"},{"__symbolic":"reference","name":"EqualLengthDirective"},{"__symbolic":"reference","name":"DialogContentComponent"},{"__symbolic":"reference","name":"DialogDeleteConfirmComponent"},{"__symbolic":"reference","name":"ProgressComponent"},{"__symbolic":"reference","name":"SceibaAppsComponent"}],"entryComponents":[{"__symbolic":"reference","name":"DialogContentComponent"},{"__symbolic":"reference","name":"DialogDeleteConfirmComponent"}],"providers":[{"__symbolic":"reference","name":"MetadataService"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":88,"character":24}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"SkipSelf","line":88,"character":36}}]],"parameters":[{"__symbolic":"reference","name":"CoreModule"}]}]}},"BodyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-body","template":"\n<div class=\"container mat-body\">\n  <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"body\"> </div>\n</div>\n","styles":[""]}]}],"members":{"body":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"doReplace":[{"__symbolic":"method"}]}},"Error404Component":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-error404","template":"<p>\n  error404 works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"FooterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-footer","template":"<div class=\"alternate-theme-footer\">\n\n    <mat-toolbar class=\"footer-height\" fxLayout='row wrap' fxLayout.mx=\"column\" fxLayoutAlign=\"center center\" color=\"primary\">\n        <ng-container *ngIf=\"image\">\n            <a href=\"/\">\n                <img src=\"{{ image }}\" alt=\"Sceiba\" width=\"150\"\n                    style=\"padding-top: .9em; padding-bottom: .9em;\">\n            </a>\n        </ng-container>\n\n        <mat-toolbar-row \n            fxLayout='row wrap'\n            fxLayout.mx=\"column\"\n            fxLayoutAlign=\"center start\"\n            fxLayoutGap=\"20px\"\n        >\n            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\n                \n                <div fxLayout='column wrap' fxLayoutAlign=\"center center\" fxLayoutGap=\"1em\">\n\n                    <img src=\"/assets/images/tocororo.png\" alt=\"Tocororo\" width=\"90\" height=\"90\">\n                    <span class=\"text-initial\" style=\"max-width: 30em; text-align: center;\">Proyecto Nacional Tocororo, un esfuerzo por la comunicación científica en Cuba. </span>\n\n                    <a mat-raised-button href=\"/sources/new/journal\" color=\"warn\">Inclúyete</a>\n                </div>\n            </div>\n            <div fxLayout='column wrap' fxFlex=\"30%\" fxFlex.xs=\"100%\">\n                <span class=\"text-large\">Sitios de Interés</span>\n                <ng-container *ngFor=\"let item of sites\">\n                    <a mat-button\n                        class=\"aling-left\"\n                        color=\"warn\"\n                        *ngIf=\"item.useRouterLink\"\n                        [routerLink]=\"[item.url]\"\n                        [ngStyle]=\"{'line-height': 'initial', 'padding': '10px 16px'}\"\n                    >\n                        {{ item.name }}\n                    </a>\n                    <a mat-button\n                        class=\"aling-left\"\n                        color=\"warn\"\n                        *ngIf=\" ! item.useRouterLink\"\n                        href=\"{{ item.url }}\"\n                        target=\"_blank\"\n                        [ngStyle]=\"{'line-height': 'initial', 'padding': '10px 16px'}\"\n                    >\n                        {{ item.name }}\n                    </a>\n                </ng-container>\n            </div>\n            <div fxLayout='column wrap' fxFlex=\"30%\" fxFlex.xs=\"100%\">\n                <span class=\"text-large\">Información General</span>\n                <ng-container *ngFor=\"let item of information\">\n                    <a mat-button\n                        class=\"aling-left\"\n                        color=\"warn\"\n                        [routerLink]=\"[item.url]\"\n                        *ngIf=\"item.useRouterLink\"\n                        [ngStyle]=\"{'line-height': 'initial', 'padding': '10px 16px'}\"\n                    >\n                        {{ item.name }}\n                    </a>\n                    <a mat-button\n                        class=\"aling-left\"\n                        color=\"warn\"\n                        *ngIf=\" ! item.useRouterLink\"\n                        href=\"{{ item.url }}\"\n                        target=\"_blank\"\n                        [ngStyle]=\"{'line-height': 'initial', 'padding': '10px 16px'}\"\n                    >\n                        {{ item.name }}\n                    </a>\n                </ng-container>\n            </div>\n        </mat-toolbar-row>\n\n        <!-- <mat-toolbar-row fxLayout='row wrap' fxLayout.mx=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"15px\" style=\"padding-bottom: 15px;\">\n            <a mat-mini-fab matTooltip=\"Facebook\" href=\"https://facebook.com\" color=\"accent\"\n                style=\"font-size: x-large; margin-bottom: 15px !important;\">\n                f\n            </a>\n            <a mat-mini-fab matTooltip=\"Twitter\" href=\"https://twitter.com\" color=\"accent\" \n                style=\"font-size: x-large; margin-bottom: 15px !important;\">\n                t\n            </a>\n        </mat-toolbar-row> -->\n\n    </mat-toolbar>\n\n    <mat-toolbar fxLayout='column wrap' fxLayoutAlign=\"center center\" style=\"padding: 1em;\">\n        <a href=\"https://sceiba-lab.upr.edu.cu\" target=\"_blank\" style=\"color: rgb(0, 0, 0, 0.87); text-decoration: none;\">\n            <img src=\"/assets/images/sceiba-logo.png\" alt=\"Sceiba\" width=\"120\" height=\"50\">\n        </a>\n        <a href=\"https://sceiba-lab.upr.edu.cu\" target=\"_blank\" style=\"color: rgb(0, 0, 0, 0.87); text-decoration: none;\">\n            Portal de publicaciones cientificas cubanas\n        </a>\n    </mat-toolbar>\n</div>","styles":["mat-toolbar.footer-height{height:auto!important;padding-top:20px;padding-bottom:20px}.mat-toolbar-row,.mat-toolbar-single-row{white-space:normal!important;height:auto!important}.text-small{font-size:small}.text-initial{font-size:initial;line-height:initial}.text-large{font-size:x-large}.aling-left{text-align:left;white-space:normal!important}"]}]}],"members":{"sites":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"information":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":5}}]}],"image":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"HomeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-home","template":"<p>\n  home works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MetadataService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"InfoCardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-info-card","template":"<mat-card>\n  <img mat-card-image src={{img_card}} *ngIf=\"is_img_card\">\n  <mat-card-header>\n\n      <img mat-card-avatar src={{avatar_card}} *ngIf=\"is_avatar_card\" >\n\n\n      <mat-card-title *ngIf=\"is_title_card\">\n        <strong>\n          {{title_card}}\n        </strong>\n      </mat-card-title>\n\n    <mat-card-subtitle *ngIf=\"is_subtitle_card\">\n      {{subtitle_card}}\n    </mat-card-subtitle>\n  </mat-card-header>\n\n\n\n  <mat-card-content *ngIf=\"is_content_card\">\n     <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"content_card\"></div>\n    \n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"is_actions_card\">\n    <a mat-button color=\"primary\"   routerLink=\"{{router}}/{{entity.id}}\">VER MÁS</a>\n    <!--(click)=\"show_people()\"-->\n  </mat-card-actions>\n\n</mat-card>","styles":[""]}]}],"members":{"avatar_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":5}}]}],"title_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":5}}]}],"subtitle_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":5}}]}],"content_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":5}}]}],"img_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"router":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":5}}]}],"entity":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":5}}]}],"is_actions_card":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"JournalCardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-journal-card","template":"<p>\n  journal-card works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"NavComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-nav","template":"<header>\n\n  <nav>\n      \n    <div class=\"nav-heder shadows-for-head always-on-top nav-menu-items w-100\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-around\">\n\n      <!-- <div class=\"nav-menu-items\" > -->\n        <button mat-flat-button color=\"primary\" *ngFor=\"let item of menuItems\" [routerLink]=\"[item.link]\" routerLinkActive=\"active\">\n          {{item.label}}\n        </button>\n        \n      <!-- </div> -->\n\n\n      <!-- <div class=\"nav-tools\">\n          <div class=\"input-style-for-search\">\n             <mat-icon style=\"margin-left: -45px;z-index: 1;\">pageview</mat-icon> \n          </div>\n          <input type=\"search\" coloaria-label=\"Buscar\" placeholder=\"Buscar\" class=\"input-style\">\n\n        <span class=\"spacer\"></span>\n        <div>\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\" matTooltip=\"Edel Abreu Hernández\" matTooltipPosition=\"left\">\n            <mat-icon matPrefix>person_pin</mat-icon>\n            pin\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item routerLink=\"/people/show\">\n              <mat-icon>person</mat-icon>\n              <span>Mi Perfil</span>\n            </button>\n            <button mat-menu-item>\n              <mat-icon>lock_open</mat-icon>\n              <span>Salir</span>\n            </button>\n          </mat-menu>\n        </div>\n\n      </div> -->\n\n    </div>\n  </nav>\n</header>","styles":[".menu-items{display:flex;display:-webkit-box;list-style:none;flex-direction:row;justify-content:flex-start}"]}]}],"members":{"menuItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"MenuItem":{"__symbolic":"interface"},"PageHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-page-header","template":"<mat-toolbar color=\"primary\">\n\n  <mat-toolbar-row *ngFor=\"let item of info; index as i\" >\n    <!--\n      la condicion especifica q-> si quiero mostrar el icono y es la primera iteracion entonces se muestra\n      esto evita que se repita el icono por cada row del componente\n    -->\n    <div *ngIf=\"is_show_icon && i ==0; then block\"></div>\n    <!--\n      en la sintaxis del \"if\" donde dice \"then block\" quiere decir q cuando se pumpla la condicion ira a ese blocque\n       q esta en otra etiqueta y q se tiene q llamar \"<ng-template #block >\"\n    -->\n    <ng-template #block >\n      <mat-icon class=\"icon-position change-cursor\" (click)=\"function()\">menu</mat-icon>\n    </ng-template>\n\n    <h1><strong>{{item}}</strong></h1>\n\n  </mat-toolbar-row>\n\n</mat-toolbar>","styles":[""]}]}],"members":{"drawer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"info":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"function":[{"__symbolic":"method"}],"change_icon_show":[{"__symbolic":"method"}]}},"PageNotFoundComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"toco-page-not-found","template":"\n<h1 class=\"mat-display-1 toco-pnf-h1-apology-text\">{{ 'TOCO_NG_PAGINA_NO_ENCONT_DISCULPA' | translate }}</h1>\n<a class=\"toco-pnf-a-redirect\" [routerLink]=\"routerLink\">\n    <h2 class=\"mat-h2 toco-pnf-h2-redirect-text\">{{ 'TOCO_NG_PAGINA_NO_ENCONT_REDIRECCION' | translate }}</h2>\n    <img class=\"toco-pnf-img-redirect\"\n        [src]=\"imgSource\"\n        [alt]=\"'TOCO_NG_PAGINA_NO_ENCONT_IMG_ALT_TEXT' | translate\"\n        style=\"height: 50px;\"\n    />\n</a>\n","styles":[":host{display:block;margin:2em;text-align:center}"]}]}],"members":{"routerLink":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":5}}]}],"imgSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"SceibaAppsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"toco-sceiba-apps","template":"<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n  <a href=\"https://sceiba.cu\" target=\"_blank\" class=\"apps\" matTooltip=\"Sceiba\">\n      <img src=\"icons/sceiba.svg\" alt=\"Sceiba\">\n  </a>\n  <a href=\"https://orgs.sceiba.cu\" target=\"_blank\" class=\"apps\" matTooltip=\"Organizaciones\">\n      <img src=\"icons/organizacion.svg\" alt=\"Organizaciones\">\n  </a>\n  <a href=\"https://sceiba.cu\" target=\"_blank\" class=\"apps\" matTooltip=\"Vocabularios\">\n      <img src=\"icons/vocabs.png\" alt=\"Vocabularios\">\n  </a>\n  <a href=\"https://catalogo.sceiba.cu\" target=\"_blank\" class=\"apps\" matTooltip=\"Catálogo\">\n      <img src=\"icons/catalog.svg\" alt=\"Catálogo\">\n  </a>\n  <mat-divider class=\"w-90\"></mat-divider>\n  <a href=\"https://sceiba.cu\" target=\"_blank\" class=\"apps\">\n      <img class=\"MES\" src=\"icons/mes.svg\" alt=\"Registro de Revistas Científicas del MES\" matTooltip=\"Registro de Revistas Científicas del MES\">\n  </a>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"SortDirection":{"asc":"asc","desc":"desc","orig":""},"FilterControls":{"__symbolic":"interface"},"FilterValues":{"__symbolic":"interface"},"PageRequest":{"__symbolic":"interface"},"Page":{"__symbolic":"interface"},"BackendDataSourceFunction":{"__symbolic":"interface"},"filterPredicate":{"__symbolic":"function"},"sortingDataAccessor":{"__symbolic":"function"},"sortData":{"__symbolic":"function"},"HTTP_INTERCEPTOR_PROVIDERS":[],"CachingInterceptor":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Cachable"},{"__symbolic":"reference","name":"RequestCache"}]}],"intercept":[{"__symbolic":"method"}],"_sendRequest":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"Response":{"__symbolic":"interface"},"ResponseStatus":{"SUCCESS":"success","ERROR":"error"},"HttpService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":24,"character":32}]}]}},"IconService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":9,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatIconRegistry","line":20,"character":46},{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":20,"character":86}]}],"registerIcons":[{"__symbolic":"method"}]},"statics":{"defaultIconName":"outlined-blank-24px","ngInjectableDef":{}}},"MessageService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"add":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"CachableUrl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Environment"}]}],"isCachable":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"RequestCacheEntry":{"__symbolic":"interface"},"RequestCacheDifferentTimeWithMap":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":72,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MessageService"}]}],"get":[{"__symbolic":"method"}],"set":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"CACHABLE_URL_PROVIDER":[{"provide":{"__symbolic":"reference","name":"Cachable"},"useClass":{"__symbolic":"reference","name":"CachableUrl"},"multi":false,"$quoted$":["provide","useClass","multi"]}],"REQUEST_CACHE_DIFFERENT_TIME_WITH_MAP_PROVIDER":[{"provide":{"__symbolic":"reference","name":"RequestCache"},"useClass":{"__symbolic":"reference","name":"RequestCacheDifferentTimeWithMap"},"multi":false,"$quoted$":["provide","useClass","multi"]}],"REFRESH_X_CACHE":"refresh-x-cache","Cachable":{"__symbolic":"class","members":{"isCachable":[{"__symbolic":"method"}]}},"RequestCache":{"__symbolic":"class","members":{"get":[{"__symbolic":"method"}],"set":[{"__symbolic":"method"}]}},"UserQuery":{"__symbolic":"interface"},"UserService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":42,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"page":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"Feature":{"__symbolic":"interface"},"Product":{"__symbolic":"interface"},"Result":{"__symbolic":"interface"},"ChartBar":{"__symbolic":"interface"},"EntryElement":{"__symbolic":"interface"},"RoadMapComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":101,"character":1},"arguments":[{"selector":"toco-road-map","template":"\n<ng-container *ngIf=\"currentProducts_Internal.length; then thenTemplate_Products; else elseTemplate_WithoutProducts\"></ng-container>\n\n<ng-template #thenTemplate_Products>\n\n    <mat-checkbox [(ngModel)]=\"isChartVertical\" [color]=\"'primary'\" [matTooltip]=\"'Visualizar el gráfico vertical / horizontal'\" [matTooltipPosition]=\"'left'\">Gráfico vertical</mat-checkbox>\n    <mat-checkbox class=\"checkbox-not-first\" [(ngModel)]=\"isLegendRight\" [color]=\"'primary'\" [matTooltip]=\"'Visualizar la leyenda a la derecha / abajo'\" [matTooltipPosition]=\"'right'\">Leyenda a la derecha</mat-checkbox>\n\n    <mat-divider class=\"mat-divider-chart\"></mat-divider>\n\n    <mat-tab-group mat-align-tabs=\"center\" [animationDuration]=\"'1500ms'\" (selectedIndexChange)=\"onSelectTab($event)\">\n        <mat-tab [label]=\"tabLabel_CW\">\n\n            <!---------------------------------------------------------------------------->\n            <!-- Displays the current products list. -->\n            <!---------------------------------------------------------------------------->\n\n            <h3>{{ chartTitle_P }}</h3>\n\n            <mat-grid-list [cols]=\"'1'\" [rowHeight]=\"gridHeight\">\n                <mat-grid-tile>\n                    <ng-container *ngIf=\"isChartVertical; then thenTempl_Ver_NormBarChart_CurProducts; else elseTempl_Hor_NormBarChart_CurProducts\"></ng-container>\n                    <button mat-icon-button\n                        class=\"button-close-product\"\n                        color=\"primary\"\n                        [attr.aria-label]=\"'Cerrar el chart'\"\n                        [matTooltip]=\"'Cerrar el chart'\"        \n                        [matTooltipPosition]=\"'above'\"\n                    >\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </mat-grid-tile>\n            </mat-grid-list>\n\n            <ng-template #thenTempl_Ver_NormBarChart_CurProducts>\n                <ngx-charts-bar-vertical-normalized style=\"display: inline-block\"\n                    [results]=\"currentProducts_Internal\"\n                    [activeEntries]=\"activeEntries_P_CW\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_CW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_P\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_P\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n\n                    (select)=\"onSelect($event)\"\n                    (activate)=\"onActivate($event)\"\n                    (deactivate)=\"onDeactivate($event)\"\n                >\n                </ngx-charts-bar-vertical-normalized>\n            </ng-template>\n\n            <ng-template #elseTempl_Hor_NormBarChart_CurProducts>\n                <ngx-charts-bar-horizontal-normalized style=\"display: inline-block\"\n                    [results]=\"currentProducts_Internal\"\n                    [activeEntries]=\"activeEntries_P_CW\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_CW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_P\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_P\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n\n                    (select)=\"onSelect($event)\"\n                    (activate)=\"onActivate($event)\"\n                    (deactivate)=\"onDeactivate($event)\"\n                >\n                </ngx-charts-bar-horizontal-normalized>\n            </ng-template>\n\n\n            <!---------------------------------------------------------------------------->\n            <!-- Displays the current features list of a selected product. -->\n            <!---------------------------------------------------------------------------->\n\n            <ng-container *ngIf=\"selectedProductPos_CW != removeChart_PosFlag\">\n\n                <mat-divider class=\"mat-divider-chart\"></mat-divider>\n\n                <h3>{{ chartTitle_F_CW }}</h3>\n\n                <mat-grid-list [cols]=\"'1'\" [rowHeight]=\"gridHeight\">\n                    <mat-grid-tile>\n                        <ng-container *ngIf=\"isChartVertical; then thenTempl_Ver_NormBarChart_CurFeatures; else elseTempl_Hor_NormBarChart_CurFeatures\"></ng-container>\n                        <button mat-icon-button\n                            class=\"button-close-feature\"\n                            color=\"primary\"\n                            [attr.aria-label]=\"'Cerrar el chart'\"\n                            [matTooltip]=\"'Cerrar el chart'\"        \n                            [matTooltipPosition]=\"'above'\"\n                            (click)=\"click_RemoveChart()\"\n                        >\n                            <mat-icon>close</mat-icon>\n                        </button>\n                    </mat-grid-tile>\n                </mat-grid-list>\n\n            </ng-container>\n\n            <ng-template #thenTempl_Ver_NormBarChart_CurFeatures>\n                <ngx-charts-bar-vertical-normalized style=\"display: inline-block\"\n                    [results]=\"currentFeatures_Internal\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_CW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_F\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_F\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n                >\n                </ngx-charts-bar-vertical-normalized>\n            </ng-template>\n\n            <ng-template #elseTempl_Hor_NormBarChart_CurFeatures>\n                <ngx-charts-bar-horizontal-normalized style=\"display: inline-block\"\n                    [results]=\"currentFeatures_Internal\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_CW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_F\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_F\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n                >\n                </ngx-charts-bar-horizontal-normalized>\n            </ng-template>\n\n            <mat-divider class=\"mat-divider-chart\"></mat-divider>\n\n        </mat-tab>\n\n        <mat-tab [label]=\"tabLabel_FW\">\n\n            <!---------------------------------------------------------------------------->\n            <!-- Displays the future products list. -->\n            <!---------------------------------------------------------------------------->\n\n            <h3>{{ chartTitle_P }}</h3>\n\n            <mat-grid-list [cols]=\"'1'\" [rowHeight]=\"gridHeight\">\n                <mat-grid-tile>\n                    <ng-container *ngIf=\"isChartVertical; then thenTempl_Ver_NormBarChart_FutProducts; else elseTempl_Hor_NormBarChart_FutProducts\"></ng-container>\n                    <button mat-icon-button\n                        class=\"button-close-product\"\n                        color=\"primary\"\n                        [attr.aria-label]=\"'Cerrar el chart'\"\n                        [matTooltip]=\"'Cerrar el chart'\"        \n                        [matTooltipPosition]=\"'above'\"\n                    >\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </mat-grid-tile>\n            </mat-grid-list>\n\n            <ng-template #thenTempl_Ver_NormBarChart_FutProducts>\n                <ngx-charts-bar-vertical-normalized style=\"display: inline-block\"\n                    [results]=\"futureProducts_Internal\"\n                    [activeEntries]=\"activeEntries_P_FW\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_FW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_P\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_P\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n\n                    (select)=\"onSelect($event)\"\n                    (activate)=\"onActivate($event)\"\n                    (deactivate)=\"onDeactivate($event)\"\n                >\n                </ngx-charts-bar-vertical-normalized>\n            </ng-template>\n\n            <ng-template #elseTempl_Hor_NormBarChart_FutProducts>\n                <ngx-charts-bar-horizontal-normalized style=\"display: inline-block\"\n                    [results]=\"futureProducts_Internal\"\n                    [activeEntries]=\"activeEntries_P_FW\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_FW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_P\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_P\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n\n                    (select)=\"onSelect($event)\"\n                    (activate)=\"onActivate($event)\"\n                    (deactivate)=\"onDeactivate($event)\"\n                >\n                </ngx-charts-bar-horizontal-normalized>\n            </ng-template>\n\n\n            <!---------------------------------------------------------------------------->\n            <!-- Displays the future features list of a selected product. -->\n            <!---------------------------------------------------------------------------->\n\n            <ng-container *ngIf=\"selectedProductPos_FW != removeChart_PosFlag\">\n\n                <mat-divider class=\"mat-divider-chart\"></mat-divider>\n\n                <h3>{{ chartTitle_F_FW }}</h3>\n\n                <mat-grid-list [cols]=\"'1'\" [rowHeight]=\"gridHeight\">\n                    <mat-grid-tile>\n                        <ng-container *ngIf=\"isChartVertical; then thenTempl_Ver_NormBarChart_FutFeatures; else elseTempl_Hor_NormBarChart_FutFeatures\"></ng-container>\n                        <button mat-icon-button\n                            class=\"button-close-feature\"\n                            color=\"primary\"\n                            [attr.aria-label]=\"'Cerrar el chart'\"\n                            [matTooltip]=\"'Cerrar el chart'\"        \n                            [matTooltipPosition]=\"'above'\"\n                            (click)=\"click_RemoveChart()\"\n                        >\n                            <mat-icon>close</mat-icon>\n                        </button>\n                    </mat-grid-tile>\n                </mat-grid-list>\n\n            </ng-container>\n\n            <ng-template #thenTempl_Ver_NormBarChart_FutFeatures>\n                <ngx-charts-bar-vertical-normalized style=\"display: inline-block\"\n                    [results]=\"futureFeatures_Internal\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_FW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_F\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_F\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n                >\n                </ngx-charts-bar-vertical-normalized>\n            </ng-template>\n\n            <ng-template #elseTempl_Hor_NormBarChart_FutFeatures>\n                <ngx-charts-bar-horizontal-normalized style=\"display: inline-block\"\n                    [results]=\"futureFeatures_Internal\"\n                    [view]=\"view\"\n                    [scheme]=\"colorScheme_FW\"\n                    [gradient]=\"gradient\"\n                    [barPadding]=\"barPadding\"\n\n                    [xAxis]=\"showXAxis\"\n                    [showXAxisLabel]=\"showXAxisLabel\"\n                    [xAxisLabel]=\"xAxisLabel_F\"\n                    [maxXAxisTickLength]=\"maxAxisTickLength\"\n\n                    [yAxis]=\"showYAxis\"\n                    [showYAxisLabel]=\"showYAxisLabel\"\n                    [yAxisLabel]=\"yAxisLabel_F\"\n                    [maxYAxisTickLength]=\"maxAxisTickLength\"\n\n                    [legend]=\"showLegend\"\n                    [legendTitle]=\"legendTitle\"\n                    [legendPosition]=\"legendPosition\"\n                >\n                </ngx-charts-bar-horizontal-normalized>\n            </ng-template>\n\n            <mat-divider class=\"mat-divider-chart\"></mat-divider>\n\n        </mat-tab>\n    </mat-tab-group>\n\n    <br />\n\n</ng-template>\n\n\n<ng-template #elseTemplate_WithoutProducts>\n\n    <div class=\"without-product\">{{ withoutProductText }}</div>\n\n</ng-template>\n","styles":[".mat-divider-chart{margin:1em 2em 0}.checkbox-not-first{margin-left:20px}:host ::ng-deep .mat-grid-tile .mat-figure{align-items:start}.button-close-product{visibility:hidden;margin-top:.2em}.button-close-feature{visibility:visible;margin-top:.2em}:host ::ng-deep header.legend-title{text-align:left;font-weight:400}.without-product{margin:6em 0;text-align:center;cursor:default;color:#444;font-size:1.5em;font-weight:lighter}"]}]}],"members":{"withoutProductText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":2}}]}],"tabLabel_CW":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":137,"character":2}}]}],"tabLabel_FW":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":143,"character":2}}]}],"chartTitle_P":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":161,"character":2}}]}],"view":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":276,"character":2}}]}],"colorScheme_CW":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":289,"character":2}}]}],"colorScheme_FW":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":301,"character":2}}]}],"gradient":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":309,"character":2}}]}],"barPadding":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":316,"character":2}}]}],"xAxisLabel_P":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":331,"character":2}}]}],"maxAxisTickLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":338,"character":2}}]}],"yAxisLabel_P":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":353,"character":2}}]}],"legendTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":364,"character":2}}]}],"xAxisLabel_F":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":418,"character":2}}]}],"yAxisLabel_F":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":425,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"isChartVertical":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":538,"character":2}}]}],"currentProducts":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":581,"character":2}}]}],"futureProducts":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":676,"character":2}}]}],"_set_activeEntries_P_CW":[{"__symbolic":"method"}],"_set_activeEntries_P_FW":[{"__symbolic":"method"}],"legendPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":856,"character":2}}]}],"chartTitle_F":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":924,"character":2}}]}],"onSelectTab":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"onActivate":[{"__symbolic":"method"}],"onDeactivate":[{"__symbolic":"method"}],"_setData_CW":[{"__symbolic":"method"}],"_setData_FW":[{"__symbolic":"method"}],"_updateProductPos":[{"__symbolic":"method"}],"_createsInternalArrays":[{"__symbolic":"method"}],"click_RemoveChart":[{"__symbolic":"method"}]}},"RoadMapSceibaComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-road-map-sceiba","template":"\n<h2 style=\"text-align: center\">{{ title }}</h2>\n\n<div style=\"text-align: center\">\n    <!-- <toco-road-map></toco-road-map> -->\n    <toco-road-map [currentProducts]=\"currentProducts\" [futureProducts]=\"futureProducts\"></toco-road-map>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"GetViewContainerDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":10,"character":1},"arguments":[{"selector":"[get-view-container]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":15,"character":50},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":15,"character":103}]}]}},"MAX_SAFE_INTEGER":9007199254740991,"MARKDOWN_FILE_EXTENSION":".md","Params":{"__symbolic":"interface"},"ActionText":{"view":"view","add":"add","edit":"edit"},"ChildControlsPath":{"__symbolic":"interface"},"LanguageTexts":{"Español":"Español","English":"English"},"LanguageAbbrs":{"es":"es","en":"en"},"LANGUAGE_TEXTS_LIST":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"LanguageTexts"},"member":"Español"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"LanguageTexts"},"member":"English"}],"LANGUAGE_ABBRS_LIST":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"LanguageAbbrs"},"member":"es"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"LanguageAbbrs"},"member":"en"}],"convertLangFromStringToNumber":{"__symbolic":"function"},"convertLangFromNumberToString":{"__symbolic":"function"},"getPathWithLangExtension":{"__symbolic":"function","parameters":["path","lang"],"value":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"reference","name":"path"},"right":"."},"right":{"__symbolic":"reference","name":"lang"}},"right":".md"}},"isDescendant":{"__symbolic":"function"},"cloneValue":{"__symbolic":"function"},"cloneValueToUndefined":{"__symbolic":"function"},"logError":{"__symbolic":"function"},"logComplete":{"__symbolic":"function"},"getHttpEventTypeToString":{"__symbolic":"function"},"HandlerComponent":{"snackBar":"snackBar","dialog":"dialog"},"StatusCode":{"OK":200,"serverError":500,"notFound":400},"DialogMessageData":{"__symbolic":"class","members":{}},"DialogDeleteConfirmMessageData":{"__symbolic":"class","members":{}},"DialogContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":54,"character":1},"arguments":[{"selector":"toco-dialog-message","template":"\n\t\t<h1 mat-dialog-title>\n\t\t\t{{ data.title }}\n\t\t</h1>\n\t\t<mat-dialog-content> {{ data.content }} </mat-dialog-content>\n\t\t<mat-dialog-actions align=\"end\">\n\t\t\t<button mat-stroked-button mat-dialog-close>OK</button>\n\t\t</mat-dialog-actions>\n\t"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":68,"character":21},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":68,"character":28}]}]],"parameters":[{"__symbolic":"reference","name":"DialogMessageData"}]}]}},"DialogDeleteConfirmComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":75,"character":1},"arguments":[{"selector":"toco-dialog-delete-confirm","template":"\n\t\t<h1 mat-dialog-title>\n\t\t\t¿Está usted seguro que desea eliminar {{ data.delTypeArt }} <strong>{{ data.delType }}</strong>?\n\t\t</h1>\n\t\t<mat-dialog-content>\n\t\t\tSu valor es: <em>{{ data.delValue }}</em>\n\t\t</mat-dialog-content>\n\t\t<mat-dialog-actions align=\"end\">\n\t\t\t<button mat-stroked-button mat-dialog-close color=\"warning\">Cancelar</button>\n\t\t\t<button mat-stroked-button [mat-dialog-close]=\"true\" color=\"warning\" cdkFocusInitial>Eliminar</button>\n\t\t</mat-dialog-actions>\n\t"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":94,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":94,"character":10}]}]],"parameters":[{"__symbolic":"reference","name":"DialogDeleteConfirmMessageData"}]}]}},"MessageHandler":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":100,"character":33},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":100,"character":62}]}],"showMessage":[{"__symbolic":"method"}],"componentHandler":[{"__symbolic":"method"}]}},"ProgressComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":40,"character":3},"arguments":[{"selector":"toco-progress","template":"\n    <div class=\"spinner\" *ngIf=\"loading\">\n      <div class=\"bounce1\"></div>\n      <div class=\"bounce2\"></div>\n      <div class=\"bounce3\"></div>\n    </div>\n ","styles":["\n.overlay-fixed {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   fixed;\n    }\n    .overlay-absolute {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   absolute;\n    }\n\n.spinner {\nmargin: 5px auto 0;\nwidth: 70px;\ntext-align: center;\n}\n\n.spinner > div {\nwidth: 14px;\nheight: 14px;\n\n\nborder-radius: 100%;\ndisplay: inline-block;\n-webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\nanimation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\nbackground-color:#007e3e;\n-webkit-animation-delay: -0.60s;\nanimation-delay: -0.60s;\n}\n\n.spinner .bounce2 {\nbackground-color: #018d79;\n-webkit-animation-delay: -0.30s;\nanimation-delay: -0.30s;\n}\n\n.spinner .bounce3 {\nbackground-color: #0f6684;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n0%, 80%, 100% { -webkit-transform: scale(0) }\n40% { -webkit-transform: scale(1.0) }\n}\n\n@keyframes sk-bouncedelay {\n0%, 80%, 100% {\n  -webkit-transform: scale(0);\n  transform: scale(0);\n} 40% {\n  -webkit-transform: scale(1.0);\n  transform: scale(1.0);\n}\n}"]}]}],"members":{"loading":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":9}}]}],"position":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":127,"character":9}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"RequiredProperty":{"__symbolic":"interface"},"ExtraValidators":{"__symbolic":"class","members":{}},"EqualLengthDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":301,"character":1},"arguments":[{"selector":"[equalLength]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":304,"character":17},"useExisting":{"__symbolic":"reference","name":"EqualLengthDirective"},"multi":true}]}]}],"members":{"equalLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":315,"character":5}}]}],"ngOnChanges":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"registerOnValidatorChange":[{"__symbolic":"method"}]}},"Environment":{"__symbolic":"class","members":{}},"MetadataService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":13,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"Title","line":18,"character":41},{"__symbolic":"reference","module":"@angular/platform-browser","name":"Meta","line":18,"character":61},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":18,"character":84},{"__symbolic":"reference","name":"Environment"}]}],"setStandardMeta":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"EntitiesModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":8,"character":1},"arguments":[{}]}],"members":{}},"EntityBase":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Object"},"members":{"deepcopy":[{"__symbolic":"method"}],"toBoolean":[{"__symbolic":"method"}]}},"Entity":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{"getIdentifierValue":[{"__symbolic":"method"}],"setIdentifierValue":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor"}],"entitystringify":[{"__symbolic":"method"}]}},"Identifier":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"IdentifierSchemas":{"ark":"ark","arxiv":"arxiv","doi":"doi","bibcode":"bibcode","ean8":"ean8","ean13":"ean13","handle":"handle","isbn":"isbn","issn_p":"issn_p","issn_l":"issn_l","issn_e":"issn_e","issn_c":"issn_c","issn_o":"issn_o","istc":"istc","lsid":"lsid","pmid":"pmid","pmcid":"pmcid","purl":"purl","upc":"upc","url":"url","urn":"urn","orcid":"orcid","gnd":"gnd","ads":"ads","oai":"oai","prnps":"prnps","ernps":"ernps","oaiurl":"oaiurl","grid":"grid","wkdata":"wkdata","ror":"ror","isni":"isni","fudref":"fudref","orgref":"orgref","reup":"reup"},"Links":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"AggrBucket":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Aggr":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Hit":{"__symbolic":"class","arity":1,"extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"HitList":{"__symbolic":"class","arity":1,"extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"SearchResponse":{"__symbolic":"class","arity":1,"extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"CategoryQuestionType":{"bool":"bool","integer":"integer","select":"select"},"CategoryQuestion":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"SectionCategory":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"SurveySection":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"JournalGeneralData":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Evaluation":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"EvaluationOnlyAnswer":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"MainInstitution":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"InstitutionalRepository":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"mainInstEmpty":{"name":"","identifiers":[{"idtype":"","value":"","$quoted$":["idtype","value"]}],"$quoted$":["name","identifiers"]},"instRepoEmpty":{"id":"","name":"","mainInst":{"__symbolic":"reference","name":"mainInstEmpty"},"url":"","url_oai":"","$quoted$":["id","name","mainInst","url","url_oai"]},"JournalReference":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"Reference":{"__symbolic":"class","members":{}},"SocialNetworks":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"IssnOrg":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"ISSN":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"RNPS":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"JournalData":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"SourceData"},"members":{}},"Journal":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Source"},"members":{}},"JournalVersion":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"SourceVersion"},"members":{}},"OrganizationRelationships":{"PARENT":{"label":"Padre","value":"parent"},"CHILD":{"label":"Hija","value":"child"},"RELATED":{"label":"Relacionada","value":"related"}},"LabelDiffLang":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Redirected":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Relationship":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"GeoNamesAdmin":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"GeoNamesCity":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Address":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"RedirectPropertiesIdtype":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"RedirectProperties":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Redirect":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Organization":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"Person":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"Role":{"__symbolic":"class","members":{}},"User":{"__symbolic":"class","members":{}},"UserSourcesRoles":{"__symbolic":"class","members":{}},"UserProfile":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{"identify":[{"__symbolic":"method"}]}},"Record":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Repository":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"RepositorySet":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"HarvestedItem":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"SourceSystems":{"OJS":{"label":"Open Journal System","value":"OJS"},"CMS":{"label":"Content Management System (Wordpress, Joomla, Drupal, etc)","value":"CMS"},"DSPACE":{"label":"Dspace","value":"DSPACE"},"OTHER":{"label":"Otro","value":"OTHER"}},"SourceTypes":{"JOURNAL":{"label":"Revista Científica","value":"JOURNAL"},"SERIAL":{"label":"Publicación Seriada","value":"SERIAL"},"STUDENT":{"label":"Revista Científico Estudiantil","value":"STUDENT"},"POPULARIZATION":{"label":"Revista de Divulgación","value":"POPULARIZATION"},"REPOSITORY":{"label":"Repositorio Institucional","value":"REPOSITORY"},"WEBSITE":{"label":"Sitio Web","value":"WEBSITE"},"OTHER":{"label":"Otro","value":"OTHER"}},"SourceOrganizationRole":{"MAIN":{"label":"Principal","value":"MAIN"},"COLABORATOR":{"label":"Colaborador","value":"COLABORATOR"}},"SourcePersonRole":{"ADMINISTRATOR":{"label":"Administrador","value":"ADMINISTRATOR"},"JOURNALMANAGER":{"label":"Gestor de Revista","value":"JOURNALMANAGER"},"AUTHOR":{"label":"Autor","value":"AUTHOR"},"EDITOR":{"label":"Editor","value":"EDITOR"},"SECTIONEDITOR":{"label":"Editor de Sección","value":"SECTIONEDITOR"},"REVIEWER":{"label":"Revisor","value":"REVIEWER"},"COPYEDITOR":{"label":"Editor de Copias","value":"COPYEDITOR"},"LAYOUTEDITOR":{"label":"Editor de Formato","value":"LAYOUTEDITOR"},"PROOFREADER":{"label":"Corrector de Pruebas","value":"PROOFREADER"},"READER":{"label":"Lector","value":"READER"}},"SourceStatus":{"APPROVED":{"label":"Aprobado","value":"APPROVED"},"TO_REVIEW":{"label":"En revision","value":"TO_REVIEW"},"UNOFFICIAL":{"label":"Incluido Extraoficialmente","value":"UNOFFICIAL"}},"SourceOrganization":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Organization"},"members":{}},"SourceClasification":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"SavingInfoSchema":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"SourceData":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"SourceVersion":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"Source":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"VocabulariesInmutableNames":{"CUBAN_INTITUTIONS":"CUBAN_INTITUTIONS","SUBJECTS":"SUBJECTS","CUBAN_PROVINCES":"CUBAN_PROVINCES","LICENCES":"LICENCES","INDEXES_CLASIFICATION":"INDEXES_CLASIFICATION","INDEXES":"INDEXES","UNESCO_VOCAB":"UNESCO_VOCAB","RECOD_SETS":"RECOD_SETS","RECORD_TYPES":"RECORD_TYPES","EXTRA_INSTITUTIONS":"EXTRA_INSTITUTIONS","SUBJECT_COVER":"SUBJECT_COVER","COUNTRIES":"COUNTRIES"},"Term":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"TermInstitutionData":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"TermIndexData":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"EntityBase"},"members":{}},"Vocabulary":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"Entity"},"members":{}},"TermNode":{"__symbolic":"interface"},"FiltersModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":15,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"BooleanFilterComponent"},{"__symbolic":"reference","name":"FilterContainerComponent"},{"__symbolic":"reference","name":"SelectAutocompleteFilterComponent"},{"__symbolic":"reference","name":"SelectFilterOldComponent"},{"__symbolic":"reference","name":"TitleFilterComponent"},{"__symbolic":"reference","name":"FilterDirective"},{"__symbolic":"reference","name":"TreeFilterComponent"}],"entryComponents":[{"__symbolic":"reference","name":"BooleanFilterComponent"},{"__symbolic":"reference","name":"SelectAutocompleteFilterComponent"},{"__symbolic":"reference","name":"SelectFilterOldComponent"},{"__symbolic":"reference","name":"TitleFilterComponent"},{"__symbolic":"reference","name":"TreeFilterComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":37,"character":8}],"exports":[{"__symbolic":"reference","name":"BooleanFilterComponent"},{"__symbolic":"reference","name":"FilterContainerComponent"},{"__symbolic":"reference","name":"SelectAutocompleteFilterComponent"},{"__symbolic":"reference","name":"SelectFilterOldComponent"},{"__symbolic":"reference","name":"TitleFilterComponent"},{"__symbolic":"reference","name":"FilterDirective"},{"__symbolic":"reference","name":"TreeFilterComponent"}],"providers":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}]}],"members":{}},"BooleanFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"toco-boolean-filter","template":"<!-- <mat-slide-toggle [checked]=\"operator\" [(ngModel)]=\"operator\" (click)=\"change_operator_name()\">{{operator_name}}</mat-slide-toggle>\n\n<div class=\"interruptor-background\">\n    <div class=\"interruptor-selector-down\"></div>\n</div>\n<br> -->\n<div fxLayout=\"{{direction}}\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n    <label>{{data.name[0]}}</label>\n    <div class=\"mat-interruptor-background{{classDireccion}}\">\n        <div *ngIf=\"!operator;then content else other_content\"></div>\n        <ng-template #content>\n            <div class=\"mat-interruptor-selector-up{{classDireccion}}\" (click)=\"changeInterruptor()\"></div>\n        </ng-template>\n        <ng-template #other_content>\n            <div class=\"mat-interruptor-selector-down{{classDireccion}}\" (click)=\"changeInterruptor()\"></div>\n        </ng-template>\n    </div>\n    <label>{{data.name[1]}}</label>\n</div>","styles":[".interruptor-background{width:1.01em;height:2.3em;border:.1em solid #000;border-radius:1em;position:relative;display:flex;flex-direction:row;justify-content:center;background:0 0;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.interruptor-selector-down,.interruptor-selector-up{width:.9em;height:.9em;border-radius:50%;position:absolute;left:.07em;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.interruptor-selector-up{top:.05em}.interruptor-selector-down{bottom:.05em}.mat-interruptor-background,.mat-interruptor-background-horizontal{width:.875em;height:2.3em;background-color:rgba(100,97,96,.5);border-radius:1em;position:relative;display:flex;flex-direction:row;justify-content:center;border:transparent}.mat-interruptor-background-horizontal{height:.875em;width:2.3em}.mat-interruptor-selector-down,.mat-interruptor-selector-down-horizontal,.mat-interruptor-selector-up,.mat-interruptor-selector-up-horizontal{width:1.3em;height:1.3em;border-radius:50%;position:absolute;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.mat-interruptor-selector-up{top:-.1em}.mat-interruptor-selector-down{bottom:-.1em}.mat-interruptor-selector-up-horizontal{left:-.1em;top:-.22em}.mat-interruptor-selector-down-horizontal{right:-.1em;top:-.22em}.mat-interruptor-selector-down-horizontal:hover,.mat-interruptor-selector-down:hover,.mat-interruptor-selector-up-horizontal:hover,.mat-interruptor-selector-up:hover{cursor:pointer}.mat-interruptor-selector-down-horizontal:active,.mat-interruptor-selector-down:active,.mat-interruptor-selector-up-horizontal:active,.mat-interruptor-selector-up:active{cursor:-webkit-grabbing;cursor:grabbing;transition-duration:1s;box-shadow:0 0 2px 8px rgba(248,55,33,.26)}.mat-interruptor-selector-up:active{transform:translate3d(0,16px,0)}.interruptor-selector-down:active{transform:translate3d(0,0,16px)}.mat-interruptor-selector-up-horizontal:active{transform:translate3d(16px,0,0)}.mat-interruptor-selector-down-horizontal:active{transform:translate3d(0,0,0)}"]}]}],"members":{"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"change_operator_name":[{"__symbolic":"method"}],"changeInterruptor":[{"__symbolic":"method"}]}},"FilterContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"toco-filter-container","template":"<!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\" fxLayoutGap=\"1em\" fxLayoutGap.xs=\"0\"> -->\n\n  <ng-template toco-Filter></ng-template>\n\n<!-- </div> -->\n\n<button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>add</mat-icon>\n</button>\n  <mat-menu #menu=\"matMenu\" >\n    <ng-container *ngFor=\"let item of filters_data,let i=index\">\n        <ng-container *ngIf=\"item.is_enabled\">\n          <button mat-menu-item (click)=\"addFilter(i)\">\n            {{item.name}}\n          </button>\n        </ng-container>\n    </ng-container>\n    \n\n    \n  </mat-menu>","styles":[".width-100{width:100%}.mat-menu-item{height:37px}"]}]}],"members":{"filter_url":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":3}}]}],"adHost":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":30,"character":3},"arguments":[{"__symbolic":"reference","name":"FilterDirective"},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":32,"character":50},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"newFilter":[{"__symbolic":"method"}],"deleteFilter":[{"__symbolic":"method"}]}},"SelectAutocompleteFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"toco-select-autocomplete-filter","template":"<div class=\"card-filter\" >\n  <mat-form-field style=\"width: 100%;\">\n    \n    <input type=\"text\" placeholder=\"{{placeholder}}\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" id=\"{{inputId}}\">\n    <mat-autocomplete #auto=\"matAutocomplete\" >\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" (click)=\"addChips(option)\" title=\"{{option.name}}\">\n        {{option.name}}\n      </mat-option>\n    </mat-autocomplete>\n\n    <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <mat-chip-list fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: .5em\" id=\"chiplist\">\n    <mat-chip *ngFor=\"let item of chipsList; let i=index\" (click)=\"removeChip(i)\">{{item.name}}</mat-chip>\n  </mat-chip-list>\n</div>","styles":[".card-filter{border:2px solid #e4e4e4;border-radius:5px;padding:5px .5em 0;position:relative;box-shadow:2px 3px 10px RGB(0,0,0,.053);width:15em;margin:.4em 0}.delete-filter{position:absolute;top:-1.9em;right:-1.4em;width:2em;height:2em}.delete-filter mat-icon{font-size:medium}.mat-option{line-height:35px;font-size:small;height:35px}#mat-chip-list-0>.mat-chip-list-wrapper{max-height:6em;overflow:auto}mat-chip{cursor:pointer}"]}]}],"members":{"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"_filter":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"optionSelect":[{"__symbolic":"method"}],"addChips":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}]}},"ValueInformation":{"__symbolic":"interface"},"SelectFilterOldComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"toco-select-filter-old","template":"<mat-form-field class=\"card-filter\">\n\n  <ng-container *ngIf=\"multiple; else elseTemplate\">\n    <mat-select placeholder=\"{{placeholder}}\" [(ngModel)]=\"selectValue\" multiple>\n        <mat-option *ngFor=\"let topping of selectOptions\" [value]=\"topping\" (click)=\"optionSelect()\">{{topping}}</mat-option>\n      </mat-select>\n  </ng-container>\n  <ng-template #elseTemplate>\n    <mat-select placeholder=\"{{placeholder}}\" [(ngModel)]=\"selectValue\">\n        <mat-option *ngFor=\"let topping of selectOptions\" [value]=\"topping\" (click)=\"optionSelect()\">{{topping}}</mat-option>\n      </mat-select>\n  </ng-template>\n\n  <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>","styles":[".card-filter{border:2px solid #e4e4e4;border-radius:5px;padding:5px .5em 0;position:relative;box-shadow:2px 3px 10px RGB(0,0,0,.053);width:15em;margin:.4em 0}.delete-filter{position:absolute;top:-1.9em;right:-1.4em;width:2em;height:2em}.delete-filter mat-icon{font-size:medium}"]}]}],"members":{"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"optionSelect":[{"__symbolic":"method"}]}},"TitleFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"toco-title-filter","template":"<mat-form-field class=\"card-filter\">\n  <input matInput type=\"{{type}}\" placeholder=\"{{placeholder}}\" [(ngModel)]=\"data.value\" required (keyup)=\"onChange()\">\n  <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n","styles":[".card-filter{border:2px solid #e4e4e4;border-radius:5px;padding:5px .5em 0;position:relative;box-shadow:2px 3px 10px RGB(0,0,0,.053);width:15em;margin:.4em 0}.delete-filter{position:absolute;top:-1.9em;right:-1.4em;width:2em;height:2em}.delete-filter mat-icon{font-size:medium}"]}]}],"members":{"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"FlatTreeNodeFilter":{"__symbolic":"interface"},"TreeFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":36,"character":1},"arguments":[{"selector":"toco-tree-filter","template":"<div class=\"card-filter\">\n  <input\n    type=\"text\"\n    placeholder=\"{{ data.placeholder }}\"\n    aria-label=\"Number\"\n    matInput\n    [formControl]=\"myControl\"\n    id=\"{{ inputId }}\"\n  />\n\n  <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"padd\">\n    <mat-tree-node\n      class=\"hover\"\n      *matTreeNodeDef=\"let node\"\n      matTreeNodeToggle\n      matTreeNodePadding\n      fxLayout=\"row\"\n      fxLayoutAlign=\"space-between center\"\n    >\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <button mat-icon-button disabled></button>\n        <mat-checkbox\n          class=\"checklist-leaf-node\"\n          [checked]=\"checklistSelection.isSelected(node)\"\n          (change)=\"leafItemSelectionToggle(node)\"\n          matTooltip=\"{{ node.name }}\"\n          >{{ node.name }}</mat-checkbox\n        >\n      </div>\n    </mat-tree-node>\n\n    <mat-tree-node\n      class=\"hover\"\n      *matTreeNodeDef=\"let node; when: hasChild\"\n      matTreeNodePadding\n    >\n      <button\n        mat-icon-button\n        matTreeNodeToggle\n        [attr.aria-label]=\"'toggle ' + node.name\"\n      >\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{ treeControl.isExpanded(node) ? \"expand_more\" : \"chevron_right\" }}\n        </mat-icon>\n      </button>\n      <div\n        class=\"item-width\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"space-between center\"\n      >\n        <mat-checkbox\n          [checked]=\"descendantsAllSelected(node)\"\n          [indeterminate]=\"descendantsPartiallySelected(node)\"\n          (change)=\"itemSelectionToggle(node)\"\n          matTooltip=\"{{ node.name }}\"\n          >{{ node.name }}</mat-checkbox\n        >\n      </div>\n    </mat-tree-node>\n  </mat-tree>\n\n  <button\n    mat-icon-button\n    color=\"accent\"\n    class=\"delete-filter\"\n    (click)=\"remove_component()\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n\n  <mat-chip-list\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n    style=\"margin-bottom: .5em\"\n    id=\"chiplist\"\n  >\n    <mat-chip\n      *ngFor=\"let item of chipsList; let i = index\"\n      (click)=\"removeChip(i)\"\n      >{{ item.name }}</mat-chip\n    >\n  </mat-chip-list>\n</div>\n","styles":[".card-filter{border:2px solid #e4e4e4;border-radius:5px;padding:5px .5em 0;position:relative;box-shadow:2px 3px 10px RGB(0,0,0,.053);width:15em;margin:.4em 0}.delete-filter{position:absolute;top:-1.9em;right:-1.4em;width:2em;height:2em}.delete-filter mat-icon{font-size:medium}"]}]}],"members":{"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"FilterContainerService"}]}],"ngOnInit":[{"__symbolic":"method"}],"_filter":[{"__symbolic":"method"}],"_include_node":[{"__symbolic":"method"}],"_fix_selection":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"emitSelection":[{"__symbolic":"method"}],"transformer":[{"__symbolic":"method"}],"getLevel":[{"__symbolic":"method"}],"isExpandable":[{"__symbolic":"method"}],"hasChild":[{"__symbolic":"method"}],"getChildren":[{"__symbolic":"method"}],"descendantsAllSelected":[{"__symbolic":"method"}],"descendantsPartiallySelected":[{"__symbolic":"method"}],"itemSelectionToggle":[{"__symbolic":"method"}],"leafItemSelectionToggle":[{"__symbolic":"method"}],"checkAllParentsSelection":[{"__symbolic":"method"}],"checkRootNodeSelection":[{"__symbolic":"method"}],"getParentNode":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}]}},"FilterContainerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"emitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":11,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"filterDeleted":[{"__symbolic":"method"}]}},"FilterItem":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Type","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]},{"__symbolic":"reference","name":"any"}]}]}},"FilterHttpMap":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"FilterComponent":{"__symbolic":"interface"},"FilterDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":3,"character":1},"arguments":[{"selector":"[toco-Filter]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":8,"character":42}]}]}},"FiltersService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{"paramsChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"changeFilter":[{"__symbolic":"method"}],"deleteParameter":[{"__symbolic":"method"}],"changeAutocompleteFilter":[{"__symbolic":"method"}],"deleteAutocompleteFilter":[{"__symbolic":"method"}],"createAutocompleteFilterValue":[{"__symbolic":"method"}]}},"AutocompleteFilter":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"string"}]}]}},"TocoFormsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":48,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ActionButtonComponent"},{"__symbolic":"reference","name":"ComponentFactory_Depr"},{"__symbolic":"reference","name":"FormContainerComponent"},{"__symbolic":"reference","name":"ContainerPanelComponent"},{"__symbolic":"reference","name":"ContainerPanelActionComponent"},{"__symbolic":"reference","name":"ContainerSimpleComponent"},{"__symbolic":"reference","name":"TableComponent"},{"__symbolic":"reference","name":"ContainerLabelDiffLangComponent"},{"__symbolic":"reference","name":"InputBoolComponent"},{"__symbolic":"reference","name":"InputEmailComponent"},{"__symbolic":"reference","name":"InputIdentifierComponent"},{"__symbolic":"reference","name":"InputIssnComponent"},{"__symbolic":"reference","name":"InputNumberComponent"},{"__symbolic":"reference","name":"InputRnpsComponent"},{"__symbolic":"reference","name":"InputSelectComponent"},{"__symbolic":"reference","name":"InputTextComponent"},{"__symbolic":"reference","name":"InputUrlComponent"},{"__symbolic":"reference","name":"VocabularyComponent"},{"__symbolic":"reference","name":"VocabularyTreeComponent"},{"__symbolic":"reference","name":"TermParentComponent"},{"__symbolic":"reference","name":"SelectComponent"},{"__symbolic":"reference","name":"SelectFilterComponent"},{"__symbolic":"reference","name":"TextareaComponent"},{"__symbolic":"reference","name":"SelectTreeComponent"},{"__symbolic":"reference","name":"DatepickerComponent"},{"__symbolic":"reference","name":"CheckboxComponent"},{"__symbolic":"reference","name":"DatepickerYearComponent"},{"__symbolic":"reference","name":"SelectOrgsComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":82,"character":4},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":83,"character":4},{"__symbolic":"reference","name":"CoreModule"}],"entryComponents":[{"__symbolic":"reference","name":"ActionButtonComponent"},{"__symbolic":"reference","name":"ContainerPanelComponent"},{"__symbolic":"reference","name":"ContainerPanelActionComponent"},{"__symbolic":"reference","name":"ContainerSimpleComponent"},{"__symbolic":"reference","name":"InputBoolComponent"},{"__symbolic":"reference","name":"InputEmailComponent"},{"__symbolic":"reference","name":"InputIdentifierComponent"},{"__symbolic":"reference","name":"InputIssnComponent"},{"__symbolic":"reference","name":"InputNumberComponent"},{"__symbolic":"reference","name":"InputRnpsComponent"},{"__symbolic":"reference","name":"InputSelectComponent"},{"__symbolic":"reference","name":"InputTextComponent"},{"__symbolic":"reference","name":"InputUrlComponent"},{"__symbolic":"reference","name":"VocabularyComponent"},{"__symbolic":"reference","name":"VocabularyTreeComponent"},{"__symbolic":"reference","name":"TermParentComponent"},{"__symbolic":"reference","name":"SelectComponent"},{"__symbolic":"reference","name":"SelectFilterComponent"},{"__symbolic":"reference","name":"TextareaComponent"},{"__symbolic":"reference","name":"SelectTreeComponent"},{"__symbolic":"reference","name":"DatepickerComponent"},{"__symbolic":"reference","name":"DatepickerYearComponent"},{"__symbolic":"reference","name":"CheckboxComponent"},{"__symbolic":"reference","name":"SelectOrgsComponent"}],"exports":[{"__symbolic":"reference","name":"ActionButtonComponent"},{"__symbolic":"reference","name":"ComponentFactory_Depr"},{"__symbolic":"reference","name":"FormContainerComponent"},{"__symbolic":"reference","name":"ContainerPanelComponent"},{"__symbolic":"reference","name":"ContainerPanelActionComponent"},{"__symbolic":"reference","name":"ContainerSimpleComponent"},{"__symbolic":"reference","name":"TableComponent"},{"__symbolic":"reference","name":"ContainerLabelDiffLangComponent"},{"__symbolic":"reference","name":"InputBoolComponent"},{"__symbolic":"reference","name":"InputEmailComponent"},{"__symbolic":"reference","name":"InputIdentifierComponent"},{"__symbolic":"reference","name":"InputIssnComponent"},{"__symbolic":"reference","name":"InputNumberComponent"},{"__symbolic":"reference","name":"InputRnpsComponent"},{"__symbolic":"reference","name":"InputSelectComponent"},{"__symbolic":"reference","name":"InputTextComponent"},{"__symbolic":"reference","name":"InputUrlComponent"},{"__symbolic":"reference","name":"VocabularyComponent"},{"__symbolic":"reference","name":"VocabularyTreeComponent"},{"__symbolic":"reference","name":"TermParentComponent"},{"__symbolic":"reference","name":"SelectComponent"},{"__symbolic":"reference","name":"SelectFilterComponent"},{"__symbolic":"reference","name":"TextareaComponent"},{"__symbolic":"reference","name":"DatepickerComponent"},{"__symbolic":"reference","name":"DatepickerYearComponent"},{"__symbolic":"reference","name":"CheckboxComponent"},{"__symbolic":"reference","name":"SelectOrgsComponent"}],"providers":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"IconService"}]}]}},"ActionButtonComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ActionControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"action-button","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<!-- <button mat-icon-button -->\n<button mat-raised-button\n\tclass=\"action-button\"\n\tcolor=\"primary\"\n\t[attr.aria-label]=\"content.ariaLabel\"\n\t[matTooltip]=\"content.tooltip.label\"\n\t[disabled]=\"content.isDisabled(getInstance)\"\n\t(click)=\"content.click(getInstance)\"\n>\n\t<!-- Only renders one of these two `mat-icon` or nothing. -->\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.internal)\" class=\"mat-icon notranslate\" matPrefix [svgIcon]=\"content.icon.name\"></mat-icon>\n\t<mat-icon *ngIf=\"content.icon && iconSourceState(content.icon, iconSource.external)\" class=\"mat-icon notranslate\" matPrefix>{{ content.icon.name }}</mat-icon>\n\t<!-- <mat-icon>{{ content.icon.name }}</mat-icon> -->\n\t{{ content.label }}\n</button>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"OperationAction":{"back":"back","cancel":"cancel","reset":"reset","delete":"delete","submit":"submit"},"isDisabledDefault":{"__symbolic":"function","parameters":["sender"],"value":false},"clickDefault":{"__symbolic":"function"},"ActionContent":{"__symbolic":"interface"},"ActionControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormFieldControl"},"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"init":[{"__symbolic":"method"}],"initValue":[{"__symbolic":"method"}]}},"ComponentFactory_Depr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"component-factory-depr","template":"\n<div fxLayout=\"row wrap\" fxLayout.xs=\"column\"\nfxLayoutAlign=\"space-between end\" fxLayoutAlign.xs=\"space-between center\"\nfxLayoutGap=\"1em\" class=\"form-field-component\"\n>\n\n    <ng-container *ngFor=\"let componentContent of componentsContent\" [ngSwitch]=\"componentContent.type\">\n\n        <!-- <ng-container \n            *ngSwitchCase=\"formFieldType.checkbox\"\n            [formGroup]=\"componentContent.formGroup\"\n        >\n            <mat-checkbox\n                [style.width]=\"componentContent.width\"\n                [style.minWidth]=\"componentContent.minWidth\"\n                [value]=\"componentContent.value\"\n                (input)=\"$event.target.value\"\n                name=\"{{ componentContent.name }}\"\n                required=\"{{ componentContent.required }}\"\n                [formControlName]=\"componentContent.name\"\n            >\n                {{ componentContent.label }}\n            </mat-checkbox>\n        </ng-container> -->\n<!-- \n        <mat-form-field \n            *ngSwitchCase=\"formFieldType.textarea\"\n            [style.width]=\"componentContent.width\"\n            [style.minWidth]=\"componentContent.minWidth\"\n            [formGroup]=\"componentContent.formGroup\"\n        >\n            <textarea \n                matInput [value]=\"componentContent.value\"\n                (input)=\"$event.target.value\"\n                name=\"{{ componentContent.name }}\"\n                placeholder=\"{{ componentContent.label }}\"\n                required=\"{{ componentContent.required }}\"\n                [formControlName]=\"componentContent.name\"\n                minRows=\"20\"\n            ></textarea>\n        </mat-form-field> -->\n\n\n        <!-- <mat-form-field \n            *ngSwitchCase=\"formFieldType.datepicker\"\n            [style.width]=\"componentContent.width\"\n            [formGroup]=\"componentContent.formGroup\"\n        >\n            <input \n                matInput\n                [value]=\"componentContent.value\"\n                (input)=\"$event.target.value\"\n                [matDatepicker]=\"picker\"\n                name=\"{{ componentContent.name }}\"\n                placeholder=\"{{ componentContent.label }}\"\n                required=\"{{ componentContent.required }}\"\n                [formControlName]=\"componentContent.name\"\n            >\n            <mat-datepicker-toggle\n                matSuffix [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker \n                #picker\n                startView=\"multi-year\"\n            ></mat-datepicker>\n        </mat-form-field> -->\n        <toco-checkbox *ngSwitchCase=\"formFieldType.datepicker\" [content]=\"componentContent\"></toco-checkbox>\n        <toco-datepicker *ngSwitchCase=\"formFieldType.datepicker\" [content]=\"componentContent\"></toco-datepicker>\n\n\n        <action-button *ngSwitchCase=\"formFieldType.action_button\" [content]=\"componentContent\"></action-button>\n\n\n        <container-panel *ngSwitchCase=\"formFieldType.container_panel\" [content]=\"componentContent\"></container-panel>\n\n        <container-simple *ngSwitchCase=\"formFieldType.container_simple\" [content]=\"componentContent\"></container-simple>\n\n\n        <container-label-diff-lang *ngSwitchCase=\"formFieldType.container_label_diff_lang\" [content]=\"componentContent\"></container-label-diff-lang>\n\n\n        <input-url *ngSwitchCase=\"formFieldType.url\" [content]=\"componentContent\"></input-url>\n        \n        <input-email *ngSwitchCase=\"formFieldType.email\" [content]=\"componentContent\"></input-email>\n\n        <input-identifier *ngSwitchCase=\"formFieldType.identifier\" [content]=\"componentContent\"></input-identifier>\n\n        <input-issn *ngSwitchCase=\"formFieldType.issn\" [content]=\"componentContent\"></input-issn>\n\n        <input-rnps *ngSwitchCase=\"formFieldType.rnps\" [content]=\"componentContent\"></input-rnps>\n\n        <input-select *ngSwitchCase=\"formFieldType.select\" [content]=\"componentContent\"></input-select>\n\n        <toco-vocabulary *ngSwitchCase=\"formFieldType.vocabulary\" [content]=\"componentContent\"></toco-vocabulary>\n\n        <toco-vocabulary-tree *ngSwitchCase=\"formFieldType.vocabulary_tree\" [content]=\"componentContent\"></toco-vocabulary-tree>\n        \n        <toco-term-parent *ngSwitchCase=\"formFieldType.term_parent\" [content]=\"componentContent\"></toco-term-parent>\n\n        <toco-textarea *ngSwitchCase=\"formFieldType.textarea\" [content]=\"componentContent\"></toco-textarea>\n\n        <toco-select *ngSwitchCase=\"formFieldType.select_expr\" [content]=\"componentContent\"></toco-select>\n\n        <toco-select-filter *ngSwitchCase=\"formFieldType.select_filter\" [content]=\"componentContent\"></toco-select-filter>\n\n        <toco-select-tree *ngSwitchCase=\"formFieldType.select_tree\" [content]=\"componentContent\"></toco-select-tree>\n\n        <input-text *ngSwitchDefault [content]=\"componentContent\"></input-text>\n\n    </ng-container>\n\n</div>\n","styles":[".form-field-component{margin:5px}"]}]}],"members":{"componentsContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"FormContainerAction":{"__symbolic":"interface"},"PanelContent_Depr":{"__symbolic":"interface"},"FormContainerComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ContainerControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":48,"character":1},"arguments":[{"selector":"toco-form-container","template":"\n<ng-container *ngIf=\"(panelsContent)\">\n\n    <ng-container *ngIf=\"useContainer\">\n        <mat-accordion *ngIf=\"(useAccordion)\" class=\"toco-form-container\" multi=\"true\">\n\n            <mat-expansion-panel *ngFor=\"let panel of panelsContent; let newStep = index; let count=count\"\n                [expanded]=\"panel.open\" (opened)=\"setStep(newStep)\">\n        \n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ panel.title }}\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        {{ panel.description }}\n                        <mat-icon>{{ panel.iconName }}</mat-icon>\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n        \n                <component-factory-depr [componentsContent]=\"panel.formSectionContent\"></component-factory-depr>\n        \n                <mat-action-row *ngIf=\"panel.actionLabel\">\n                    <!-- <button mat-button *ngIf=\"newStep > 0\" color=\"warn\" (click)=\"prevStep()\">Anterior</button>\n                    <button mat-button *ngIf=\"newStep != count-1\" color=\"primary\" (click)=\"nextStep()\">Siguente</button> -->\n        \n                    <button *ngIf=\"panel.actionLabel\" mat-button color=\"accent\" (click)=\"panel.action.doit(newStep)\">{{ panel.actionLabel }}</button>\n                    <!-- <button *ngIf=\"i == l-1 && actionButtonIsStepperNext\" mat-button matStepperNext color=\"primary\" (click)=\"doAction()\">{{actionLabel}}</button> -->\n                </mat-action-row>\n\n            </mat-expansion-panel>\n\n            <button *ngIf=\"actionLabel\" mat-raised-button color=\"primary\" (click)=\"doAction()\">{{actionLabel}}</button>\n        </mat-accordion>\n        \n        <div *ngIf=\"(!useAccordion)\" class=\"toco-form-container\">\n            <div *ngFor=\"let panel of panelsContent; let i=index; let count=count\">\n                <mat-card [ngStyle]=\"{'margin-bottom': '1em'}\">\n                    <mat-card-header>\n                        <mat-card-title>\n                            {{ panel.title }}\n                        </mat-card-title>\n                        <mat-card-subtitle *ngIf=\"panel.description\">\n                            {{ panel.description }}\n                            <mat-icon>{{ panel.iconName }}</mat-icon>\n                        </mat-card-subtitle>\n                    </mat-card-header>\n            \n                    <mat-card-content>\n                        <component-factory-depr [componentsContent]=\"panel.formSectionContent\"></component-factory-depr>\n                    </mat-card-content>\n            \n                    <mat-card-actions *ngIf=\"i == count-1 && actionLabel\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                        <button mat-button color=\"primary\" (click)=\"doAction()\">{{ actionLabel }}</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </ng-container>\n\n    <div fxLayout=\"column\" *ngIf=\"!useContainer\">\n        <div *ngFor=\"let panel of panelsContent; let i=index; let count=count\" class=\"toco-form-container\">\n            <component-factory-depr [componentsContent]=\"panel.formSectionContent\"></component-factory-depr>\n        </div>\n        <div  *ngIf=\"actionLabel\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n            <button mat-button color=\"primary\" (click)=\"doAction()\">{{ actionLabel }}</button>\n        </div>\n    </div>\n\n</ng-container>\n","styles":[".toco-form-container{width:100%;margin-bottom:1em}"]}]}],"members":{"panelsContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":3}}]}],"useAccordion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"useContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":3}}]}],"actionButtonIsStepperNext":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"action":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":3}}]}],"actionLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":76,"character":3}}]}],"deleteValuesAfterAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"setFormGroupToPanels":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setStep":[{"__symbolic":"method"}],"nextStep":[{"__symbolic":"method"}],"prevStep":[{"__symbolic":"method"}],"doAction":[{"__symbolic":"method"}]}},"FormContainerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":25,"character":40},{"__symbolic":"reference","name":"Environment"}]}],"sendPostData":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"PanelContent":{"__symbolic":"interface"},"ContainerPanelComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ContainerControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":37,"character":1},"arguments":[{"selector":"container-panel","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-card\n  class=\"container-panel-mat-card\"\n  [formGroup]=\"content.formSection\"\n  [attr.aria-label]=\"content.ariaLabel\"\n>\n  <mat-card-header>\n    <mat-card-title *ngIf=\"content.label\">\n      {{ content.label }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"content.description\">\n      {{ content.description }}\n      <mat-icon>{{ content.iconName }}</mat-icon>\n    </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content\n    fxLayout=\"row wrap\"\n    fxLayout.xs=\"column\"\n    fxLayoutAlign=\"space-between end\"\n    fxLayoutAlign.xs=\"space-between center\"\n    fxLayoutGap=\"1em\"\n    class=\"form-field-component\"\n  >\n    <ng-template get-view-container></ng-template>\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"content.isDynamic\">\n    <button mat-raised-button color=\"primary\" (click)=\"addToFormArray()\">\n      <!-- <mat-icon>add box</mat-icon> -->\n      <mat-icon>add_circle</mat-icon>\n      Add new item\n    </button>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!canRemoveFromFormArray\"\n      (click)=\"clearFormArray()\"\n    >\n      <!-- <mat-icon>remove box</mat-icon> -->\n      <mat-icon>remove_circle</mat-icon>\n      Clear all\n    </button>\n  </mat-card-actions>\n</mat-card>\n","styles":[""]}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}]}},"PanelAction":{"__symbolic":"interface"},"PanelActionContent":{"__symbolic":"interface"},"ContainerPanelActionComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ContainerControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":51,"character":1},"arguments":[{"selector":"container-panel-action","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-card\n  class=\"container-panel-mat-card\"\n  [formGroup]=\"content.formSection\"\n  [attr.aria-label]=\"content.ariaLabel\"\n>\n  <mat-card-header>\n    <mat-card-title *ngIf=\"content.label\">\n      {{ content.label }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"content.description\">\n      {{ content.description }}\n      <mat-icon>{{ content.iconName }}</mat-icon>\n    </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content\n    fxLayout=\"row wrap\"\n    fxLayout.xs=\"column\"\n    fxLayoutAlign=\"space-between end\"\n    fxLayoutAlign.xs=\"space-between center\"\n    fxLayoutGap=\"1em\"\n    class=\"form-field-component\"\n  >\n    <ng-template get-view-container></ng-template>\n  </mat-card-content>\n\n  <mat-card-actions *ngIf=\"content.actionLabel\">\n    <button\n      *ngIf=\"content.actionLabel\"\n      mat-button\n      color=\"accent\"\n      (click)=\"doAction()\"\n    >\n      {{ content.actionLabel }}\n    </button>\n  </mat-card-actions>\n\n  <mat-card-actions *ngIf=\"content.isDynamic\">\n    <button mat-raised-button color=\"primary\" (click)=\"addToFormArray()\">\n      <!-- <mat-icon>add box</mat-icon> -->\n      <mat-icon>add_circle</mat-icon>\n      Add new item\n    </button>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!canRemoveFromFormArray\"\n      (click)=\"clearFormArray()\"\n    >\n      <!-- <mat-icon>remove box</mat-icon> -->\n      <mat-icon>remove_circle</mat-icon>\n      Clear all\n    </button>\n  </mat-card-actions>\n</mat-card>\n","styles":[""]}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"doAction":[{"__symbolic":"method"}]}},"ContainerSimpleComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ContainerControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"container-simple","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el único que está hecho. -->\n<fieldset class=\"container-simple-form-field\" [formGroup]=\"content.formSection\" [attr.aria-label]=\"content.ariaLabel\">\n    <legend class=\"container-simple-form-field-legend\">{{ content.label }}</legend>\n\n    <ng-template get-view-container></ng-template>\n\n    <ng-container *ngIf=\"content.isDynamic\">\n        <button mat-raised-button color=\"primary\" (click)=\"addToFormArray()\">\n            <!-- <mat-icon>add box</mat-icon> -->\n            <mat-icon>add_circle</mat-icon>\n            Add new item\n        </button>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!canRemoveFromFormArray\" (click)=\"clearFormArray()\">\n            <!-- <mat-icon>remove box</mat-icon> -->\n            <mat-icon>remove_circle</mat-icon>\n            Clear all\n        </button>\n    </ng-container>\n\n</fieldset>\n","styles":[".container-simple-form-field{margin:-4px 0 24px;padding:0 10px 14px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.container-simple-form-field-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}]}},"CssStyles":{"__symbolic":"interface"},"CellContentWrap":{"break":0,"ellipsis":1,"responsible":2},"TableAction":{"__symbolic":"interface"},"TableContent":{"__symbolic":"interface"},"defaultTableContent":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"error","message":"Expression form not supported","line":167,"character":22,"module":"./lib/forms/container/table/table.component"}},"TableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":185,"character":1},"arguments":[{"selector":"toco-table","template":"\n<table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"_getDataSource\" multiTemplateDataRows>\n\n    <!-- The content that is showed when the `dataSource` is not empty. -->\n    <ng-container *ngFor=\"let column of content.columnsObjectProperty; let pos = index\" [matColumnDef]=\"column\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [ngStyle]=\"_createCssStylesForHeader(pos)\">\n            {{ content.columnsHeaderText[pos] }}\n        </th>\n\n        <td mat-cell [ngClass]=\"content.createCssClassesForRow(element)\" *matCellDef=\"let element\" [ngStyle]=\"_createCssStylesForCell(pos)\">\n            <!-- Adds the notification icon in the first column if there is 'version to review'. -->\n            <mat-icon *ngIf=\"pos == 0 && element[content.columnsObjectProperty[2]]\" class=\"mat-cell-mat-icon\">new_releases</mat-icon>\n            <!-- Adds the cell text if is not the third column. -->\n            <ng-container *ngIf=\"pos != 2\">{{ element[column] }}</ng-container>\n            <!-- Adds the view and edit buttons in the third column. -->\n            <div *ngIf=\"pos == 2\" class=\"div-mat-button-actions\">\n                <ng-container *ngIf=\"content.actions\">\n                    <button \n                        *ngFor=\"let action of content.actions\"\n                        mat-icon-button class=\"div-mat-button\" \n                        [attr.aria-label]=\"action.tooltip\" \n                        (click)=\"navigateTo(action.route, element)\"\n                        matTooltip=\"{{ action.tooltip }}\"\n                    >\n                        <mat-icon>{{ action.icon }}</mat-icon>\n                    </button>\n                </ng-container>\n                 \n                <!-- <button mat-icon-button class=\"div-mat-button\" [attr.aria-label]=\"'Show the data'\" (click)=\"navigateTo(element[content.propertyNameToIdentify], element)\">\n                    <mat-icon>description</mat-icon>\n                </button>\n                <button mat-icon-button class=\"div-mat-button\" [attr.aria-label]=\"'Edit the data'\" (click)=\"navigateTo('edit', element)\">\n                    <mat-icon>edit</mat-icon>\n                </button> -->\n\n            </div>\n        </td>\n    </ng-container>\n\n    <!-- The `otherInformation` represents the content that is showed when the `dataSource` is empty \n         or the `dataSource` is loading. The information row is made up of this one column that spans \n         across all columns. -->\n    <ng-container [matColumnDef]=\"'otherInformation'\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"content.columnsObjectProperty.length\">\n            <ng-container *ngIf=\"isLoading; then thenTemplate_IsLoading; else elseTemplate_IsEmpty\"></ng-container>\n            \n            <ng-template #thenTemplate_IsLoading>\n                <mat-progress-spinner class=\"loading-table-information\" mode=\"indeterminate\"></mat-progress-spinner>\n            </ng-template>\n\n            <ng-template #elseTemplate_IsEmpty>\n                <div class=\"empty-table-information\">There is not any data source!</div>\n            </ng-template>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"content.columnsObjectProperty; sticky: true\"></tr>\n    <!-- When it is `loading`, it is `empty`, too. -->\n    <ng-container *ngIf=\"isEmpty; then thenTemplate_OtherInformation; else elseTemplate_IsNotEmpty\"></ng-container>\n\n    <ng-template #thenTemplate_OtherInformation>\n        <tr mat-row class=\"row-other-information\" *matRowDef=\"let row; columns: ['otherInformation']\"></tr>\n    </ng-template>\n\n    <ng-template #elseTemplate_IsNotEmpty>\n        <tr mat-row class=\"row-data\" *matRowDef=\"let row; columns: content.columnsObjectProperty;\" (click)=\"selectRow(row)\"></tr>\n    </ng-template>\n\n</table>\n\n<mat-paginator\n    [length]=\"content.length\"\n    [pageIndex]=\"content.pageIndex\"\n    [pageSize]=\"content.pageSize\"\n    [pageSizeOptions]=\"content.pageSizeOptions\"\n    [hidePageSize]=\"content.hidePageSize\"\n    [showFirstLastButtons]=\"content.showFirstLastButtons\">\n</mat-paginator>\n","styles":["table{table-layout:fixed;width:100%;padding:2em 1em 0}tr.mat-header-row{height:54px}tr.mat-footer-row,tr.mat-row{height:46px}.div-mat-button-actions{display:inline-block;margin-bottom:5px}.div-mat-button{margin-top:5px;margin-right:5px;vertical-align:middle;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-cell-mat-icon{margin-top:5px;margin-right:5px;margin-bottom:5px;vertical-align:middle}th{padding-right:10px!important;padding-left:10px!important;background-color:#f5f7f7!important;border-top:1px solid #bdc3c7;border-bottom:1px solid transparent}td:first-of-type,th:first-of-type{border-left:1px solid #bdc3c7}td:last-of-type,th:last-of-type{border-right:1px solid #bdc3c7}th:not(:last-of-type)::before{content:\" \";position:absolute;top:0;right:0;height:28px;margin-top:12px;text-indent:-2000px;border-right:1px solid #bdc3c7;outline:0}td{padding-right:10px!important;padding-left:10px!important;border-top:1px solid transparent;border-right:1px solid transparent;border-left:1px solid transparent;border-bottom:1px solid #d9dcde;transition:.3s ease-out}tr:first-of-type td{border-top:1px solid #bdc3c7}tr:last-of-type td{border-bottom:1px solid #bdc3c7}td.new-release{color:#f83821}td.selected-row{background-color:#d7d7d7!important;color:#10f!important;border-top:1px solid #10f!important;border-right:1px solid #10f!important;border-bottom:1px solid #10f!important}td.selected-row:first-of-type{border-left:1px solid #10f!important}.loading-table-information{margin:3em auto;cursor:default}.empty-table-information{margin:6em 0;text-align:center;cursor:default}tr.row-data{cursor:pointer}tr.row-data:hover td{background-color:#eee;border-top:1px solid #10f;border-right:1px solid #10f;border-bottom:1px solid #10f}tr.row-data:hover td:first-of-type{border-left:1px solid #10f}tr.row-data:active{background-color:#eee}:host ::ng-deep .mat-sort-header-container{justify-content:center}th.mat-sort-header-sorted{color:#f01}"]}]}],"members":{"_sort":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":225,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatSort","line":225,"character":15},{"static":true}]}]}],"_paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":228,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatPaginator","line":228,"character":15},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":237,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":237,"character":73}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"_initContent":[{"__symbolic":"method"}],"_updateFilter":[{"__symbolic":"method"}],"_updateSort":[{"__symbolic":"method"}],"_setMatSortInitialValue":[{"__symbolic":"method"}],"_updatePaginator":[{"__symbolic":"method"}],"_disabledSortPaginator":[{"__symbolic":"method"}],"_updateChangeSubscription":[{"__symbolic":"method"}],"defaultCreateCssClassesForRow":[{"__symbolic":"method"}],"_createCssStylesForHeader":[{"__symbolic":"method"}],"_createCssStylesForCell":[{"__symbolic":"method"}],"_addCssStyles_CellWidth":[{"__symbolic":"method"}],"_addCssStyles_CellContentWrap":[{"__symbolic":"method"}],"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":587,"character":5}}]}],"_setDataBeforeCallEndpoint":[{"__symbolic":"method"}],"_setDataAfterCallEndpoint":[{"__symbolic":"method"}],"checkColumn":[{"__symbolic":"method"}],"navigateTo":[{"__symbolic":"method"}],"selectRow":[{"__symbolic":"method"}],"applyFilters":[{"__symbolic":"method"}],"applyFilter":[{"__symbolic":"method"}]},"statics":{"_defaultDataSource":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/material","name":"MatTableDataSource","line":211,"character":78},"arguments":[[{}]]}}},"ContainerContent":{"__symbolic":"interface"},"ContainerControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormFieldControl"},"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":5}}]}],"_componentHost":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":110,"character":5},"arguments":[{"__symbolic":"reference","name":"GetViewContainerDirective"},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"init":[{"__symbolic":"method"}],"initFormSectionContentToFormArray":[{"__symbolic":"method"}],"setParentToChildren":[{"__symbolic":"method"}],"setParentToChild":[{"__symbolic":"method"}],"createValueToUndefined":[{"__symbolic":"method"}],"_createValueToUndefined":[{"__symbolic":"method"}],"_initElemFormSectionContentToFormArray":[{"__symbolic":"method"}],"_cloneContent":[{"__symbolic":"method"}],"createChildComponents":[{"__symbolic":"method"}],"createChildComponent":[{"__symbolic":"method"}],"initValue":[{"__symbolic":"method"}],"addToFormArray":[{"__symbolic":"method"}],"removeFromFormArray":[{"__symbolic":"method"}],"clearFormArray":[{"__symbolic":"method"}]},"statics":{"getFormGroupByDefault":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormGroup","line":87,"character":19},"arguments":[{},[]]}},"getFormArrayByDefault":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormArray","line":96,"character":19},"arguments":[[],[]]}}}},"ContainerLabelDiffLangComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ContainerControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"container-label-diff-lang","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el único que está hecho. -->\n<fieldset class=\"container-simple-form-field\" [formGroup]=\"content.formSection\" [attr.aria-label]=\"content.ariaLabel\">\n    <legend class=\"container-simple-form-field-legend\">{{ content.label }}</legend>\n\n    <ng-template get-view-container></ng-template>\n    <!-- <button mat-raised-button color=\"primary\" (click)=\"content.parentFormSection.removeFromFormArray(content.name)\">\n        <mat-icon>remove_circle</mat-icon>\n    </button> -->\n\n</fieldset>\n","styles":[".container-simple-form-field{margin:-4px 0 0;padding:0 12px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.container-simple-form-field-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}]}},"DatepickerComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-datepicker","template":"<mat-form-field\nstyle=\"width: 100%;\"\n>\n<input\n    matInput\n    [value]=\"content.value\"\n    (input)=\"$event.target.value\"\n    [matDatepicker]=\"picker\"\n    name=\"{{ content.name }}\"\n    placeholder=\"{{ content.label }}\"\n    required=\"{{ content.required }}\"\n    [formControl]=\"content.formControl\"\n>\n<mat-datepicker-toggle\n    matSuffix [for]=\"picker\"\n></mat-datepicker-toggle>\n<mat-datepicker\n    #picker\n    startView=\"multi-year\"\n></mat-datepicker>\n</mat-form-field>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"YEAR_MODE_FORMATS":{"parse":{"dateInput":"YYYY"},"display":{"dateInput":"YYYY","monthYearLabel":"MMM YYYY","dateA11yLabel":"LL","monthYearA11yLabel":"MMMM YYYY"}},"DatepickerYearComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"toco-datepicker-year","providers":[{"provide":{"__symbolic":"reference","module":"@angular/material","name":"DateAdapter","line":29,"character":15},"useClass":{"__symbolic":"reference","module":"@angular/material-moment-adapter","name":"MomentDateAdapter","line":29,"character":38},"deps":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DATE_LOCALE","line":29,"character":64}]},{"provide":{"__symbolic":"reference","module":"@angular/material","name":"MAT_DATE_FORMATS","line":30,"character":15},"useValue":{"__symbolic":"reference","name":"YEAR_MODE_FORMATS"}},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":32,"character":15},"useExisting":{"__symbolic":"reference","name":"DatepickerYearComponent"},"multi":true}],"host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-form-field style=\"width: 100%\">\n  <!-- <mat-label>{{ label }}</mat-label> -->\n  <input\n    matInput\n    [matDatepicker]=\"datepicker\"\n    [max]=\"_max\"\n    [min]=\"_min\"\n    [formControl]=\"content.formControl\"\n    (click)=\"_openDatepickerOnClick(datepicker)\"\n    (focus)=\"_openDatepickerOnFocus(datepicker)\"\n    readonly\n    placeholder=\"{{ content.label }}\"\n    required=\"{{ content.required }}\"\n  />\n\n  <mat-datepicker\n    #datepicker\n    [touchUi]=\"touchUi\"\n    startView=\"multi-year\"\n    (yearSelected)=\"_yearSelectedHandler($event, datepicker)\"\n    panelClass=\"year-picker\"\n  >\n  </mat-datepicker>\n</mat-form-field>\n","styles":[""]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"max":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"min":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"touchUi":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":3}}]}],"_picker":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":71,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatDatepicker","line":71,"character":13},{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"_yearSelectedHandler":[{"__symbolic":"method"}],"_openDatepickerOnClick":[{"__symbolic":"method"}],"_openDatepickerOnFocus":[{"__symbolic":"method"}],"_isYearEnabled":[{"__symbolic":"method"}]}},"CheckboxComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-checkbox","template":"<ng-container\n>\n<mat-checkbox\n    [style.width]=\"content.width\"\n    [style.minWidth]=\"content.minWidth\"\n    [value]=\"content.value\"\n    (input)=\"$event.target.value\"\n    name=\"{{ content.name }}\"\n    required=\"{{ content.required }}\"\n    [formControlName]=\"content.name\"\n    [formControl]=\"content.formControl\"\n>\n    {{ content.label }}\n</mat-checkbox>\n</ng-container>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"SelectComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":36,"character":1},"arguments":[{"selector":"toco-select","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field\n  class=\"select-mat-form-field\"\n  [appearance]=\"content.appearance\"\n>\n\n  <mat-label>\n    {{ content.label }}\n  </mat-label>\n\n  <mat-select \n    [formControl]=\"content.formControl\"\n    [required]=\"content.required\"\n    [style.textAlign]=\"content.textAlign\"\n    [attr.aria-label]=\"content.ariaLabel\"\n    [(value)]=\"content.value\"\n    [multiple]=\"multiple\"\n    (selectionChange)=\"onSelectionChange()\"\n  >\n    <mat-option \n      *ngFor=\"let option of selectOptions\" \n      [value]=\"option.value\"\n    >\n      {{ option.label }}\n    </mat-option>\n  </mat-select>\n\n</mat-form-field>\n","styles":[".select-mat-form-field{width:100%}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}]}},"SelectFilterComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"toco-select-filter","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-card>\n\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    *ngIf=\"!selectOptions\">\n  </mat-progress-bar>\n\n  <mat-card-subtitle *ngIf=\"selectOptions\">\n    <mat-form-field style=\"width: 100%;\">\n\n      <mat-label> {{content.label}} <span *ngIf=\"content.required\">*</span></mat-label>\n      <input\n        matInput\n        id=\"'inputId-'{{content.name}}\"\n        type=\"text\"\n        [formControl]=\"chipsFormControl\"\n        [matAutocomplete]=\"auto\"\n          aria-label=\"Number\"\n      />\n\n      <mat-hint *ngIf=\"content.startHint\" [align]=\"'start'\">{{ content.startHint.label }}</mat-hint>\n      <mat-hint *ngIf=\"!content.startHint\" [align]=\"'start'\">{{ searchText }}</mat-hint>\n\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.label\" (click)=\"addChips(option)\"\n          [title]=\"option.label\">\n          {{ option.label }}\n        </mat-option>\n      </mat-autocomplete>\n\n      <!-- <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n        <mat-icon>close</mat-icon>\n      </button> -->\n    </mat-form-field>\n  </mat-card-subtitle>\n\n  <mat-card-content *ngIf=\"!loading\">\n    <mat-chip-list class=\"mat-chip-list-stacked\" fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: .5em\"\n      id=\"chiplist-{{content.name}}\">\n      <mat-chip *ngFor=\"let item of chipsList; let i=index\" (removed)=\"removeChip(i)\" [removable]=\"true\" style=\"width: 100%;height: 100%;\">\n        {{ item.label }}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n\n</mat-card>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"selectOptionsLoaded":[{"__symbolic":"method"}],"setValidation":[{"__symbolic":"method"}],"addTermToValue":[{"__symbolic":"method"}],"removeTermFromValue":[{"__symbolic":"method"}],"_updateFilteredOptions":[{"__symbolic":"method"}],"addChips":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}]}},"SelectOrgsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"toco-select-org","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-card>\n\n\n  <mat-card-subtitle>\n    <mat-form-field style=\"width: 100%;height: 100%;\">\n\n      <mat-label> {{content.label}} <span *ngIf=\"content.required\">*</span></mat-label>\n      <input matInput placeholder=\"{{placeholder}}\" aria-label=\"Buscar\" [matAutocomplete]=\"auto\" [formControl]=\"orgCtrl\">\n      <input\n        matInput\n        id=\"'inputId-'{{content.name}}\"\n        type=\"text\"\n        [formControl]=\"orgCtrl\"\n        [matAutocomplete]=\"auto\"\n          aria-label=\"Number\"\n      />\n\n      <mat-hint *ngIf=\"content.startHint\" [align]=\"'start'\">{{ content.startHint.label }}</mat-hint>\n\n      <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n\n        <mat-option *ngFor=\"let org of filteredOrg.hits\" [value]=\"org.metadata\" (click)=\"addChips(org)\">\n            <span title=\"{{org.metadata.name}}\">{{org.metadata.name}}</span>\n        </mat-option>\n\n      </mat-autocomplete>\n\n      <!-- <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n        <mat-icon>close</mat-icon>\n      </button> -->\n    </mat-form-field>\n  </mat-card-subtitle>\n\n  <mat-progress-bar\n    mode=\"indeterminate\"\n    *ngIf=\"loading\">\n  </mat-progress-bar>\n\n  <mat-card-content *ngIf=\"!loading\">\n    <mat-chip-list class=\"mat-chip-list-stacked\" fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: .5em\"\n      id=\"chiplist-{{content.name}}\">\n      <mat-chip *ngFor=\"let item of chipsList; let i=index\" (removed)=\"removeChip(i)\" [removable]=\"true\" style=\"width: 100%;height: 100%;\">\n        {{ item.metadata.name }}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n\n</mat-card>\n","styles":[""]}]}],"members":{"orgCtrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":4}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":4}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":4}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":4}}]}],"cleaning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":4}}]}],"selectedOrg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":4}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"displayFn":[{"__symbolic":"method"}],"addChips":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}]}},"SelectOptionNode":{"__symbolic":"interface"},"FlatTreeNode":{"__symbolic":"interface"},"SelectTreeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":39,"character":1},"arguments":[{"selector":"toco-select-tree","template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"scrolleable\">\n  <mat-tree-node\n    class=\"hover\"\n    *matTreeNodeDef=\"let node\"\n    matTreeNodeToggle\n    matTreeNodePadding\n    fxLayout=\"row\"\n    fxLayoutAlign=\"space-between center\"\n    [ngStyle]=\"{ 'white-space': 'normal !important' }\"\n  >\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <button mat-icon-button disabled></button>\n      <mat-checkbox\n        class=\"checklist-leaf-node\"\n        [checked]=\"checklistSelection.isSelected(node)\"\n        (change)=\"leafItemSelectionToggle(node)\"\n        matTooltip=\"{{ node.name }}\"\n        [ngStyle]=\"{ 'white-space': 'normal !important' }\"\n      >\n          {{ node.name }}\n      </mat-checkbox>\n    </div>\n  </mat-tree-node>\n\n  <mat-tree-node\n    class=\"hover\"\n    *matTreeNodeDef=\"let node; when: hasChild\"\n    matTreeNodePadding\n    [ngStyle]=\"{ 'white-space': 'normal !important' }\"\n  >\n    <button\n      mat-icon-button\n      matTreeNodeToggle\n      [attr.aria-label]=\"'toggle ' + node.name\"\n    >\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{ treeControl.isExpanded(node) ? \"expand_more\" : \"chevron_right\" }}\n      </mat-icon>\n    </button>\n    <div class=\"item-width\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <mat-checkbox\n        [checked]=\"descendantsAllSelected(node)\"\n        [indeterminate]=\"descendantsPartiallySelected(node)\"\n        (change)=\"itemSelectionToggle(node)\"\n        matTooltip=\"{{ node.name }}\"\n        [ngStyle]=\"{ 'white-space': 'normal !important' }\"\n        >{{ node.name }}</mat-checkbox\n      >\n    </div>\n  </mat-tree-node>\n</mat-tree>\n","styles":[".scrolleable{max-height:20em;min-width:15em;overflow:auto}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"remove_component":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"emitSelection":[{"__symbolic":"method"}],"transformer":[{"__symbolic":"method"}],"getLevel":[{"__symbolic":"method"}],"isExpandable":[{"__symbolic":"method"}],"hasChild":[{"__symbolic":"method"}],"getChildren":[{"__symbolic":"method"}],"descendantsAllSelected":[{"__symbolic":"method"}],"descendantsPartiallySelected":[{"__symbolic":"method"}],"itemSelectionToggle":[{"__symbolic":"method"}],"leafItemSelectionToggle":[{"__symbolic":"method"}],"checkAllParentsSelection":[{"__symbolic":"method"}],"checkRootNodeSelection":[{"__symbolic":"method"}],"getParentNode":[{"__symbolic":"method"}]}},"TermParentComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"toco-term-parent","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<div class=\"card-filter\" *ngIf=\"content.extraContent\">\n\n  <mat-form-field style=\"width: 100%;\">\n\n      <mat-label> {{content.label}} <span *ngIf=\"content.required\">*</span></mat-label>\n    <input \n        matInput \n        id=\"'inputId-'{{content.name}}\" \n        type=\"text\" \n        [formControl]=\"formControl\"\n        [placeholder]=\"content.label\"\n        [matAutocomplete]=\"auto\" \n        aria-label=\"Number\" \n      />\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.identifier\" (click)=\"addParent(option)\"\n        [title]=\"option.description\">\n        {{ option.description }}\n      </mat-option>\n    </mat-autocomplete>\n\n  </mat-form-field>\n\n  <mat-chip-list fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: .5em\" id=\"chiplist\">\n    <mat-chip (click)=\"removeParent()\" *ngIf=\"parentTerm\">{{ parentTerm.description }}</mat-chip>\n  </mat-chip-list>\n\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"_updateFilteredOptions":[{"__symbolic":"method"}],"_get_terms":[{"__symbolic":"method"}],"addParent":[{"__symbolic":"method"}],"removeParent":[{"__symbolic":"method"}],"setValueToInternalControl":[{"__symbolic":"method"}]}},"TextareaComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-textarea","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-form-field\n[style.width]=\"content.width\"\n[style.minWidth]=\"content.minWidth\"\n>\n<textarea\n    [formControl]=\"content.formControl\"\n    matInput [value]=\"content.value\"\n    (input)=\"$event.target.value\"\n    name=\"{{ content.name }}\"\n    placeholder=\"{{ content.label }}\"\n    required=\"{{ content.required }}\"\n    [formControl]=\"content.formControl\"\n    matTextareaAutosize=\"true\"\n></textarea>\n</mat-form-field>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"VocabularyComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"toco-vocabulary","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-card>\n\n  <mat-progress-bar *ngIf=\"loading\"\n    mode=\"indeterminate\">\n  </mat-progress-bar>\n\n    <mat-card-subtitle *ngIf=\"!loading\">\n    <mat-form-field style=\"width: 100%;\">\n\n      <mat-label> {{content.label}} <span *ngIf=\"content.required\">*</span></mat-label>\n      <input\n        matInput\n        id=\"'inputId-'{{content.name}}\"\n        type=\"text\"\n        [formControl]=\"chipsFormControl\"\n        [matAutocomplete]=\"auto\"\n          aria-label=\"Number\"\n      />\n\n      <mat-hint *ngIf=\"content.startHint\" [align]=\"'start'\">{{ content.startHint.label }}</mat-hint>\n      <mat-hint *ngIf=\"!content.startHint\" [align]=\"'start'\">{{ searchText }}</mat-hint>\n\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.term.description\" (click)=\"addChips(option)\"\n          [title]=\"option.term.description\">\n          {{ option.term.description }}\n        </mat-option>\n      </mat-autocomplete>\n\n      <!-- <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n      <mat-icon>close</mat-icon>\n    </button> -->\n    </mat-form-field>\n  </mat-card-subtitle>\n  <mat-card-content *ngIf=\"!loading\">\n    <mat-chip-list class=\"mat-chip-list-stacked\" fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: .5em\"\n      id=\"chiplist-{{extraContent.vocab}}\">\n      <mat-chip *ngFor=\"let item of chipsList; let i=index\" (removed)=\"removeChip(i)\" [removable]=\"true\" style=\"width: 100%;height: 100%;\">\n        {{ getTermNameInATree(item) }}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n\n</mat-card>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaxonomyService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setValidation":[{"__symbolic":"method"}],"addTermToValue":[{"__symbolic":"method"}],"removeTermFromValue":[{"__symbolic":"method"}],"_updateFilteredOptions":[{"__symbolic":"method"}],"_get_terms":[{"__symbolic":"method"}],"addChips":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}],"getTermNameInATree":[{"__symbolic":"method"}]}},"VocabularyTreeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":35,"character":1},"arguments":[{"selector":"toco-vocabulary-tree","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"<mat-card>\n  <mat-card-header>\n\n    <mat-progress-bar *ngIf=\"!levelsOptions\" mode=\"indeterminate\"></mat-progress-bar>\n\n    <ng-template *ngIf=\"levelsOptions\" >\n\n      <mat-form-field\n      *ngFor=\"let level of levelsOptions; let i = index\"\n      class=\"select-mat-form-field\"\n      [appearance]=\"content.appearance\"\n      style=\"width: 100%;\"\n    >\n      <mat-label>{{ content.label }}</mat-label>\n      <mat-select\n        name=\"item\"\n        [required]=\"content.required\"\n        [multiple]=\"false\"\n        [(value)]=\"levelsSelection[i]\"\n        (selectionChange)=\"onSelectionChange(i, levelsSelection[i])\"\n      >\n        <mat-option *ngFor=\"let item of level\" [value]=\"item.term\">\n          {{ item.term.description }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    </ng-template>\n  </mat-card-header>\n\n  <mat-card-content *ngIf=\"lastLevelTerm\">\n    <mat-progress-bar *ngIf=\"!leafsOptions\" mode=\"indeterminate\">\n    </mat-progress-bar>\n\n    <mat-form-field *ngIf=\"leafsOptions\" style=\"width: 100%;\">\n      <mat-label>\n        {{ lastLevelTerm.description }}\n        <span *ngIf=\"content.required\">*</span></mat-label\n      >\n      <input\n        matInput\n        id=\"'inputId-'{{ content.name }}\"\n        type=\"text\"\n        [formControl]=\"chipsFormControl\"\n        [matAutocomplete]=\"auto\"\n        aria-label=\"Number\"\n      />\n\n      <mat-hint *ngIf=\"content.startHint\" [align]=\"'start'\">{{\n        content.startHint.label\n      }}</mat-hint>\n      <mat-hint *ngIf=\"!content.startHint\" [align]=\"'start'\">{{\n        searchText\n      }}</mat-hint>\n\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option\n          *ngFor=\"let option of filteredOptions | async\"\n          [value]=\"option.term.description\"\n          (click)=\"addChips(option)\"\n          [title]=\"option.term.description\"\n        >\n          {{ option.term.description }}\n        </mat-option>\n      </mat-autocomplete>\n\n      <!-- <button mat-icon-button color=\"accent\" class=\"delete-filter\" (click)=\"remove_component()\">\n      <mat-icon>close</mat-icon>\n    </button> -->\n    </mat-form-field>\n\n    <mat-chip-list\n      class=\"mat-chip-list-stacked\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n      style=\"margin-bottom: 0.5em;\"\n      id=\"chiplist-{{ extraContent.vocab }}\"\n    >\n      <mat-chip\n        *ngFor=\"let item of chipsList; let i = index\"\n        (removed)=\"removeChip(i)\"\n        [removable]=\"true\"\n      >\n        {{ getTermNameInATree(item) }}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </mat-card-content>\n</mat-card>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaxonomyService"}]}],"ngOnInit":[{"__symbolic":"method"}],"_setLevelsOptions":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}],"setValidation":[{"__symbolic":"method"}],"addTermToValue":[{"__symbolic":"method"}],"removeTermFromValue":[{"__symbolic":"method"}],"_updateFilteredOptions":[{"__symbolic":"method"}],"_get_terms":[{"__symbolic":"method"}],"addChips":[{"__symbolic":"method"}],"removeChip":[{"__symbolic":"method"}],"getTermNameInATree":[{"__symbolic":"method"}]}},"InputBoolComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"input-bool","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field\n\tclass=\"select-mat-form-field\"\n\t[appearance]=\"content.appearance\"\n>\n\n\t<mat-label>\n\t\t{{ content.label | translate }}\n\t</mat-label>\n\n\t<mat-select\n\t\t[formControl]=\"content.formControl\"\n\t\t[required]=\"content.required\"\n\t\t[style.textAlign]=\"content.textAlign\"\n\t\t[attr.aria-label]=\"content.ariaLabel | translate\"\n\t\t[(value)]=\"content.value\"\n\t\t[multiple]=\"'false'\"\n\t\t(selectionChange)=\"onSelectionChange()\"\n\t>\n\t\t<mat-option [value]=\"true\">\n\t\t\t{{ 'TOCO_NG_VERDADERO' | translate }}\n\t\t</mat-option>\n\t\t<mat-option [value]=\"false\">\n\t\t\t{{ 'TOCO_NG_FALSO' | translate }}\n\t\t</mat-option>\n\t</mat-select>\n\n\t<mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".select-mat-form-field{width:100%}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}]}},"EmailValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"toString":[{"__symbolic":"method"}]},"statics":{"email_Label":"Email","email_Placeholder":"nick@gmail.com"}},"InputEmailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"input-email","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":31,"character":19},"arguments":["",[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":32,"character":12},"member":"email"}]]}}}},"IdentifierValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"toString":[{"__symbolic":"method"}]},"statics":{"identifier_Label":"TOCO_NG_ID"}},"InputIdentifierComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"input-identifier","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":34,"character":19},"arguments":["",[{"__symbolic":"if","condition":{"__symbolic":"binop","operator":"&&","left":{"__symbolic":"reference","name":"validatorArguments"},"right":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"pattern"}},"thenExpression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":35,"character":70},"member":"pattern"},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"pattern"}]},"elseExpression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":35,"character":119},"member":"pattern"},"arguments":["^[a-zA-Z-_]*$"]}}]]}}}},"IssnType_Abbreviation":{"ISSN":"ISSN","p_ISSN":"p-ISSN","e_ISSN":"e-ISSN","ISSN_L":"ISSN-L"},"IssnType_Label":{"ISSN":"TOCO_NG_ISSN","p_ISSN":"TOCO_NG_P_ISSN","e_ISSN":"TOCO_NG_E_ISSN","ISSN_L":"TOCO_NG_ISSN_L"},"IssnValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"isComplete":[{"__symbolic":"method"}],"toString":[{"__symbolic":"method"}]},"statics":{"issn_Placeholder":"XXXX – XXXX","codeLength":11,"codeLengthAsString":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"IssnValue"},"member":"codeLength"},"member":"toString"},"arguments":[10]},"codeGroupSeparator":"–","codeGroupSeparatorWithSpace":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"binop","operator":"+","left":" ","right":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"IssnValue"},"member":"codeGroupSeparator"}},"right":" "},"regExpIssnWithLength_11":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"binop","operator":"+","left":"^[0-9]{4} ","right":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"IssnValue"},"member":"codeGroupSeparator"}},"right":" [0-9]{3}[0-9xX]$"},"regExpIssnWithLength_9":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"binop","operator":"+","left":"^[0-9]{4}","right":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"IssnValue"},"member":"codeGroupSeparator"}},"right":"[0-9]{3}[0-9xX]$"},"regExpIssnWithLength_8":"^[0-9]{7}[0-9xX]$"}},"InputIssnComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"input-issn","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}],"handleSpecificInput":[{"__symbolic":"method"}]}},"InputNumberComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"input-number","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":53,"character":43}]}],"ngOnInit":[{"__symbolic":"method"}],"setNewLanguage":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":42,"character":19},"arguments":[0,[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":43,"character":12},"member":"pattern"},"arguments":["^-?[0-9]+$"]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":44,"character":12},"member":"min"},"arguments":[{"__symbolic":"if","condition":{"__symbolic":"binop","operator":"&&","left":{"__symbolic":"reference","name":"validatorArguments"},"right":{"__symbolic":"binop","operator":"!=","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"min"},"right":{"__symbolic":"reference","name":"undefined"}}},"thenExpression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"min"},"elseExpression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"Number"},"member":"MIN_SAFE_INTEGER"}}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":45,"character":12},"member":"max"},"arguments":[{"__symbolic":"if","condition":{"__symbolic":"binop","operator":"&&","left":{"__symbolic":"reference","name":"validatorArguments"},"right":{"__symbolic":"binop","operator":"!=","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"max"},"right":{"__symbolic":"reference","name":"undefined"}}},"thenExpression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"max"},"elseExpression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"Number"},"member":"MAX_SAFE_INTEGER"}}]}]]}},"toco_ng_Error_Msg_Num_Inval":"","toco_ng_Error_Msg_Num_Minimo":"","toco_ng_Error_Msg_Num_Maximo":""}},"RnpsValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"isComplete":[{"__symbolic":"method"}],"toString":[{"__symbolic":"method"}]},"statics":{"rnps_Placeholder":"XXXX","codeLength":4,"codeLengthAsString":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"RnpsValue"},"member":"codeLength"},"member":"toString"},"arguments":[10]},"rnps_Abbreviation":"RNPS","rnps_Label":"TOCO_NG_RNPS"}},"InputRnpsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"input-rnps","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}],"handleSpecificInput":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":36,"character":19},"arguments":["",[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ExtraValidators"},"member":"equalLength"},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"RnpsValue"},"member":"codeLength"}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":38,"character":12},"member":"pattern"},"arguments":["^[0-9]*$"]}]]}}}},"SelectOption":{"__symbolic":"interface"},"SelectContent":{"__symbolic":"interface"},"InputSelectComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":81,"character":1},"arguments":[{"selector":"input-select","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field\n\tclass=\"select-mat-form-field\"\n\t[appearance]=\"content.appearance\"\n>\n\n\t<mat-label>\n\t\t{{ content.label | translate }}\n\t</mat-label>\n\n\t<ng-container *ngIf=\"content.showTooltip; then thenTemplate_Tooltip; else elseTemplate_WithoutTooltip\"></ng-container>\n\n\t<ng-template #thenTemplate_Tooltip>\n\t\t<mat-select \n\t\t\t[formControl]=\"content.formControl\"\n\t\t\t[required]=\"content.required\"\n\t\t\t[style.textAlign]=\"content.textAlign\"\n\t\t\t[attr.aria-label]=\"content.ariaLabel | translate\"\n\t\t\t[(value)]=\"content.value\"\n\t\t\t[multiple]=\"content.multiple\"\n\t\t\t(selectionChange)=\"onSelectionChange()\"\n\t\t\t[matTooltip]=\"selectTooltip\" [matTooltipPosition]=\"content.selectTooltipPosition\" [matTooltipClass]=\"'tooltip-multiple-lines'\"\n\t\t>\n\t\t\t<mat-option \n\t\t\t\t*ngFor=\"let option of content.selectOptions\" \n\t\t\t\t[value]=\"option.value\"\n\t\t\t\t[matTooltip]=\"option.label | translate\" [matTooltipPosition]=\"content.optionsTooltipPosition\"\n\t\t\t>\n\t\t\t\t{{ option.label | translate }}\n\t\t\t</mat-option>\n\t\t</mat-select>\n\t</ng-template>\n\n\t<ng-template #elseTemplate_WithoutTooltip>\n\t\t<mat-select \n\t\t\t[formControl]=\"content.formControl\"\n\t\t\t[required]=\"content.required\"\n\t\t\t[style.textAlign]=\"content.textAlign\"\n\t\t\t[attr.aria-label]=\"content.ariaLabel | translate\"\n\t\t\t[(value)]=\"content.value\"\n\t\t\t[multiple]=\"content.multiple\"\n\t\t\t(selectionChange)=\"onSelectionChange()\"\n\t\t>\n\t\t\t<mat-option \n\t\t\t\t*ngFor=\"let option of content.selectOptions\" \n\t\t\t\t[value]=\"option.value\"\n\t\t\t>\n\t\t\t\t{{ option.label | translate }}\n\t\t\t</mat-option>\n\t\t</mat-select>\n\t</ng-template>\n\n\t<mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".select-mat-form-field{width:100%}::ng-deep .tooltip-multiple-lines{white-space:pre-line!important}"]}]}],"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":106,"character":40}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"_selectOptions_Unsubscription":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}],"_doTranslation":[{"__symbolic":"method"}],"_findLabel":[{"__symbolic":"method"}],"_setSelectTooltip":[{"__symbolic":"method"}]}},"InputTextComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"input-text","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":32,"character":19},"arguments":["",{"__symbolic":"if","condition":{"__symbolic":"binop","operator":"&&","left":{"__symbolic":"reference","name":"validatorArguments"},"right":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"pattern"}},"thenExpression":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/forms","name":"Validators","line":32,"character":94},"member":"pattern"},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"validatorArguments"},"member":"pattern"}]}],"elseExpression":[]}]}}}},"UrlValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"toString":[{"__symbolic":"method"}]},"statics":{"url_Label":"Url","url_Placeholder":"https://www.google.com/"}},"InputUrlComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"InputControl"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"input-url","host":{"[style.minWidth]":"content.minWidth","[style.width]":"content.width","$quoted$":["[style.minWidth]","[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\">\n<!-- <mat-form-field class=\"text-mat-form-field\" [appearance]=\"content.appearance\" [formGroup]=\"content.parentFormSection\"> -->\n\n    <mat-label>{{ content.label | translate }}</mat-label>\n\n    <input matInput [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" />\n    <!-- <input matInput id=\"inputId-{{ content.name }}\" class=\"input-text-element\" [formControl]=\"content.formControl\" [required]=\"content.required\" [placeholder]=\"content.placeholder | translate\" [style.textAlign]=\"content.textAlign\" [attr.aria-label]=\"content.ariaLabel | translate\" (input)=\"handleInput()\" [formControlName]=\"content.name\" /> -->\n\n    <!-- At the moment of writing this code (2019-08-03), I think that there is an error in `ng-container` or \n        `mat-icon` or something related because I can not put the `mat-icon` tag within an `ng-container` tag \n        because the normal layout of `mat-icon` is modified. This is a contradiction because the `ng-container` \n        does not interfere with styles or layout. -->\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.internal)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix [svgIcon]=\"content.prefixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.prefixIcon && iconSourceState(content.prefixIcon, iconSource.external)\" class=\"text-mat-icon-prefix mat-icon {{ content.appearance }} notranslate\" matPrefix>{{ content.prefixIcon.name }}</mat-icon>\n\n    <!-- Only renders one of these two `mat-icon` or nothing. -->\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.internal)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix [svgIcon]=\"content.suffixIcon.name\"></mat-icon>\n    <mat-icon *ngIf=\"content.suffixIcon && iconSourceState(content.suffixIcon, iconSource.external)\" class=\"text-mat-icon-suffix mat-icon {{ content.appearance }} notranslate\" matSuffix>{{ content.suffixIcon.name }}</mat-icon>\n\n    <span *ngIf=\"content.prefixText\" matPrefix><pre class=\"content.appearance\">{{ content.prefixText }}</pre></span>\n    <span *ngIf=\"content.suffixText\" matSuffix><pre class=\"content.appearance\">{{ content.suffixText }}</pre></span>\n\n    <mat-hint *ngIf=\"hintState && content.startHint\" [align]=\"'start'\">{{ content.startHint.label | translate }}</mat-hint>\n    <mat-hint *ngIf=\"hintState && content.endHint\" [align]=\"'end'\">{{ content.endHint.label | translate }}</mat-hint>\n    <mat-error *ngIf=\"errorState\">\n        <ng-container *ngIf=\"isTranslationBuiltByControl; then thenTemplate_BuildTranslation; else elseTemplate_NotBuildTranslation\"></ng-container>\n\n        <ng-template #thenTemplate_BuildTranslation>{{ getErrorMessage() }}</ng-template>\n\n        <ng-template #elseTemplate_NotBuildTranslation>{{ getErrorMessage() | translate }}</ng-template>\n    </mat-error>\n\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%;cursor:text}.text-mat-icon-prefix{margin-right:8px}.text-mat-icon-prefix.standard{position:relative;top:4px}.text-mat-icon-suffix{margin-left:8px}.text-mat-icon-suffix.standard{position:relative;top:4px}pre{margin:0}pre.outline{position:relative;bottom:4px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]}},"TextInputAppearance":{"standard":"standard","fill":"fill","outline":"outline"},"InputContent":{"__symbolic":"interface"},"IInternalComponent":{"__symbolic":"interface"},"InputControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormFieldControl"},"members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":152,"character":5}}]}],"internalComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":161,"character":2},"arguments":["internalComponent",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"setNewLanguage":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"initValue":[{"__symbolic":"method"}],"handleInput":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}],"handleSpecificInput":[{"__symbolic":"method"}]},"statics":{"getFormControlByDefault":{"__symbolic":"function","parameters":["validatorArguments"],"defaults":[{"__symbolic":"reference","name":"undefined"}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":146,"character":19},"arguments":["",[]]}},"toco_ng_Error_Msg_Requerido":""}},"FormSection":{"__symbolic":"interface"},"ValidatorArguments":{"__symbolic":"interface"},"TextAlign":{"left":"left","center":"center","right":"right","justify":"justify"},"ContentPosition":{"prefix":"matPrefix","suffix":"matSuffix","none":"none"},"IconSource":{"internal":"internal","external":"external"},"IconValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Could not resolve type","line":124,"character":11,"context":{"typeName":"IconSource"},"module":"./lib/forms/form-field.control"},{"__symbolic":"error","message":"Could not resolve type","line":125,"character":11,"context":{"typeName":"ContentPosition"},"module":"./lib/forms/form-field.control"},{"__symbolic":"reference","name":"string"}]}],"setDefaultValueIfUndefined":[{"__symbolic":"method"}],"setDefaultValueIfUndefined_setPosition":[{"__symbolic":"method"}]}},"HintPosition":{"start":"start","end":"end","none":"none"},"HintValue":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Could not resolve type","line":202,"character":11,"context":{"typeName":"HintPosition"},"module":"./lib/forms/form-field.control"},{"__symbolic":"reference","name":"string"}]}],"setDefaultValueIfUndefined":[{"__symbolic":"method"}],"setDefaultValueIfUndefined_setPosition":[{"__symbolic":"method"}]}},"FormFieldType":{"action_button":"action_button","container_panel":"container_panel","container_simple":"container_simple","container_label_diff_lang":"container_label_diff_lang","text":"text","textarea":"textarea","datepicker":"datepicker","checkbox":"checkbox","url":"url","email":"email","identifier":"identifier","issn":"issn","rnps":"rnps","vocabulary":"vocabulary","vocabulary_tree":"toco-vocabulary-tree","term_parent":"term_parent","select":"select","select_expr":"select_expr","select_filter":"select_filter","select_tree":"select_tree"},"FormFieldContent":{"__symbolic":"interface"},"cloneFormControl":{"__symbolic":"function","parameters":["target"],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/forms","name":"FormControl","line":423,"character":15},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"target"},"member":"value"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"target"},"member":"validator"},{"__symbolic":"select","expression":{"__symbolic":"reference","name":"target"},"member":"asyncValidator"}]}},"cloneFormSection":{"__symbolic":"function"},"FormFieldControl":{"__symbolic":"class","members":{"content":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":480,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"setNewLanguage":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"initValue":[{"__symbolic":"method"}],"addAsChildControl":[{"__symbolic":"method"}],"iconPositionState":[{"__symbolic":"method"}],"iconSourceState":[{"__symbolic":"method"}]},"statics":{"currentLang":""}},"HarvesterModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":15,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"RepositoriesComponent"},{"__symbolic":"reference","name":"RepositoryComponent"},{"__symbolic":"reference","name":"HarvesterComponent"},{"__symbolic":"reference","name":"HarvesterFiltersComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":25,"character":8},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"FiltersModule"}],"exports":[{"__symbolic":"reference","name":"RepositoriesComponent"},{"__symbolic":"reference","name":"RepositoryComponent"},{"__symbolic":"reference","name":"HarvesterComponent"},{"__symbolic":"reference","name":"HarvesterFiltersComponent"}],"providers":[{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"HarvesterService"}]}]}],"members":{}},"HarvesterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-harvester","template":"<router-outlet></router-outlet>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"HarvesterFiltersComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FilterContainerComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"toco-harvester-filters-container","template":"<!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\" fxLayoutGap=\"1em\" fxLayoutGap.xs=\"0\"> -->\n\n  <ng-template toco-Filter></ng-template>\n\n<!-- </div> -->\n\n<button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>add</mat-icon>\n</button>\n  <mat-menu #menu=\"matMenu\" >\n    <ng-container *ngFor=\"let item of filters_data,let i=index\">\n        <ng-container *ngIf=\"item.is_enabled\">\n          <button mat-menu-item (click)=\"addFilter(i)\">\n            {{item.name}}\n          </button>\n        </ng-container>\n    </ng-container>\n    \n\n    \n  </mat-menu>","styles":[".width-100{width:100%}.mat-menu-item{height:37px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":13,"character":52},{"__symbolic":"reference","name":"FilterContainerService"},{"__symbolic":"reference","name":"CatalogService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"HarvesterService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":7,"character":37}]}]}},"RepositoriesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"toco-repositories","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":22,"character":8},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":23,"character":12},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":23,"character":31},"arguments":[{"height":"0px","minHeight":"0","display":"none"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":24,"character":12},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":24,"character":30},"arguments":[{"height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":25,"character":12},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":25,"character":49},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}],"template":"<div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n  <button mat-raised-button (click)=\"currentJournals()\">Print Current Fournals</button>\n</div>\n\n\n<div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n\n  <toco-harvester-filters-container fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxFlex=\"{{currentlayout.width}}\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\"\n    fxLayoutGap=\"1em\" class=\"width-90 back-grey mat-elevation-z8\">\n  </toco-harvester-filters-container>\n\n  <div class=\"mat-elevation-z8 width-90 margin1em\">\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Titulo</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.data.title}} </td>\n      </ng-container>\n      <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n          <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <toco-harvester-repository\n              [repostitory]=\"element\"></toco-harvester-repository>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\"\n        (click)=\"expandedElement = element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n    <mat-paginator [length]=\"length\"\n          [pageSize]=\"pageSize\"\n          [pageSizeOptions]=\"pageSizeOptions\"\n          (page)=\"fetchJournalData()\">\n    </mat-paginator>\n  </div>\n\n  <mat-card *ngIf=\"!isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n    <mat-spinner></mat-spinner>\n    <!--<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n  </mat-card>\n\n  <!-- <mat-card *ngIf=\"isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n    <h1>No hay Información para Mostrar</h1>\n  </mat-card> -->\n</div>\n\n","styles":[".width-card{width:30%;min-width:240px;margin-left:24px;margin-top:24px}.card-float-left{float:left}.center-spinner{width:90.5%;min-width:240px;margin-left:24px;margin-right:24px;margin-top:24px}.back-grey{background:rgba(0,0,0,.01);margin:1.5em 1em;padding:1em;min-width:18em}.width-90{width:90%}.width-93{width:93.5%}table{width:90%}.margin1em{margin:1em}.menu-pull-right{flex:1 1 auto}table.mat-table{width:100%}tr.example-detail-row{height:0}tr.example-element-row:not(.example-expanded-row):hover{background:#f5f5f5}tr.example-element-row:not(.example-expanded-row):active{background:#efefef}.example-element-row td{border-bottom-width:0}.example-element-detail{overflow:hidden;display:flex}.example-element-diagram{min-width:80px;border:2px solid #000;padding:8px;font-weight:lighter;margin:8px 0;height:104px}.example-element-symbol{font-weight:700;font-size:40px;line-height:normal}.example-element-description{padding:16px}.example-element-description-attribution{opacity:.5}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"MetadataService"},{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"Environment"}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":58,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator","line":58,"character":15},{"static":true}]}]}],"filter_component":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":61,"character":5},"arguments":[{"__symbolic":"reference","name":"HarvesterFiltersComponent"},{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"fetchJournalData":[{"__symbolic":"method"}],"onScrollUp":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"isLoading":[{"__symbolic":"method"}],"currentJournals":[{"__symbolic":"method"}]}},"RepositoryComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-harvester-repository","template":"<mat-card>\n    <mat-card-header>\n        <mat-card-title>\n            <strong>\n            {{repostitory.source_type}} \n            <!-- {{repostitory.harvest_type}} -->\n            </strong>\n        </mat-card-title>\n        <mat-card-subtitle>\n        <!-- {{repostitory.harvest_endpoint}} -->\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n            Informacion sobre el estado, la cantidad de elementos etc...\n    </mat-card-content>\n    <mat-card-actions>\n        \n        <button mat-fab-button (click)=\"onIdentify()\">Identify</button>\n        <button mat-fab-button (click)=\"onHarvest()\">Harvest</button>\n        <button mat-fab-button (click)=\"onRecord()\">Record</button>\n    </mat-card-actions>\n      \n</mat-card>","styles":[""]}]}],"members":{"repostitory":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onIdentify":[{"__symbolic":"method"}],"onHarvest":[{"__symbolic":"method"}],"onRecord":[{"__symbolic":"method"}]}},"NotificationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":11,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"NotificationButtonComponent"},{"__symbolic":"reference","name":"NotificationListComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":17,"character":8},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":18,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":19,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":20,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":21,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatBadgeModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":23,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatPaginatorModule","line":24,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDividerModule","line":25,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatTooltipModule","line":26,"character":8}],"exports":[{"__symbolic":"reference","name":"NotificationButtonComponent"},{"__symbolic":"reference","name":"NotificationListComponent"}],"providers":[{"__symbolic":"reference","name":"NotificationService"}]}]}],"members":{}},"NotificationListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"lib-notification-list","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":16,"character":8},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":17,"character":12},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":17,"character":31},"arguments":[{"height":"0px","minHeight":"0"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":18,"character":12},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":18,"character":30},"arguments":[{"height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":19,"character":12},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":19,"character":49},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}],"template":"<div [ngStyle]=\"{padding: '2em 1em 0 1em', overflow: 'auto'}\">\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay; let i = index\">\n            <th [id]=\"column+'-th'\" mat-header-cell *matHeaderCellDef> {{columnsLabels[i]}} </th>\n            <td class=\"element-row-header\"\n                mat-cell *matCellDef=\"let element\"\n                [id]=\"column+'-td'\"\n                [class.expanded-row]=\"column === 'description' && expandedElement === element\" (click)=\"expandedElement = element\"\n                [ngStyle]=\"{'font-weight': !element.viewed ? 'bold' : '0', width: column === 'action' ? '50px' : 'inherit'}\"\n            >\n              <ng-container *ngIf=\"column === 'action'\">\n                <button mat-icon-button *ngIf=\"!element.viewed\" color=\"primary\" (click)=\"setnotificationViewed(element.id)\" matTooltip=\"Marcar como visto\">\n                  <mat-icon class=\"mat-16\">visibility</mat-icon>\n                </button>\n                <button mat-icon-button *ngIf=\"element.viewed\" disabled color=\"primary\" (click)=\"setnotificationViewed(element.id)\" matTooltip=\"Visto\">\n                  <mat-icon class=\"mat-16\">viewed</mat-icon>\n                </button>\n              </ng-container>\n\n              <span *ngIf=\"column === 'createdAt' \" > {{moment(element[column]).format('ll')}} </span>\n              <div class=\"element-tag\" [ngStyle]=\"{'background-color': element['classification'].color}\" *ngIf=\"column === 'classification'\" > {{element[column].label}} </div>\n              <span *ngIf=\"column === 'emiter'\" > {{element[column].name}} {{element[column].lastname}} </span>\n              <span *ngIf=\"column === 'emiterEmail'\" > {{element['emiter'].email}} </span>\n              <div  *ngIf=\"column === 'description'\" class=\"element-description-header\" >\n                <mat-icon class=\"mat-16\" color=\"primary\" >{{expandedElement === element ? 'expand_more' : 'chevron_right'}}</mat-icon>\n                {{(element[column].length && element[column].length>70) ?\n                   (element[column] | slice:0:70)+' ...'\n                   :(element[column])\n                }}\n              </div>\n            </td>\n            <td mat-cell *matCellDef=\"let element\">\n            </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"element-detail\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\"  fxLayoutGap=\"15px\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n\n                    <div class=\"element-description\">\n                        {{element.description}}\n                    </div>\n\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n            >\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n    </table>\n    <div *ngIf=\"paginator.length === 0\" class=\"empty-notifications-container\">\n      <mat-icon class=\"empty-notifications-icon\">notifications</mat-icon>\n      <h1 style=\"color: grey;\">SIN NOTIFICACIONES</h1>\n    </div>\n    <mat-paginator [length]=\"paginator.length\" [pageSize]=\"paginator.pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"getNotificationsListData()\">\n    </mat-paginator>\n</div>\n","styles":["table{width:100%}tr.detail-row{height:0}tr.element-row:not(.expanded-row):hover{background:#f4f4f4}tr.element-row:not(.expanded-row):active{background:#efefef}.element-row td{border-bottom-width:0}.element-detail{overflow:hidden;display:flex;background-color:#f4f4f4;border-radius:10px 10px 0 0}.element-tag{display:flex;justify-content:center;padding:6px;border-radius:15px;width:60%}.element-description-header{display:flex;align-items:center;cursor:pointer;padding:10px 25px 10px 10px}.element-description{padding:16px}.element-description-attribution{opacity:.5}.empty-notifications-container{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:30px}.empty-notifications-icon{color:grey;font-size:6em;height:100px;width:100px}@media only screen and (max-width:768px){#description-th{padding-left:34px!important}#emiter-td,#emiter-th{display:none!important}#createdAt-th,#emiterEmail-td,#emiterEmail-th{padding-left:20px!important}#createdAt-td{min-width:120px!important;padding-left:20px!important}}"]}]}],"members":{"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":34,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatPaginator","line":34,"character":15},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NotificationService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":36,"character":73}]}],"ngOnInit":[{"__symbolic":"method"}],"getNotificationsListData":[{"__symbolic":"method"}],"setnotificationViewed":[{"__symbolic":"method"}]}},"NotificationButtonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"toco-notification-button","template":"<ng-container [ngSwitch]=\"buttonType\">\n\n    <button *ngSwitchCase=\"'mat-icon-button'\" mat-icon-button [matBadge]=\"notificationsCount()\" matBadgeColor=\"accent\" [matMenuTriggerFor]=\"notificationsMenu\" matTooltip=\"Notificaciones\">\n        <mat-icon>notifications</mat-icon>\n    </button>\n\n    <button *ngSwitchCase=\"'mat-button'\" mat-button color=\"{{color}}\" [matBadge]=\"notificationsCount()\" matBadgeColor=\"accent\" [matMenuTriggerFor]=\"notificationsMenu\" matTooltip=\"Notificaciones\">\n        <mat-icon>notifications</mat-icon>\n    </button>\n\n    <button *ngSwitchDefault mat-mini-fab color=\"{{color}}\" [matBadge]=\"notificationsCount()\" matBadgeColor=\"accent\" [matMenuTriggerFor]=\"notificationsMenu\" matTooltip=\"Notificaciones\">\n        <mat-icon>notifications</mat-icon>\n    </button>\n</ng-container>\n\n<mat-menu #notificationsMenu=\"matMenu\" style=\"max-width: 400px !important;\">\n  <button class=\"notification-item\" mat-menu-item *ngFor=\"let notification of notifications\">\n    <div class=\"notification-container\" [ngStyle]=\"{'border-left-color': notification.classification.color}\">\n      <div class=\"notification-header\">\n        <span>{{notification.emiter.name}} {{notification.emiter.lastname}}</span>\n        <span>{{moment(notification.createdAt).startOf('day').fromNow()}}</span>\n      </div>\n      <span class=\"notification-description\">\n        {{(notification.description.length>135) ?\n          (notification.description | slice:0:135)+' ...'\n          :(notification.description)\n        }}\n      </span>\n    </div>\n  </button>\n  <div *ngIf=\"count === 0\" class=\"empty-notifications-container\">\n    <mat-icon class=\"empty-notifications-icon\">notifications</mat-icon>\n    <h1 style=\"color: gray; font-size: 25px\">SIN NOTIFICACIONES</h1>\n  </div>\n    <mat-divider></mat-divider>\n    <a [routerLink]=\"['/notifications']\" style=\"text-decoration: none;\">\n        <button mat-menu-item style=\"text-align: center;\" color=\"accent\">\n            Ver todas\n        </button>\n    </a>\n</mat-menu>\n","styles":[".notification-item{height:100%;border-bottom:1px solid #f5f5f5;padding-left:0}.notification-container{display:flex;flex-direction:column;justify-content:flex-start;padding-left:10px;padding-bottom:10px;border-left:10px solid}.notification-header{display:flex;justify-content:space-between;margin-bottom:-5px;font-size:12px;color:gray}.notification-description{line-height:20px;white-space:pre-wrap;font-size:15px}.empty-notifications-container{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:30px}.empty-notifications-icon{color:grey;font-size:4.5em;height:70px;width:70px}::ng-deep.mat-menu-panel{max-width:400px!important}"]}]}],"members":{"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"buttonType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NotificationService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":67,"character":73},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":67,"character":108}]}],"ngOnInit":[{"__symbolic":"method"}],"notificationsCount":[{"__symbolic":"method"}]}},"NotificationInfo":{"__symbolic":"class","members":{}},"OrganizationsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":27,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"OrgViewComponent"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"OrgEditComponent"},{"__symbolic":"reference","name":"OrgAddComponent"},{"__symbolic":"reference","name":"OrgSearchComponent"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"OrgTreeViewerComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":44,"character":2},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":45,"character":2},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":46,"character":2},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":47,"character":2},{"__symbolic":"reference","name":"AngularMaterialModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":50,"character":2},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":51,"character":2},{"__symbolic":"reference","name":"TocoFormsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatAutocompleteModule","line":53,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule","line":54,"character":2},{"__symbolic":"reference","name":"StaticsModule"}],"exports":[{"__symbolic":"reference","name":"OrgViewComponent"},{"__symbolic":"reference","name":"OrgEditComponent"},{"__symbolic":"reference","name":"OrgAddComponent"},{"__symbolic":"reference","name":"OrgSearchComponent"},{"__symbolic":"reference","name":"OrgTreeViewerComponent"}],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":67,"character":8}]}]}],"members":{}},"OrgAddComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"toco-org-add","template":"\n<container-panel [content]=\"panelContent\"></container-panel>\n\n<h3>Add the rest of <span [ngStyle]=\"{ 'color': 'red' }\">readonly</span> content to `panelContent.formSectionContent` field!</h3>\n\n<div [ngStyle]=\"{'margin': '1em 0 1em 0'}\">\n    <button mat-raised-button color=\"primary\" (click)=\"doOperationAction(operationAction.cancel)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"isSubmitActionDisabled\" (click)=\"doOperationAction(operationAction.submit)\">Submit</button>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":35,"character":37},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":35,"character":70}]}],"ngOnInit":[{"__symbolic":"method"}],"_initPanelContent":[{"__symbolic":"method"}],"doOperationAction":[{"__symbolic":"method"}]}},"OrgEditComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"toco-org-edit","template":"\n<container-panel [content]=\"panelContent\"></container-panel>\n<!-- <test-container-control></test-container-control> -->\n\n<!-- <container-panel [content]=\"addressesPanelContent\"></container-panel> -->\n<!-- <br /> -->\n<!-- <container-simple [content]=\"labelsSimpleContent\"></container-simple> -->\n\n<div [ngStyle]=\"{'margin': '1em 0 1em 0'}\">\n    <button mat-raised-button color=\"primary\" (click)=\"doOperationAction(operationAction.cancel)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"isResetActionDisabled\" (click)=\"doOperationAction(operationAction.reset)\">Reset</button>\n    <button mat-raised-button color=\"primary\" (click)=\"doOperationAction(operationAction.delete)\">Delete</button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"isSubmitActionDisabled\" (click)=\"doOperationAction(operationAction.submit)\">Submit</button>\n</div>\n","styles":[""]}]}],"members":{"org":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":40,"character":37},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":40,"character":70}]}],"ngOnInit":[{"__symbolic":"method"}],"_initPanelContent":[{"__symbolic":"method"}],"_initIdentifiersContent":[{"__symbolic":"method"}],"_initLabelsSimpleContent":[{"__symbolic":"method"}],"_initRelationshipsSimpleContent":[{"__symbolic":"method"}],"_initAddressesSimpleContent":[{"__symbolic":"method"}],"_initRemoveButtonContent":[{"__symbolic":"method"}],"doOperationAction":[{"__symbolic":"method"}]}},"OrgSearchComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"toco-org-search","template":"\n<mat-form-field [ngStyle]=\"{'width': '100%'}\" appearance=\"{{appearance}}\">\n    <mat-label>{{label}}</mat-label>\n    <input matInput placeholder=\"{{placeholder}}\" aria-label=\"Buscar\" [matAutocomplete]=\"auto\" [formControl]=\"orgCtrl\">\n\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n\n        <mat-option *ngFor=\"let org of filteredOrg.hits\" [value]=\"org.metadata\">\n            <span title=\"{{org.metadata.name}}\">{{org.metadata.name}}</span>\n        </mat-option>\n\n    </mat-autocomplete>\n  </mat-form-field>","styles":[""]}]}],"members":{"orgCtrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"orgFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":34,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"cleaning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"selectedOrg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"displayFn":[{"__symbolic":"method"}]}},"OrganizationFlatNode":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Hit"},{"__symbolic":"reference","name":"OrganizationFlatNode"},null,null,null]}]}},"OrganizationDataSource":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":20,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FlatTreeControl","module":"@angular/cdk/tree","arguments":[{"__symbolic":"reference","name":"OrganizationFlatNode"}]},{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"connect":[{"__symbolic":"method"}],"handleTreeControl":[{"__symbolic":"method"}],"toggleNode":[{"__symbolic":"method"}]}},"OrgTreeViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":98,"character":1},"arguments":[{"selector":"toco-org-tree-viewer","template":"<mat-tree\n  [dataSource]=\"dataSource\"\n  [treeControl]=\"treeControl\"\n  [ngStyle]=\"ngStyle\"\n>\n  <mat-tree-node\n    *matTreeNodeDef=\"let node\"\n    matTreeNodePadding\n  >\n    <button mat-icon-button disabled></button>\n    {{ node.item.metadata.name }}\n    <button\n        mat-icon-button\n        matTooltip=\"labelAction\"\n        (click)=\"emitAction(node)\"\n      >\n        <mat-icon>{{iconAction}}</mat-icon>\n      </button>\n  </mat-tree-node>\n  <mat-tree-node\n    *matTreeNodeDef=\"let node; when: hasChild\"\n    matTreeNodePadding\n  >\n    <button\n      mat-icon-button\n      [attr.aria-label]=\"'toggle ' + node.filename\"\n      matTreeNodeToggle\n    >\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{ treeControl.isExpanded(node) ? \"expand_more\" : \"chevron_right\" }}\n      </mat-icon>\n    </button>\n    {{ node.item.metadata.name }}\n    <button\n        mat-icon-button\n        matTooltip=\"labelAction\"\n        (click)=\"emitAction(node)\"\n      >\n        <mat-icon>{{iconAction}}</mat-icon>\n      </button>\n    <mat-progress-bar\n      *ngIf=\"node.isLoading\"\n      mode=\"indeterminate\"\n      class=\"example-tree-progress-bar\"\n    ></mat-progress-bar>\n  </mat-tree-node>\n</mat-tree>\n","styles":[""]}]}],"members":{"organizations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":105,"character":3}}]}],"orgRelationshipType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":3}}]}],"iconAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":109,"character":3}}]}],"labelAction":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":111,"character":3}}]}],"ngStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":113,"character":3}}]}],"action":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":115,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"emitAction":[{"__symbolic":"method"}]}},"RelationshipLink":{"__symbolic":"interface"},"RelationshipsValue":{"__symbolic":"interface"},"OrgViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"toco-org-view","template":"\n<mat-card *ngIf=\"org\" class=\"container-panel-mat-card\" [attr.aria-label]=\"'Muestra la organización seleccionada'\">\n  <mat-card-header>\n\n    <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n    <mat-card-title class=\"title-padding\">{{ org.name }}</mat-card-title>\n    <mat-card-subtitle class=\"title-padding\">SceibaOrgID: {{ org.id }}</mat-card-subtitle>\n    <mat-card-subtitle *ngIf=\"org.status\" class=\"cursor-default title-padding\">\n      Estatus de la organización: {{ org.status }}\n    </mat-card-subtitle>\n\n  </mat-card-header>\n\n  <mat-card-content *ngIf=\"showContent\">\n\n    <static-table *ngIf=\"org.identifiers && org.identifiers.length\" [desc]=\"'Lista de los identificadores de la organización'\" [value]=\"org.identifiers\"\n      [columnsObjectProperty]=\"['idtype', 'value']\"\n      [columnsHeaderText]=\"['Identifier type', 'Identifier value']\"\n    >\n    </static-table>\n    <static-chips *ngIf=\"org.aliases && org.aliases.length\" [desc]=\"'Lista de otros nombres con los que se conoce la organización'\" [value]=\"org.aliases\"></static-chips>\n    <static-chips *ngIf=\"org.acronyms && org.acronyms.length\" [desc]=\"'Lista de los acrónimos con que se conoce la organización'\" [value]=\"org.acronyms\"></static-chips>\n    <static-chips *ngIf=\"org.types && org.types.length\" [desc]=\"'Lista de los tipos que describen la organización'\" [value]=\"org.types\"></static-chips>\n    <static-text *ngIf=\"org.wikipedia_url\" [desc]=\"'URL de la página de Wikipedia de la organización'\" [value]=\"org.wikipedia_url\"></static-text>\n    <static-text *ngIf=\"org.redirect\" [desc]=\"'URL de la página originaria de la organización'\" [value]=\"org.redirect.properties.value\"></static-text>\n    <static-text *ngIf=\"org.email_address\" [desc]=\"'Correo electrónico de contacto de la organización'\" [value]=\"org.email_address\"></static-text>\n    <!-- <static-chips *ngIf=\"org.ip_addresses && org.ip_addresses.length\" [desc]=\"'Lista de direcciones IP conocidas que pertenecen a la organización'\" [value]=\"org.ip_addresses\"></static-chips> -->\n    <static-text *ngIf=\"org.established\" [desc]=\"'Año de fundada la organización'\" [value]=\"org.established\"></static-text>\n    <static-text *ngIf=\"org.onei_registry\" [desc]=\"'Número de registro en la ONEI'\" [value]=\"org.onei_registry\"></static-text>\n    <static-chips *ngIf=\"org.links && org.links.length\" [desc]=\"'Lista de los enlaces conocidos de la organización'\" [value]=\"org.links\"></static-chips>\n    <static-table *ngIf=\"org.labels && org.labels.length\" [desc]=\"'Nombre de la organización en diferentes lenguajes'\" [value]=\"org.labels\"\n      [columnsObjectProperty]=\"['label', 'iso639']\"\n      [columnsHeaderText]=\"['Institute name in a language variant', 'ISO-639-1 language code']\"\n    >\n    </static-table>\n    <toco-org-view-accordion *ngIf=\"org.relationships && org.relationships.length\" [desc]=\"'Relaciones con otras organizaciones'\" [value]=\"getValue_Relationships\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Relationships\"\n      [panelsTitle] = \"getPanelsTitle_Relationships\"\n    >\n    </toco-org-view-accordion>\n    <toco-org-view-accordion *ngIf=\"org.addresses && org.addresses.length\" [desc]=\"'Direcciones conocidas de la organización'\" [value]=\"getValue_Addresses\"\n      [orgViewAccordionType]=\"orgViewAccordionType.Addresses\"\n      [panelsTitle] = \"getPanelsTitle_Addresses\"\n    >\n    </toco-org-view-accordion>\n\n  </mat-card-content>\n</mat-card>\n","styles":[".cursor-default{cursor:default}.title-padding{padding:0 0 0 .1em}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover}.form-container{display:flex;flex-direction:column;justify-content:start;width:40%}"]}]}],"members":{"org":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"showContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"_createPanelsTitle_Generic":[{"__symbolic":"method"}],"_createPanelsTitle_Addresses":[{"__symbolic":"method"}],"_createRelationshipsValue":[{"__symbolic":"method"}],"_createAddressesValue":[{"__symbolic":"method"}]}},"PersonModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":7,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"PersonComponent"},{"__symbolic":"reference","name":"PersonViewComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"}],"exports":[{"__symbolic":"reference","name":"PersonComponent"},{"__symbolic":"reference","name":"PersonViewComponent"}]}]}],"members":{}},"PersonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-person","template":"<p>\n  person works!\n</p>\n<!-- <router-outlet></router-outlet> -->","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"PersonViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-person-view","template":"<p>\n  person-view works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"SearchModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":13,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"RecordComponent"},{"__symbolic":"reference","name":"AggregationsComponent"},{"__symbolic":"reference","name":"QueryInputComponent"},{"__symbolic":"reference","name":"RecordListComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":22,"character":4},{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":24,"character":4},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":25,"character":4},{"__symbolic":"reference","name":"SharedModule"}],"exports":[{"__symbolic":"reference","name":"RecordComponent"},{"__symbolic":"reference","name":"AggregationsComponent"},{"__symbolic":"reference","name":"QueryInputComponent"},{"__symbolic":"reference","name":"RecordListComponent"}]}]}],"members":{}},"AggregationsSelection":{"__symbolic":"interface"},"AggregationsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"toco-search-aggregations","template":"<ng-container *ngFor=\"let key of keys\">\n  <mat-card *ngIf=\"aggregations[key.key].buckets.length != 0\" class=\"m-1\">\n    <mat-card-header>\n      <mat-card-title class=\"text-capitalize\">{{ key.sp }} </mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxLayout=\"column\">\n      <mat-checkbox\n        *ngFor=\"let bucket of aggregations[key.key].buckets\"\n        [checked]=\"isSelected(key.key, bucket)\"\n        (change)=\"selectionChange(key.key, bucket)\"\n        class=\"text-capitalize\"\n      >\n        {{ bucket.key }} ({{ bucket.doc_count }})\n      </mat-checkbox>\n    </mat-card-content>\n  </mat-card>\n</ng-container>\n","styles":[".m-1{margin:1em}.text-capitalize{text-transform:capitalize!important}"]}]}],"members":{"aggregations":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"selectedAggr":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"keySelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"_translate":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"selectionChange":[{"__symbolic":"method"}]}},"QueryInputComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"toco-search-query-input","template":"<div fxLayout=\"row\" [ngStyle]=\"{'align-items': 'center', 'width.%': width }\">\n    \n    <mat-form-field *ngIf=\"appearance == 'outline';else templateMatFormField\" appearance=\"{{appearance}}\" [color]=\"inputColor\" class=\"query-input\" [ngStyle]=\"{'width.%': 100 }\">\n        <mat-label>{{ 'TOCO_SEARCH_QUERY_INPUT.INPUT_SEARCH_LABEL' | translate }}</mat-label>\n        <input matInput placeholder=\"{{ 'TOCO_SEARCH_QUERY_INPUT.INPUT_SEARCH_PLACEHOLDER' | translate }}\" type=\"search\" [value]=\"query\" [formControl]=\"queryCtrl\" (keyup.enter)= \"riseQuery()\">\n    </mat-form-field>\n    \n    <ng-template #templateMatFormField>\n        <mat-form-field [ngStyle]=\"{'width.%': width }\">\n            <mat-label>{{ 'TOCO_SEARCH_QUERY_INPUT.INPUT_SEARCH_LABEL' | translate }}</mat-label>\n            <input matInput placeholder=\"{{ 'TOCO_SEARCH_QUERY_INPUT.INPUT_SEARCH_PLACEHOLDER' | translate }}\" type=\"search\" [value]=\"query\" [formControl]=\"queryCtrl\" (keyup.enter)= \"riseQuery()\">\n        </mat-form-field>\n    </ng-template>\n    \n    <button mat-raised-button *ngIf=\"showButton && appearance == 'outline'\" (click)=\"riseQuery()\" color=\"{{buttonColor}}\" [ngStyle]=\"{'height': '59.5px', 'margin-left': '1em'}\">{{ 'TOCO_SEARCH_QUERY_INPUT.BUTTON_SEARCH' | translate }}</button>\n    <button mat-raised-button *ngIf=\"showButton && appearance != 'outline'\" (click)=\"riseQuery()\" color=\"{{buttonColor}}\" [ngStyle]=\"{'margin-left': '1em'}\">{{ 'TOCO_SEARCH_QUERY_INPUT.BUTTON_SEARCH' | translate }}</button>\n\n</div>\n","styles":[""]}]}],"members":{"query":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"minWordCount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"inputColor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"buttonColor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":3}}]}],"showButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3}}]}],"queryChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":57,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"riseQuery":[{"__symbolic":"method"}]}},"RecordComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-record","template":"<mat-card *ngIf=\"record\">\n    <mat-card-header>\n        <mat-card-title>{{record.title}}</mat-card-title>\n        <mat-card-subtitle>{{record.source_repo}}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n        {{record.description}}\n    </mat-card-content>\n    <mat-card-actions>\n        <mat-chip-list>\n            <mat-chip *ngFor=\"let keyword of record.keywords\">{{keyword}}</mat-chip>\n        </mat-chip-list>\n    </mat-card-actions>\n</mat-card>\n<mat-divider>\n</mat-divider>\n","styles":[""]}]}],"members":{"record":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"RecordListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"toco-record-list","template":"\n<div *ngIf=\"hitList\">\n    <div *ngFor=\"let hit of hitList.hits\">\n        <toco-record [record]=\"hit.metadata\"></toco-record>\n    </div>\n\n</div>\n","styles":[""]}]}],"members":{"hitList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"QueryParamKey":{"lang":"lang","size":"size","page":"page","q":"q","aggrsSel":"aggrsSel"},"SharedModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"declarations":[],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":17,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":18,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":19,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":20,"character":8},{"__symbolic":"reference","name":"AngularMaterialModule"}],"exports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":25,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":26,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":28,"character":8},{"__symbolic":"reference","name":"AngularMaterialModule"}],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":33,"character":8}]}]}],"members":{}},"SourcesModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":30,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"JournalViewComponent"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"JournalEditComponent"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"CatalogComponent"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"SourcesListComponent"},{"__symbolic":"reference","name":"DialogCatalogJournalInfoDialog"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵn"}],"entryComponents":[{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"DialogCatalogJournalInfoDialog"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵl"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","name":"CoreModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":58,"character":8},{"__symbolic":"reference","name":"TocoFormsModule"},{"__symbolic":"reference","name":"OrganizationsModule"}],"exports":[{"__symbolic":"reference","name":"JournalViewComponent"},{"__symbolic":"reference","name":"JournalEditComponent"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"CatalogComponent"},{"__symbolic":"reference","name":"SourcesListComponent"}],"providers":[{"__symbolic":"reference","name":"SourceService"},{"__symbolic":"reference","name":"TaxonomyService"},{"provide":{"__symbolic":"reference","module":"@angular/cdk/stepper","name":"STEPPER_GLOBAL_OPTIONS","line":75,"character":21},"useValue":{"displayDefaultIndicatorType":false}}]}]}],"members":{}},"JournalEditComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"toco-journal-edit","template":"<mat-card [ngStyle]=\"{ margin: '1em' }\">\n  <mat-card-header\n    *ngIf=\"showEditHeader\"\n    fxLayout=\"column wrap\"\n    fxLayoutAlign=\"start center\"\n  >\n    <div\n      fxLayout=\"row wrap\"\n      fxLayoutAlign=\"space-between center\"\n      [ngStyle]=\"{ width: '100%' }\"\n    >\n      <h2>\n        {{ pageTitle }}\n      </h2>\n      <button mat-stroked-button color=\"warn\" (click)=\"cancelStepper()\">\n        Cancelar\n      </button>\n    </div>\n    <mat-card-subtitle>{{ description }}</mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-card-content>\n    <mat-horizontal-stepper labelPosition=\"end\" [linear]=\"true\" #stepper>\n      <mat-step *ngIf=\"identifiersPanel\" [stepControl]=\"identifiersFormGroup\">\n        <ng-template matStepLabel>Identificadores</ng-template>\n        <form [formGroup]=\"identifiersFormGroup\">\n          <container-panel\n            [content]=\"identifiersPanel\"\n          >\n          </container-panel>\n          <!-- <toco-form-container\n            #informationPanelContainer\n            [panelsContent]=\"identifiersPanel\"\n            [useAccordion]=\"false\"\n            fxLayout=\"row\"\n            [formGroup]=\"identifiersFormGroup\"\n            [deleteValuesAfterAction]=\"false\"\n          >\n          </toco-form-container> -->\n        </form>\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"end center\">\n          <button mat-stroked-button color=\"primary\" matStepperNext>\n            Siguiente\n          </button>\n        </div>\n      </mat-step>\n\n      <mat-step\n        *ngIf=\"organizationFormGroup\"\n        [stepControl]=\"organizationFormGroup\"\n      >\n        <ng-template matStepLabel>Organizaciones</ng-template>\n        <h2>Organizaciones</h2>\n        <form [formGroup]=\"organizationFormGroup\">\n          <toco-source-organizations\n            [topMainOrganization]=\"topMainOrganization\"\n            [sourceData]=\"journalData\"\n          >\n          </toco-source-organizations>\n        </form>\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n          <button mat-stroked-button color=\"accent\" matStepperPrevious>\n            Atrás\n          </button>\n          <button mat-stroked-button color=\"primary\" matStepperNext>\n            Siguiente\n          </button>\n        </div>\n      </mat-step>\n\n      <mat-step *ngIf=\"informationPanel\" [stepControl]=\"informationFormGroup\">\n        <ng-template matStepLabel>Datos</ng-template>\n        <form [formGroup]=\"informationFormGroup\">\n          <container-panel\n            [content]=\"informationPanel\"\n          >\n          </container-panel>\n          <!-- <toco-form-container\n            #informationPanelContainer\n            [panelsContent]=\"informationPanel\"\n            [useAccordion]=\"false\"\n            fxLayout=\"row\"\n            [formGroup]=\"informationFormGroup\"\n            [deleteValuesAfterAction]=\"false\"\n          >\n          </toco-form-container> -->\n        </form>\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n          <button mat-stroked-button color=\"accent\" matStepperPrevious>\n            Atrás\n          </button>\n          <button mat-stroked-button color=\"primary\" matStepperNext>\n            Siguiente\n          </button>\n        </div>\n      </mat-step>\n\n      <mat-step *ngIf=\"indexesFormGroup\" [stepControl]=\"indexesFormGroup\">\n        <ng-template matStepLabel>Indizaciones</ng-template>\n        <h2>Indizaciones</h2>\n        <toco-source-indexes [sourceData]=\"journalData\"> </toco-source-indexes>\n\n        <div\n          *ngIf=\"showFinalStep\"\n          fxLayout=\"row wrap\"\n          fxLayoutAlign=\"space-between center\"\n        >\n          <button mat-stroked-button color=\"accent\" matStepperPrevious>\n            Atrás\n          </button>\n          <button\n            mat-stroked-button\n            color=\"primary\"\n            matStepperNext\n            (click)=\"indexerStepper()\"\n          >\n            Siguiente\n          </button>\n        </div>\n        <div\n          *ngIf=\"!showFinalStep\"\n          fxLayout=\"row wrap\"\n          fxLayoutAlign=\"space-between center\"\n        >\n          <button mat-stroked-button color=\"accent\" matStepperPrevious>\n            Atrás\n          </button>\n\n          <button mat-stroked-button color=\"primary\" (click)=\"finishStepper()\">\n            Aceptar\n          </button>\n        </div>\n      </mat-step>\n\n      <mat-step *ngIf=\"showFinalStep\">\n        <ng-template matStepLabel>Fin</ng-template>\n        <h3>Ha completado el formulario</h3>\n        <h4>\n          Antes de aceptar puede revisar nuevamente los valores que ha\n          introducido.\n        </h4>\n        <!-- <toco-journal-view-info [journal]=\"journal\"></toco-journal-view-info> -->\n\n        <form [formGroup]=\"finalFormGroup\">\n          <container-panel\n            [content]=\"finalPanel\"\n          >\n          </container-panel>\n          <!-- <toco-form-container\n            #indexPanelContainer\n            [panelsContent]=\"finalPanel\"\n            [useAccordion]=\"false\"\n            fxLayout=\"row\"\n            [formGroup]=\"finalFormGroup\"\n            [deleteValuesAfterAction]=\"false\"\n            [ngStyle]=\"{ width: '100%' }\"\n          >\n          </toco-form-container> -->\n        </form>\n\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\n          <button mat-stroked-button color=\"accent\" matStepperPrevious>\n            Atrás\n          </button>\n\n          <button mat-stroked-button color=\"primary\" (click)=\"finishStepper()\">\n            Aceptar\n          </button>\n        </div>\n      </mat-step>\n    </mat-horizontal-stepper>\n  </mat-card-content>\n</mat-card>\n","styles":[""]}]}],"members":{"journalVersion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"showEditHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"description":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"topMainOrganization":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"showFinalStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"journalEditDone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":69,"character":3}}]}],"editCanceled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":72,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MetadataService"},{"__symbolic":"reference","name":"SourceService"},{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":80,"character":21},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":81,"character":25}]}],"ngOnInit":[{"__symbolic":"method"}],"resetStepper":[{"__symbolic":"method"}],"initStep0Identifiers":[{"__symbolic":"method"}],"initStep1":[{"__symbolic":"method"}],"initStep2":[{"__symbolic":"method"}],"initStep3":[{"__symbolic":"method"}],"indexerStepper":[{"__symbolic":"method"}],"initStepFinal":[{"__symbolic":"method"}],"fillJournalFields":[{"__symbolic":"method"}],"finishStepper":[{"__symbolic":"method"}],"cancelStepper":[{"__symbolic":"method"}]}},"JournalDataType":{"default":0,"title":1,"subtitle":2,"shortname":3,"issnP":4,"issnE":5,"issnL":6,"rnpsP":7,"rnpsE":21,"url":8,"email":9,"logo":10,"purpose":11,"start_year":12,"end_year":13,"frequency":14,"seriadas_cubanas":15,"facebook":16,"twitter":17,"linkedin":18,"description":19,"term":20,"oaiurl":22},"JournalViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"toco-journal-view","template":"<div *ngIf=\"editingJournal != undefined\" fxLayout=\"row wrap\" style=\"margin: 1em\">\n  <!-- navigate buttons -->\n  <mat-toolbar>\n    <mat-toolbar-row fxLayoutGap=\"1em\" fxLayoutAlign=\"end center\">\n      <!-- <mat-slide-toggle\n        (change)=\"editVersion = !editVersion\"\n        color=\"primary\"\n        matTooltip=\"Vista Edicion\"\n    >\n    </mat-slide-toggle>\n\n      <mat-slide-toggle\n        *ngIf=\"!editVersion\"\n        (change)=\"showVersions = !showVersions\"\n        color=\"accent\"\n        matTooltip=\"Ver Revisiones\"\n      >\n      </mat-slide-toggle> -->\n\n      <button\n        *ngIf=\"!editVersion\"\n        mat-icon-button\n        aria-label=\"Editar la Revisión actual\"\n        matTooltip=\"Editar la Revisión actual\"\n        (click)=\"editVersion = !editVersion\"\n      >\n        <mat-icon>edit</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"editVersion\"\n        mat-icon-button\n        aria-label=\"Vista Revisiones\"\n        matTooltip=\"Vista Revisiones\"\n        (click)=\"editVersion = !editVersion\"\n      >\n        <mat-icon>visibility</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"!editVersion && !showVersions\"\n        mat-icon-button\n        aria-label=\"Ver Revisiones\"\n        matTooltip=\"Ver Revisiones\"\n        (click)=\"showVersions = !showVersions\"\n      >\n        <mat-icon>history</mat-icon>\n      </button>\n\n      <button\n        *ngIf=\"!editVersion && showVersions\"\n        mat-icon-button\n        aria-label=\"Ocultar Revisiones\"\n        matTooltip=\"Ocultar Revisiones\"\n        (click)=\"showVersions = !showVersions\"\n      >\n        <mat-icon>history</mat-icon>\n      </button>\n\n      <div *ngIf=\"!editVersion && showVersions\">\n        <button\n          mat-icon-button\n          aria-label=\"Previous version\"\n          [disabled]=\"isDisabledNavigatePrevious\"\n          matTooltip=\"Revisión Anterior\"\n          (click)=\"previousVersion()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Next version\"\n          [disabled]=\"isDisabledNavigateNext\"\n          matTooltip=\"Revisión Siguiente\"\n          (click)=\"nextVersion()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <ng-container *ngIf=\"versions != undefined\">\n    <toco-journal-edit\n      *ngIf=\"editVersion\"\n      [journalVersion]=\"editingJournal\"\n      (journalEditDone)=\"sourceEditDone($event)\"\n      [showEditHeader]=\"false\"\n      [showFinalStep]=\"false\"\n      [topMainOrganization]=\"topMainOrganization\"\n    >\n    </toco-journal-edit>\n    <toco-journal-view-info\n      *ngIf=\"!editVersion && !showVersions\"\n      [journalVersion]=\"editingJournal\"\n      fxFlex=\"1 2 calc(15em + 20px)\"\n      style=\"margin: 0.5em\"\n    >\n    </toco-journal-view-info>\n    <ng-container *ngIf=\"!editVersion && showVersions\">\n      <toco-journal-view-info\n        #journalViewInfo\n        [journalVersion]=\"editingJournal\"\n        fxFlex=\"1 2 calc(15em + 20px)\"\n        style=\"margin: 0.5em\"\n      >\n      </toco-journal-view-info>\n\n      <toco-journal-view-version\n        #versionsPanel\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"selectedJournal\"\n        (editingJournalChange)=\"\n          journalViewInfo.editingJournalChange(editingJournal)\n        \"\n        fxFlex=\"1 2 calc(15em + 20px)\"\n        style=\"margin: 0.5em\"\n      ></toco-journal-view-version>\n    </ng-container>\n  </ng-container>\n\n  <mat-card *ngIf=\"versions == undefined\" style=\"margin: 1em\">\n    <mat-card-content>\n      <h1>Este componente necesita las revisiones de la revista.</h1>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<mat-card *ngIf=\"editingJournal == undefined\" style=\"margin: 1em\">\n  <mat-card-content>\n    <h1>No se encontró la información solicitada</h1>\n  </mat-card-content>\n</mat-card>\n","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"topMainOrganization":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"editingJournal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":5}}]}],"versions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MetadataService"},{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":127,"character":27},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":128,"character":23}]}],"ngOnInit":[{"__symbolic":"method"}],"nextVersion":[{"__symbolic":"method"}],"previousVersion":[{"__symbolic":"method"}],"SelectJournalVersion":[{"__symbolic":"method"}],"getSelectedJournalPosition":[{"__symbolic":"method"}],"sourceEditDone":[{"__symbolic":"method"}],"toogleShowVersions":[{"__symbolic":"method"}]}},"CatalogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"toco-catalog","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":30,"character":4},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":31,"character":6},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":31,"character":25},"arguments":[{"height":"0px","minHeight":"0","display":"none"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":32,"character":6},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":32,"character":24},"arguments":[{"height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":33,"character":6},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":33,"character":43},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}],"template":"<!-- <div infiniteScroll [infiniteScrollDistance]=\"0\" [infiniteScrollUpDistance]=\"0.5\" [infiniteScrollThrottle]=\"10\" (scrolled)=\"onScrollDown()\"\n  (scrolledUp)=\"onScrollUp()\"> -->\n\n<!-- <toco-page-header [info]=\"['Catálogo de Revistas Científicas Cubanas']\">\n    </toco-page-header> -->\n<div fxLayoutAlign=\"end center\" fxLayout=\"row\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>view_quilt</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"changeLayoutPosition(0)\">\n            <mat-icon>arrow_forward</mat-icon>\n            <span>{{layoutPosition[0].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(1)\">\n            <mat-icon>arrow_back</mat-icon>\n            <span>{{layoutPosition[1].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(2)\">\n            <mat-icon>arrow_upward</mat-icon>\n            <span>{{layoutPosition[2].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(3)\">\n            <mat-icon>arrow_downward</mat-icon>\n            <span>{{layoutPosition[3].name}}</span>\n        </button>\n    </mat-menu>\n</div>\n\n\n<div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\"\n    fxLayoutAlign=\"{{currentlayout.aling}}\">\n\n    <toco-catalog-filters-container *ngIf=\"!isEmpty()\" fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxFlex=\"{{currentlayout.width}}\"\n        fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\" fxLayoutGap=\"1em\"\n        class=\"width-90 back-grey mat-elevation-z8\">\n    </toco-catalog-filters-container>\n\n\n\n    <div class=\"mat-elevation-z8 width-90 margin1em\">\n        <table *ngIf=\"!isEmpty()\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef>Titulo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.data.title}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"rnps\">\n                <th mat-header-cell *matHeaderCellDef>RNPS</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.data.rnps}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"p-issn\">\n                <th mat-header-cell *matHeaderCellDef>P-ISSN</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.data.issn.p}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"url\">\n                <th mat-header-cell *matHeaderCellDef>URL</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.data.url}} </td>\n            </ng-container>\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n                <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                    <div class=\"example-element-detail\"\n                        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                        <div class=\"example-element-description e2e-inner-html-bound\"\n                            [innerHTML]=\"element.data.description\"></div>\n                        <div class=\"example-element-description\" fxLayout=\"row\" fxLayoutAlign=\"center end\">\n                            <button mat-stroked-button color=\"primary\" (click)=\"viewJournal(element.uuid)\">\n                                Ver\n                            </button>\n                        </div>\n\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n                [class.example-expanded-row]=\"expandedElement === element\" (click)=\"expandedElement = element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n\n        <h1 *ngIf=\"isEmpty()\">No hay Información para Mostrar</h1>\n\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n            (page)=\"fetchJournalData()\">\n        </mat-paginator>\n    </div>\n\n\n</div>\n<mat-card *ngIf=\"isLoading()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n    <mat-spinner></mat-spinner>\n    <!--<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n</mat-card>\n\n\n<!--\n      </mat-drawer-content>\n\n    </mat-drawer-container> -->\n\n<!-- </div> -->","styles":[".width-card{width:30%;min-width:240px;margin-left:24px;margin-top:24px}.card-float-left{float:left}.center-spinner{width:90.5%;min-width:240px;margin-left:24px;margin-right:24px;margin-top:24px}.back-grey{background:rgba(0,0,0,.01);margin:1.5em 1em;padding:1em;min-width:18em}.width-90{width:90%}.width-93{width:93.5%}table{width:90%}.margin1em{margin:1em}.menu-pull-right{flex:1 1 auto}table.mat-table{width:100%}tr.example-detail-row{height:0}tr.example-element-row:not(.example-expanded-row):hover{background:#f5f5f5}tr.example-element-row:not(.example-expanded-row):active{background:#efefef}.example-element-row td{border-bottom-width:0}.example-element-detail{overflow:hidden;display:flex}.example-element-diagram{min-width:80px;border:2px solid #000;padding:8px;font-weight:lighter;margin:8px 0;height:104px}.example-element-symbol{font-weight:700;font-size:40px;line-height:normal}.example-element-description{padding:16px}.example-element-description-attribution{opacity:.5}.height-auto{height:auto!important}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"MetadataService"},{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"Environment"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":85,"character":23},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":86,"character":19}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":91,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator","line":91,"character":13},{"static":true}]}]}],"filter_component":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":92,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵr"},{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"fetchJournalData":[{"__symbolic":"method"}],"onScrollUp":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"isLoading":[{"__symbolic":"method"}],"openme":[{"__symbolic":"method"}],"changeLayoutPosition":[{"__symbolic":"method"}],"viewJournal":[{"__symbolic":"method"}]}},"DialogCatalogJournalInfoDialog":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":241,"character":1},"arguments":[{"selector":"dialog-catalog-journal-info","template":"<mat-dialog-content class=\"height-auto\">\n                    <toco-journal-view-info\n                        [journalVersion]=\"data.journalVersion\"\n                    >\n                    </toco-journal-view-info>\n                </mat-dialog-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":255,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":255,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"DialogCatalogJournalInfoDialog"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}]}},"SourcesListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"toco-sources-list","animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":27,"character":8},"arguments":["detailExpand",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":28,"character":12},"arguments":["collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":28,"character":31},"arguments":[{"height":"0px","minHeight":"0","display":"none"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":29,"character":12},"arguments":["expanded",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":29,"character":30},"arguments":[{"height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":30,"character":12},"arguments":["expanded <=> collapsed",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":30,"character":49},"arguments":["225ms cubic-bezier(0.4, 0.0, 0.2, 1)"]}]}]]}],"template":"<!-- <div infiniteScroll [infiniteScrollDistance]=\"0\" [infiniteScrollUpDistance]=\"0.5\" [infiniteScrollThrottle]=\"10\" (scrolled)=\"onScrollDown()\"\n  (scrolledUp)=\"onScrollUp()\"> -->\n\n\n    <!-- <toco-page-header [info]=\"['Catálogo de Revistas Científicas Cubanas']\">\n    </toco-page-header> -->\n    <div fxLayoutAlign=\"end center\" fxLayout=\"row\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>view_quilt</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"changeLayoutPosition(0)\">\n          <mat-icon>arrow_forward</mat-icon>\n          <span>{{layoutPosition[0].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(1)\">\n          <mat-icon>arrow_back</mat-icon>\n          <span>{{layoutPosition[1].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(2)\">\n          <mat-icon>arrow_upward</mat-icon>\n          <span>{{layoutPosition[2].name}}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLayoutPosition(3)\">\n          <mat-icon>arrow_downward</mat-icon>\n          <span>{{layoutPosition[3].name}}</span>\n        </button>\n      </mat-menu>\n    </div>\n\n\n    <div fxLayout=\"{{currentlayout.layout}}\" fxLayout.xs=\"column nowrap\" fxLayoutAlign=\"{{currentlayout.aling}}\">\n\n      <toco-catalog-filters-container fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxFlex=\"{{currentlayout.width}}\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\"\n        fxLayoutGap=\"1em\" class=\"width-90 back-grey mat-elevation-z8\">\n      </toco-catalog-filters-container>\n\n\n\n      <div class=\"mat-elevation-z8 width-90 margin1em\">\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Titulo</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.title}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"rnps\">\n            <th mat-header-cell *matHeaderCellDef>RNPS</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.rnps}} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"p-issn\">\n            <th mat-header-cell *matHeaderCellDef>P-ISSN</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.data.issn.p}} </td>\n          </ng-container>\n\n          <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n          <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n              <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                <div class=\"example-element-description e2e-inner-html-bound\" [innerHTML]=\"element.data.description\"></div>\n\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n          <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\" [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = element\">\n          </tr>\n          <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\"\n              [pageSize]=\"pageSize\"\n              [pageSizeOptions]=\"pageSizeOptions\"\n              (page)=\"fetchJournalData()\">\n        </mat-paginator>\n      </div>\n\n      <mat-card *ngIf=\"!isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n        <mat-spinner></mat-spinner>\n        <!--<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>-->\n      </mat-card>\n\n      <!-- <mat-card *ngIf=\"isEmpty()\" class=\"center-spinner\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"gappx\">\n        <h1>No hay Información para Mostrar</h1>\n      </mat-card> -->\n    </div>\n\n    <!--\n      </mat-drawer-content>\n\n\n\n    </mat-drawer-container> -->\n\n<!-- </div> -->\n","styles":[".width-card{width:30%;min-width:240px;margin-left:24px;margin-top:24px}.card-float-left{float:left}.center-spinner{width:90.5%;min-width:240px;margin-left:24px;margin-right:24px;margin-top:24px}.back-grey{background:rgba(0,0,0,.01);margin:1.5em 1em;padding:1em;min-width:18em}.width-90{width:90%}.width-93{width:93.5%}table{width:90%}.margin1em{margin:1em}.menu-pull-right{flex:1 1 auto}table.mat-table{width:100%}tr.example-detail-row{height:0}tr.example-element-row:not(.example-expanded-row):hover{background:#f5f5f5}tr.example-element-row:not(.example-expanded-row):active{background:#efefef}.example-element-row td{border-bottom-width:0}.example-element-detail{overflow:hidden;display:flex}.example-element-diagram{min-width:80px;border:2px solid #000;padding:8px;font-weight:lighter;margin:8px 0;height:104px}.example-element-symbol{font-weight:700;font-size:40px;line-height:normal}.example-element-description{padding:16px}.example-element-description-attribution{opacity:.5}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"MetadataService"},{"__symbolic":"reference","name":"FiltersService"},{"__symbolic":"reference","name":"Environment"}]}],"paginator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":79,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator","line":79,"character":15},{"static":true}]}]}],"filter_component":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":82,"character":5},"arguments":[{"__symbolic":"reference","name":"ɵr"},{"static":true}]}]}],"ngOnInit":[{"__symbolic":"method"}],"fetchJournalData":[{"__symbolic":"method"}],"onScrollUp":[{"__symbolic":"method"}],"isEmpty":[{"__symbolic":"method"}],"isLoading":[{"__symbolic":"method"}],"openme":[{"__symbolic":"method"}],"changeLayoutPosition":[{"__symbolic":"method"}]}},"StaticsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"StaticChipsComponent"},{"__symbolic":"reference","name":"StaticTableComponent"},{"__symbolic":"reference","name":"StaticTextComponent"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":18,"character":2}],"exports":[{"__symbolic":"reference","name":"StaticChipsComponent"},{"__symbolic":"reference","name":"StaticTableComponent"},{"__symbolic":"reference","name":"StaticTextComponent"}]}]}],"members":{}},"StaticChipsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"static-chips","template":"\n<mat-form-field class=\"chips-mat-form-field control-without-interactivity\" [appearance]=\"appearance\">\n\t<mat-label>{{ desc }}</mat-label>\n\t<mat-chip-list *ngIf=\"value.length\" [selectable]=\"'false'\" [attr.aria-label]=\"desc\">\n    <mat-chip *ngFor=\"let item of value\" [selectable]=\"'false'\" [disableRipple]=\"'true'\">{{ item }}</mat-chip>\n  </mat-chip-list>\n  <input *ngIf=\"!value.length\" matInput [value]=\"'There is not any item to show!'\" [attr.aria-label]=\"desc\" />\n</mat-form-field>\n","styles":[".chips-mat-form-field{width:100%}.control-without-interactivity{pointer-events:none}"]}]}],"members":{"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":2}}]}],"desc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":2}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"PeriodicElement":{"__symbolic":"interface"},"StaticTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"static-table","template":"\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el único que está hecho. -->\n<fieldset class=\"static-table-fieldset\">\n    <legend class=\"static-table-fieldset-legend\">{{ desc }}</legend>\n\n    <table mat-table [dataSource]=\"value\" class=\"mat-elevation-z8\" [attr.aria-label]=\"desc\">\n        <!-- The content that is showed when the `dataSource` is not empty. -->\n        <ng-container *ngFor=\"let column of columnsObjectProperty; let pos = index\" [matColumnDef]=\"column\">\n            <th mat-header-cell *matHeaderCellDef>\n                {{ columnsHeaderText[pos] }}\n            </th>\n\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element[column] }}\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsObjectProperty; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columnsObjectProperty;\"></tr>\n    </table>\n\n</fieldset>\n","styles":[".static-table-fieldset{width:auto;margin:-4px 0 24px;padding:0 10px 14px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.static-table-fieldset-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}table{width:100%;box-shadow:none}"]}]}],"members":{"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":2}}]}],"desc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":2}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":2}}]}],"columnsObjectProperty":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":2}}]}],"columnsHeaderText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"StaticTextComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"static-text","host":{"[style.width]":"width","$quoted$":["[style.width]"]},"template":"\n<mat-form-field class=\"text-mat-form-field control-without-interactivity\" [appearance]=\"appearance\">\n    <mat-label>{{ desc }}</mat-label>\n    <input matInput [formControl]=\"input_static\" [style.textAlign]=\"textAlign\" [attr.aria-label]=\"desc\" (input)=\"handleInput()\" />\n</mat-form-field>\n","styles":[".text-mat-form-field{width:100%}.control-without-interactivity{pointer-events:none}"]}]}],"members":{"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":2}}]}],"desc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":2}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":2}}]}],"valueByDefault":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":2}}]}],"textAlign":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"handleInput":[{"__symbolic":"method"}]}},"TaxonomyModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"VocabulariesComponent"},{"__symbolic":"reference","name":"VocabularyDialogComponent"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"TaxonomyComponent"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"}],"entryComponents":[{"__symbolic":"reference","name":"VocabularyDialogComponent"},{"__symbolic":"reference","name":"ɵt"}],"imports":[{"__symbolic":"reference","name":"SharedModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":31,"character":8},{"__symbolic":"reference","name":"TocoFormsModule"}],"exports":[{"__symbolic":"reference","name":"TaxonomyComponent"},{"__symbolic":"reference","name":"VocabulariesComponent"},{"__symbolic":"reference","name":"ɵu"}],"providers":[]}]}],"members":{}},"TermHelper":{"__symbolic":"class","members":{}},"TaxonomyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"toco-taxonomy","template":"<div class=\"grid-container\">\n  <!-- <h1 class=\"mat-h1\">Taxonomía</h1> -->\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=”32px” fxLayoutAlign=\"space-around none\">\n    \n    <toco-vocabularies \n      fxFlex=\"38%\" \n      (selectedVocab)=\"vocabChange($event)\"\n    ></toco-vocabularies>\n\n    <toco-terms \n      fxFlex=\"58%\" \n      [currentVocab]=\"currentVocab\"\n    ></toco-terms>\n  </div>\n</div>","styles":[".grid-container{margin:20px}.dashboard-card{position:absolute;top:15px;left:15px;right:15px;bottom:15px;overflow:hidden;display:flex;flex-direction:column}.dashboard-card>.mat-card-title-group{display:block}.dashboard-card>.mat-card-content{overflow-y:auto}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"vocabChange":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"VocabularyDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"toco-vocabulary-dialog","template":"<form *ngIf=\"hasService\">\n    <toco-form-container\n        [panelsContent]=\"panels\"\n        [formGroup]=\"formGroup\"\n        [useAccordion]=\"false\"\n        [action]=\"action\"\n        [actionLabel]=\"actionLabel\"\n    ></toco-form-container>\n\n\n    <!-- <div>\n        <button mat-raised-button color=\"primary\" (click)=\"acceptAction()\">{{actionLabel}}</button>\n    </div> -->\n</form>\n\n<h2 *ngIf=\"!hasService\"> No Service</h2>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":37,"character":9},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":37,"character":16}]}]],"parameters":[{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":34,"character":30},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"FormContainerComponent"}]},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":36,"character":26},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"acceptAction":[{"__symbolic":"method"}]}},"VocabulariesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":122,"character":1},"arguments":[{"selector":"toco-vocabularies","template":"<mat-card>\n  <mat-card-header>\n    <mat-card-title>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n        Vocabularios\n        <button *ngIf=\"hasPermission('add')\" mat-icon-button (click)=\"newVocab()\" matTooltip=\"Adicionar Vocabulario\">\n          <mat-icon>library_add</mat-icon>\n        </button>\n      </div>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content [style.overflow]=\"'auto'\" [style.height]=\"'25em'\">\n    <mat-spinner *ngIf=\"loading; else elseTemplate\"></mat-spinner>\n    <ng-template #elseTemplate>\n\n\n      <mat-form-field [ngStyle]=\"{'width': '100%'}\">\n        <mat-label>Vocabularios</mat-label>\n        <mat-select\n          [(value)]=\"currentVocab\"\n          (selectionChange)=\"onSelectionChange()\"\n        >\n          <mat-option *ngFor=\"let option of vocabularies\" [value]=\"option\">\n            {{option.human_name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      \n\n      <!-- <mat-form-field>\n        <input matInput placeholder=\"Vocabularios\" aria-label=\"Vocabularios\" [matAutocomplete]=\"auto\"\n          [formControl]=\"vocabCtrl\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let item of filteredVocabularies | async\" [value]=\"item.human_name\" (click)=selectVocab(item) (keydown.enter)=selectVocab(item)>\n            {{item.human_name}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field> -->\n\n\n      <mat-card *ngIf=\"currentVocab\">\n        <mat-card-header>\n          <mat-card-title></mat-card-title>\n          <mat-card-subtitle>\n              <strong>Identificador: </strong> {{ currentVocab.name }}\n              </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <strong>Nombre: </strong> {{ currentVocab.human_name }}\n          <p> <strong> Descripción: </strong> </p>\n          <div class=\"e2e-inner-html-bound  text-align-justify\" [innerHTML]=\"currentVocab.description\"></div>\n\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-flat-button *ngIf=\"hasPermission('edit', currentVocab.id)\" (click)=\"editVocab(currentVocab)\">Editar \n            <mat-icon>edit</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n      \n    </ng-template>\n  </mat-card-content>\n</mat-card>\n","styles":[""]}]}],"members":{"selectedVocab":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":152,"character":5}}]}],"emiterShowTerms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":161,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":164,"character":31},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":165,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":36,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"selectVocab":[{"__symbolic":"method"}],"loadVocabularies":[{"__symbolic":"method"}],"newVocab":[{"__symbolic":"method"}],"editVocab":[{"__symbolic":"method"}],"openVocabDialog":[{"__symbolic":"method"}],"deleteVocab":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}],"getAuthenticatedUserPermissions":[{"__symbolic":"method"}],"hasPermission":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":15,"character":1},"arguments":[{"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":16,"character":14},"member":"forChild"},"arguments":[[{"path":"home","component":{"__symbolic":"reference","name":"HomeComponent"},"data":{"title":"Inicio"}}]]}],"exports":[{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":17,"character":14}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":21,"character":1},"arguments":[{"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":22,"character":14},"member":"forChild"},"arguments":[[{"path":"","component":{"__symbolic":"reference","name":"HarvesterComponent"},"children":[{"path":"","component":{"__symbolic":"reference","name":"RepositoriesComponent"},"data":{"title":"Revistas"}}]}]]}],"exports":[{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":23,"character":14}]}]}],"members":{}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"toco-org-view-accordion","template":"\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el único que está hecho. -->\n<fieldset class=\"static-accordion-fieldset\">\n\t<legend class=\"static-accordion-fieldset-legend\">{{ desc }}</legend>\n\n\t<div class=\"static-accordion-buttons\">\n\t\t<button mat-raised-button color=\"primary\" (click)=\"getAccordion.openAll()\">Expandir Todo</button>\n\t\t<button mat-raised-button color=\"primary\" (click)=\"getAccordion.closeAll()\">Colapsar Todo</button>\n\t</div>\n\n\t<mat-accordion class=\"static-mat-accordion\" multi [attr.aria-label]=\"desc\">\n\t\t<ng-container *ngFor=\"let panelTitle of panelsTitle; let pos = index\">\n\t\t\t<mat-expansion-panel *ngIf=\"panelHasElement(pos)\">\n\t\t\t\t<mat-expansion-panel-header>\n\t\t\t\t\t<mat-panel-title>\n\t\t\t\t\t\t{{ panelTitle }}\n\t\t\t\t\t</mat-panel-title>\n\t\t\t\t</mat-expansion-panel-header>\n\n\t\t\t\t<ng-container [ngSwitch]=\"orgViewAccordionType\">\n\t\t\t\t\t<toco-org-view-relationship *ngSwitchCase=\"orgViewAccordion_Type.Relationships\" [value]=\"value[pos]\"></toco-org-view-relationship>\n\t\t\t\t\t<toco-org-view-address *ngSwitchCase=\"orgViewAccordion_Type.Addresses\" [value]=\"value[pos]\"></toco-org-view-address>\n\t\t\t\t</ng-container>\n\t\t\t</mat-expansion-panel>\n\t\t</ng-container>\n\t</mat-accordion>\n</fieldset>\n","styles":[".static-accordion-fieldset{width:auto;margin:-4px 0 24px;padding:0 10px 14px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.static-accordion-fieldset-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}.static-accordion-buttons{margin:20px 0}button{margin-right:10px}.mat-expansion-panel{box-shadow:none;border:1px solid #eaeaea}.mat-expansion-panel:not(.mat-expansion-panel-spacing):not(:first-of-type){margin:-1px 0 0}::ng-deep div.mat-expansion-panel-body{padding:0}"]}]}],"members":{"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":2}}]}],"desc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":2}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":2}}]}],"orgViewAccordionType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":2}}]}],"panelsTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":2}}]}],"_accordion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":69,"character":2},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatAccordion","line":69,"character":12},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"panelHasElement":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"toco-org-view-address","template":"\n<static-text *ngIf=\"value.city\" [desc]=\"'Nombre de la ciudad'\" [value]=\"value.city\"></static-text>\n<static-text *ngIf=\"value.municipality\" [desc]=\"'Nombre del municipio'\" [value]=\"value.municipality\"></static-text>\n<static-text *ngIf=\"value.country\" [desc]=\"'Nombre del país'\" [value]=\"value.country\"></static-text>\n<static-text *ngIf=\"value.country_code\" [desc]=\"'Código ISO 3166-1 alpha-2 del país'\" [value]=\"value.country_code\"></static-text>\n<static-text *ngIf=\"value.lat\" [desc]=\"'Latitud (coordenadas geográficas)'\" [value]=\"value.lat\"></static-text>\n<static-text *ngIf=\"value.lng\" [desc]=\"'Longitud (coordenadas geográficas)'\" [value]=\"value.lng\"></static-text>\n<static-text *ngIf=\"value.line_1\" [desc]=\"'Primera línea de la dirección'\" [value]=\"value.line_1\"></static-text>\n<static-text *ngIf=\"value.line_2\" [desc]=\"'Segunda línea de la dirección'\" [value]=\"value.line_2\"></static-text>\n<static-text *ngIf=\"value.line_3\" [desc]=\"'Tercera línea de la dirección'\" [value]=\"value.line_3\"></static-text>\n<static-text *ngIf=\"value.postcode\" [desc]=\"'Código postal'\" [value]=\"value.postcode\"></static-text>\n<static-text *ngIf=\"value.primary != undefined\" [desc]=\"'Especifica si esta dirección identifica la dirección principal'\" [value]=\"value.primary.toString()\"></static-text>\n<static-text *ngIf=\"value.state\" [desc]=\"'Nombre del estado/región'\" [value]=\"value.state\"></static-text>\n<static-text *ngIf=\"value.state_code\" [desc]=\"'Código ISO 3166-2 del estado/región'\" [value]=\"value.state_code\"></static-text>\n<toco-org-view-geo-names-city *ngIf=\"value.geonames_city\" [desc]=\"'Datos GeoNames enlazados'\" [value]=\"value.geonames_city\"></toco-org-view-geo-names-city>\n","styles":[""]}]}],"members":{"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"toco-org-view-geo-names-city","template":"\n<!-- TODO: En dependencia del valor de `appearance`, se aplican las clases CSS para lograr la apariencia deseada. \n     Actualmente, `appearance = 'outline'` es el único que está hecho. -->\n<fieldset class=\"static-geo-names-city-fieldset\">\n    <legend class=\"static-geo-names-city-fieldset-legend\">{{ desc }}</legend>\n\n    <static-text *ngIf=\"value.id\" [desc]=\"'Identificador GeoNames'\" [value]=\"value.id\"></static-text>\n    <static-text *ngIf=\"value.city\" [desc]=\"'Nombre de la ciudad'\" [value]=\"value.city\"></static-text>\n    <static-table *ngIf=\"value.geonames_admin1\" [desc]=\"'geonames_admin1'\" [value]=\"getGeoNamesAdmin1\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.geonames_admin2\" [desc]=\"'geonames_admin2'\" [value]=\"getGeoNamesAdmin2\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level1\" [desc]=\"'nuts_level1'\" [value]=\"getNutsLevel1\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level2\" [desc]=\"'nuts_level2'\" [value]=\"getNutsLevel2\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n    <static-table *ngIf=\"value.nuts_level3\" [desc]=\"'nuts_level3'\" [value]=\"getNutsLevel3\"\n        [columnsObjectProperty]=\"['property', 'value']\"\n        [columnsHeaderText]=\"['Property', 'Value']\"\n    >\n    </static-table>\n</fieldset>\n","styles":[".static-geo-names-city-fieldset{width:auto;margin:-4px 0 24px;padding:14px 10px;cursor:default;background-color:#fff;border:1px solid rgba(0,0,0,.12);border-radius:4px}.static-geo-names-city-fieldset-legend{padding:0 4px;background-color:#fff;color:rgba(0,0,0,.6);font-size:10px}"]}]}],"members":{"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":2}}]}],"desc":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":2}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"_createValueAsArray":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"toco-org-view-relationship","template":"\n<a mat-button *ngFor=\"let link of value.links\"\n    class=\"aling-left\"\n    color=\"warn\"\n    [routerLink]=\"link.url\"\n    [ngStyle]=\"{'line-height': 'initial', 'padding': '10px 16px'}\"\n>\n    {{ link.name }}\n</a>\n\n<!--\n  href=\"{{ link.url }}\"\n\n  <static-table *ngIf=\"value.identifiers && value.identifiers.length\" [desc]=\"'Identificadores de la organización'\" [value]=\"value.identifiers\"\n    [columnsObjectProperty]=\"['idtype', 'value']\"\n    [columnsHeaderText]=\"['Identifier type', 'Identifier value']\"\n>\n</static-table>\n<static-text *ngIf=\"value.type\" [desc]=\"'Tipo de la relación'\" [value]=\"value.type\"></static-text>\n<static-text *ngIf=\"value.label\" [desc]=\"'Nombre de la organización relacionada'\" [value]=\"value.label\"></static-text> -->\n","styles":[".aling-left{text-align:left;white-space:normal!important}"]}]}],"members":{"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"toco-org-table-edit","template":"\n<!-- <container-simple [content]=\"identifiersContent\"></container-simple> -->\n<!-- <container-simple [content]=\"identifiersContent_Complex\"></container-simple> -->\n\n<div [ngStyle]=\"{'margin': '1em 0 1em 0'}\">\n    <button mat-raised-button color=\"primary\" (click)=\"doOperation()\">Add Organization</button>\n    <!-- <input-text #input_search [content]=\"searchContent\"></input-text> -->\n  </div>\n  \n  <!-- <toco-table></toco-table> -->\n  <toco-table [content]=\"tableContent\"></toco-table>\n  ","styles":[""]}]}],"members":{"_tableControl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":40,"character":5},"arguments":[{"__symbolic":"reference","name":"TableComponent"},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":43,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":43,"character":73},{"__symbolic":"reference","name":"OrganizationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"_initSearchContent":[{"__symbolic":"method"}],"_initTableContent":[{"__symbolic":"method"}],"_getMySources":[{"__symbolic":"method"}],"doOperation":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"toco-journal-view-term","template":"\n<mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n\n    <mat-card-header>\n        <mat-card-title>\n            {{ title }}\n        </mat-card-title>\n        <mat-label *ngIf=\"terms.length == 0\" class=\"text-muted text-through\">Vacío</mat-label>\n    </mat-card-header>\n\n    <mat-card-content>\n\n        <mat-chip-list class=\"mat-chip-list-stacked\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <ng-container *ngFor=\"let termSource of terms\">\n\n                <mat-chip>\n                    {{ termSource.description }}\n                </mat-chip>\n\n            </ng-container>\n\n        </mat-chip-list>\n    </mat-card-content>\n\n</mat-card>\n","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":5}}]}],"vocab_id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"terms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"toco-journal-view-info","template":"<!-- Journal Information -->\n<mat-card *ngIf=\"journalVersion && journalData\">\n  <mat-card-header *ngIf=\"showVersionLabel\">\n    <!-- <img mat-card-avatar *ngIf=\"journal.data.logo; else logotemplate\" [style.background-size]=\"'cover'\" src=\"journal.data.logo\">\n        <ng-template #logotemplate>\n            <img mat-card-avatar [src]=\"defaultLogo\" alt=\"\">\n        </ng-template> -->\n\n    <mat-card-title> </mat-card-title>\n\n    <mat-card-subtitle> Revisión actual </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-divider  *ngIf=\"showVersionLabel\" [inset]=\"true\" style=\"margin-bottom: 1em\"></mat-divider>\n\n  <mat-card-content>\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Título'\"\n        [value]=\"journalData.title\"\n      ></toco-journal-view-info-field>\n    </p>\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Subtítulo'\"\n        [value]=\"journalData.subtitle\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Nombre Abreviado'\"\n        [value]=\"journalData.shortname\"\n      ></toco-journal-view-info-field>\n    </p>\n    <p>\n      <toco-journal-view-info-field *ngIf=\"journalData.source_type\"\n        [label]=\"'Tipo'\"\n        [value]=\"tipos[journalData.source_type].label\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <mat-label style=\"font-weight: bold\">ISSN: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Impreso'\"\n          [value]=\"getIdentifier(IdentifierSchemas.issn_p)\"\n        ></toco-journal-view-info-field>\n      </p>\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Electrónico'\"\n          [value]=\"getIdentifier(IdentifierSchemas.issn_e)\"\n        ></toco-journal-view-info-field>\n      </p>\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'De enlace'\"\n          [value]=\"getIdentifier(IdentifierSchemas.issn_l)\"\n        ></toco-journal-view-info-field>\n      </p>\n    </div>\n    <mat-label style=\"font-weight: bold\">RNPS: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Impreso'\"\n          [value]=\"getIdentifier(IdentifierSchemas.prnps)\"\n        ></toco-journal-view-info-field>\n      </p>\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Electrónico'\"\n          [value]=\"getIdentifier(IdentifierSchemas.ernps)\"\n        ></toco-journal-view-info-field>\n      </p>\n    </div>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'URL'\"\n        [value]=\"getIdentifier(IdentifierSchemas.url)\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'OAIURL'\"\n        [value]=\"getIdentifier(IdentifierSchemas.oaiurl)\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field *ngIf=\"journalData.source_system\"\n        [label]=\"'Sistema'\"\n        [value]=\"sistemas[journalData.source_system].label\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Email'\"\n        [value]=\"journalData.email\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Seriadas Cubanas'\"\n        [value]=\"journalData.seriadas_cubanas\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Propósito'\"\n        [value]=\"journalData.purpose\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Año de Inicio'\"\n        [value]=\"journalData.start_year | date\"\n      ></toco-journal-view-info-field>\n      <!-- <mat-label style=\"font-weight: bold;\"> Año de Inicio: </mat-label>\n      <mat-label *ngIf=\"journalData.start_year\">\n        {{ journalData.start_year | date }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!journalData.start_year\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      > -->\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Año de Fin'\"\n        [value]=\"journalData.end_year | date\"\n      ></toco-journal-view-info-field>\n    </p>\n\n    <p>\n      <toco-journal-view-info-field\n        [label]=\"'Frecuencia de Publicación'\"\n        [value]=\"journalData.frequency\"\n      ></toco-journal-view-info-field>\n    </p>\n    <mat-label style=\"font-weight: bold\"> Descripción:</mat-label>\n    <mat-label *ngIf=\"!journalData.description\" class=\"text-muted text-through\"\n      >Vacío</mat-label\n    >\n    <div\n      *ngIf=\"journalData.description\"\n      class=\"e2e-inner-html-bound text-align-justify\"\n      [innerHTML]=\"journalData.description\"\n    ></div>\n\n    <mat-label style=\"font-weight: bold\">Redes Sociales:</mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Facebook'\"\n          [value]=\"journalData.socialNetworks.facebook\"\n        ></toco-journal-view-info-field>\n      </p>\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Twitter'\"\n          [value]=\"journalData.socialNetworks.twitter\"\n        ></toco-journal-view-info-field>\n      </p>\n      <p>\n        <toco-journal-view-info-field\n          [label]=\"'Linkedin'\"\n          [value]=\"journalData.socialNetworks.linkedin\"\n        ></toco-journal-view-info-field>\n      </p>\n    </div>\n\n    <!-- show terms -->\n\n    <mat-divider\n      [inset]=\"true\"\n      style=\"margin-bottom: 1em; margin-top: 1em\"\n    ></mat-divider>\n\n    <!-- <toco-journal-view-term\n      title=\"Grupo:\"\n      [terms]=\"groupTerms\"\n      [vocab_id]=\"vocabularies.INDEXES_CLASIFICATION\"\n    ></toco-journal-view-term>\n\n    <toco-journal-view-term\n      title=\"Provincia:\"\n      [terms]=\"provinceTerms\"\n      [vocab_id]=\"vocabularies.CUBAN_PROVINCES\"\n    ></toco-journal-view-term> -->\n\n    <toco-journal-view-term\n      title=\"Licencia:\"\n      [terms]=\"licenceTerms\"\n      [vocab_id]=\"vocabularies.LICENCES\"\n    ></toco-journal-view-term>\n\n    <toco-journal-view-term\n      title=\"Materias:\"\n      [terms]=\"subjectTerms\"\n      [vocab_id]=\"vocabularies.SUBJECTS\"\n    ></toco-journal-view-term>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>Organizaciones:</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-organizations\n          [sourceData]=\"journalData\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-organizations>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title> Indizaciones:</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-indexes\n          [sourceData]=\"journalData\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-indexes>\n        <!-- <mat-accordion>\n          <ng-container *ngFor=\"let termSource of dataBaseTerms\">\n            <mat-expansion-panel\n              *ngIf=\"termSource.term.vocabulary == vocabularies.INDEXES\"\n              (opened)=\"panelOpenState = true\"\n              (closed)=\"panelOpenState = false\"\n            >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  {{ termSource.term.description }}\n                </mat-panel-title>\n                <mat-panel-description> </mat-panel-description>\n              </mat-expansion-panel-header>\n              <p *ngIf=\"termSource.data\">\n                <strong>URL: </strong> {{ termSource.data.url }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['initial_cover']\">\n                <strong>Cobertura inicio: </strong>\n                {{ termSource.data[\"initial_cover\"] }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['end_cover']\">\n                <strong>Cobertura hasta: </strong>\n                {{ termSource.data[\"end_cover\"] }}\n              </p>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion> -->\n      </mat-card-content>\n    </mat-card>\n  </mat-card-content>\n\n  <mat-divider [inset]=\"true\"></mat-divider>\n</mat-card>\n","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"journalVersion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"showVersionLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"orgs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":42,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵk"},{"static":false}]}]}],"indexes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":45,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵn"},{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SourceService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":51,"character":23}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadJournalData":[{"__symbolic":"method"}],"getIdentifier":[{"__symbolic":"method"}],"editingJournalChange":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":124,"character":1},"arguments":[{"selector":"toco-journal-view-info-field","template":"\n    <mat-label style=\"font-weight: bold;\">{{label}}: </mat-label>\n    <mat-label *ngIf=\"value\">\n      {{ value }}\n    </mat-label>\n    <mat-label\n      *ngIf=\"!value\"\n      class=\"text-muted text-through\"\n      >{{emptyLabel}}\n    </mat-label\n    >","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":140,"character":5}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":142,"character":5}}]}],"emptyLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":144,"character":5}}]}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"toco-source-organizations","template":"<ng-container>\n  <mat-toolbar\n    *ngIf=\"editable\"\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between center\"\n    fxLayoutGap=\"20px\"\n  >\n    <span>Adicionar</span>\n    <div\n      fxLayout=\"row wrap\"\n      fxLayoutAlign=\"space-between center\"\n      fxLayoutGap=\"20px\"\n    >\n    <button *ngIf=\"topMainOrganization\" mat-raised-button (click)=\"addOrg(true, true)\">\n      Organización Principal\n    </button>\n      <button mat-raised-button (click)=\"addOrg(true)\">\n        Organizaciones Cubanas\n      </button>\n      <button mat-raised-button (click)=\"addOrg(false)\">\n        Otras\n      </button>\n    </div>\n  </mat-toolbar>\n\n  \n  <mat-accordion>\n    <mat-expansion-panel\n      *ngFor=\"let org of sourceData.organizations; let index = index\"\n      [expanded]=\"false\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{ roles[org.role].label }}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{ org.name }}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-action-row *ngIf=\"editable\">\n        <button\n          mat-stroked-button\n          [disabled]=\"org.length === 1\"\n          (click)=\"setAsMain(org)\"\n          *ngIf=\"!topMainOrganization\"\n        >\n          Establecer como Principal\n        </button>\n        <button\n          mat-stroked-button\n          [disabled]=\"org.length === 1\"\n          (click)=\"removeInst(index)\"\n        >\n          Eliminar\n        </button>\n      </mat-action-row>\n      <toco-org-view [org]=\"org\" [showContent]=\"false\"></toco-org-view>\n    </mat-expansion-panel>\n  </mat-accordion>\n</ng-container>\n","styles":[""]}]}],"members":{"sourceData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"editable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"topMainOrganization":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":25,"character":19},{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"addOrg":[{"__symbolic":"method"}],"addOrgToSource":[{"__symbolic":"method"}],"setAsMain":[{"__symbolic":"method"}],"removeInst":[{"__symbolic":"method"}],"childToRemove":[{"__symbolic":"method"}],"getOrgToDelete":[{"__symbolic":"method"}],"getIndexByPid":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":214,"character":1},"arguments":[{"selector":"toco-source-organizations-select-top-main","template":"<mat-dialog-content class=\"height-auto\">\n    <ng-container *ngIf=\"toSelect\"\n      >{{ topMainOrganization.name }}\n      <br />\n      <mat-form-field>\n        <mat-label>Seleccione la Organización Principal: </mat-label>\n        <mat-select [(value)]=\"selected\" required>\n          <mat-option\n            *ngFor=\"let item of toSelect; let index = index\"\n            value=\"{{ index }}\"\n            >{{ item.label }}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n\n      <br />\n      <mat-label *ngIf=\"selected >= 0\">{{\n        toSelect[selected].label\n      }}</mat-label>\n      <br />\n    </ng-container>\n    <br />\n    <button mat-raised-button (click)=\"ok()\">OK</button>\n  </mat-dialog-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":244,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":244,"character":12}]}],null],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"ɵm"}]},{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"ok":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":284,"character":1},"arguments":[{"selector":"toco-source-organizations-select-dialog","template":"<mat-dialog-content class=\"height-auto\">\n    <toco-org-search\n      [orgFilter]=\"data.filter\"\n      (selectedOrg)=\"selectedOrg($event)\"\n      [placeholder]=\"placeholder\"\n    >\n    </toco-org-search>\n    <br />\n    <mat-label *ngIf=\"org\">{{ org.name }}</mat-label>\n    <br />\n    <mat-form-field *ngIf=\"canSelectRole\">\n      <mat-label>Rol</mat-label>\n      <mat-select [(value)]=\"role\" required>\n        <mat-option *ngFor=\"let item of roles\" value=\"{{ item.value }}\">{{\n          item.label\n        }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <br />\n\n    <ng-container *ngIf=\"parents.length > 0\">\n      <mat-label>Se añadirá también: </mat-label>\n      <ng-container *ngFor=\"let item of parents\">\n        <br />\n        <mat-label>{{ item.name }}</mat-label>\n        <br />\n      </ng-container>\n      <br />\n    </ng-container>\n\n    <button mat-raised-button (click)=\"ok()\">OK</button>\n  </mat-dialog-content>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":323,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":323,"character":12}]}],null],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"ɵm"}]},{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"OrganizationServiceNoAuth"}]}],"ngOnInit":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"selectedOrg":[{"__symbolic":"method"}],"addParent":[{"__symbolic":"method"}],"ok":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"toco-source-indexes","template":"<mat-progress-bar\n  *ngIf=\"!selectedDatabases\"\n  mode=\"indeterminate\"\n></mat-progress-bar>\n\n<mat-accordion *ngIf=\"selectedDatabases\">\n  <mat-expansion-panel\n    *ngFor=\"let clasification of selectedDatabases; let classIndex = index\"\n  >\n    <mat-expansion-panel-header>\n      {{ clasification.dbclass.description }} ({{clasification.dblist.length}})\n    </mat-expansion-panel-header>\n    <mat-action-row *ngIf=\"editable\">\n      <button\n          mat-icon-button\n          aria-label=\"Adicionar\"\n          matTooltip=\"Adicionar\"\n          (click)=\"addIndexAction(classIndex)\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n    </mat-action-row>\n    <mat-card *ngFor=\"let db of clasification.dblist; let dbIndex = index\">\n      <mat-card-header>\n        <mat-card-title><mat-label>{{ db.description }}</mat-label></mat-card-title>\n        <mat-card-subtitle>\n          <mat-label style=\"font-weight: bold;\">URL: </mat-label>\n          {{ db.data[\"url\"] }}\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n          <mat-label style=\"font-weight: bold;\">Cobertura: </mat-label>\n          <mat-label>\n            {{ db.data[\"initial_cover\"] }} - {{ db.data[\"end_cover\"] }}\n          </mat-label>\n      </mat-card-content>\n      <mat-card-actions *ngIf=\"editable\">\n        <button\n          mat-icon-button\n          aria-label=\"Editar\"\n          matTooltip=\"Editar\"\n          (click)=\"editIndexAction(classIndex, db)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Eliminar\"\n          matTooltip=\"Eliminar\"\n          (click)=\"deleteIndexAction(classIndex, db)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </mat-expansion-panel>\n</mat-accordion>\n","styles":[""]}]}],"members":{"sourceData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"editable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":49,"character":29},{"__symbolic":"reference","name":"TaxonomyService"}]}],"ngOnInit":[{"__symbolic":"method"}],"initIndexes":[{"__symbolic":"method"}],"_setSelectedDatabses":[{"__symbolic":"method"}],"_setIndexesToSource":[{"__symbolic":"method"}],"addIndexAction":[{"__symbolic":"method"}],"editIndexAction":[{"__symbolic":"method"}],"deleteIndexAction":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":220,"character":1},"arguments":[{"selector":"toco-source-addindex","template":"\n    <toco-form-container\n      #indexPanelContainer\n      [panelsContent]=\"indexPanel\"\n      [useAccordion]=\"false\"\n      fxLayout=\"row\"\n      [formGroup]=\"indexFormGroup\"\n      [action]=\"addIndexAction\"\n      [actionLabel]=\"'OK'\"\n      [deleteValuesAfterAction]=\"false\"\n    ></toco-form-container>\n  ","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":250,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":250,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":249,"character":26},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"toco-journal-view-version-field","template":"<div>\n  <button\n    mat-icon-button\n    aria-label=\"Next version\"\n    matTooltip=\"Remplazar\"\n    (click)=\"replace(type)\"\n  >\n    <mat-icon color=\"warn\">layers</mat-icon>\n  </button>\n\n  <!-- <button mat-icon-button aria-label=\"Next version\" matTooltip=\"Mezclar\" (click)=\"concat(type)\">\n        <mat-icon color=\"warn\">merge_type</mat-icon>\n    </button> -->\n\n  <ng-container [ngSwitch]=\"type\">\n    <ng-container *ngSwitchCase=\"journalDataType.title\">\n      <mat-label style=\"font-weight: bold\">Título:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.title\">\n        {{ currentJournal.data.title }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.title\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.subtitle\">\n      <mat-label style=\"font-weight: bold\">Subtítulo:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.subtitle\">\n        {{ currentJournal.data.subtitle }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.subtitle\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.shortname\">\n      <mat-label style=\"font-weight: bold\">Nombre Abreviado:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.shortname\">\n        {{ currentJournal.data.shortname }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.shortname\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.issnP\">\n      <toco-journal-view-info-field\n        [label]=\"'Impreso'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_p)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.issnE\">\n      <toco-journal-view-info-field\n        [label]=\"'Electrónico'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_e)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.issnL\">\n      <toco-journal-view-info-field\n        [label]=\"'De enlace'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_l)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.rnpsP\">\n      <toco-journal-view-info-field\n        [label]=\"'Impreso'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.prnps)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.rnpsE\">\n      <toco-journal-view-info-field\n        [label]=\"'Electrónico'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.ernps)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.url\">\n      <toco-journal-view-info-field\n        [label]=\"'URL'\"\n        [value]=\"currentJournal.data.getIdentifierValue(IdentifierSchemas.url)\"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.oaiurl\">\n      <toco-journal-view-info-field\n        [label]=\"'OAIURL'\"\n        [value]=\"\n          currentJournal.data.getIdentifierValue(IdentifierSchemas.oaiurl)\n        \"\n      ></toco-journal-view-info-field>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.email\">\n      <mat-label style=\"font-weight: bold\">Email:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.email\">\n        {{ currentJournal.data.email }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.email\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.purpose\">\n      <mat-label style=\"font-weight: bold\">Propósito:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.purpose\">\n        {{ currentJournal.data.purpose }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.purpose\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.start_year\">\n      <mat-label style=\"font-weight: bold\">Año de Inicio:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.start_year\">\n        {{ currentJournal.data.start_year | date }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.start_year\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.end_year\">\n      <mat-label style=\"font-weight: bold\">Año de Fin:</mat-label>\n      <mat-label *ngIf=\"currentJournal.data.end_year\">\n        {{ currentJournal.data.end_year | date }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.end_year\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.frequency\">\n      <mat-label style=\"font-weight: bold\"\n        >Frecuencia de Publicación:</mat-label\n      >\n      <mat-label *ngIf=\"currentJournal.data.frequency\">\n        {{ currentJournal.data.frequency }}\n      </mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.frequency\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.seriadas_cubanas\">\n      <mat-label style=\"font-weight: bold\">Seriadas Cubanas:</mat-label>\n      <a\n        href=\"{{ currentJournal.data.seriadas_cubanas }}\"\n        target=\"_blanck\"\n        *ngIf=\"currentJournal.data.seriadas_cubanas\"\n      >\n        {{ currentJournal.data.seriadas_cubanas }}\n      </a>\n      <mat-label\n        *ngIf=\"!currentJournal.data.seriadas_cubanas\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.facebook\">\n      <mat-label style=\"font-weight: bold\">Facebook:</mat-label>\n      <a\n        href=\"{{ currentJournal.data.socialNetworks.facebook }}\"\n        target=\"_blanck\"\n        *ngIf=\"currentJournal.data.socialNetworks.facebook\"\n      >\n        {{ currentJournal.data.socialNetworks.facebook }}\n      </a>\n      <mat-label\n        *ngIf=\"!currentJournal.data.socialNetworks.facebook\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.twitter\">\n      <mat-label style=\"font-weight: bold\">Twitter:</mat-label>\n      <a\n        href=\"{{ currentJournal.data.socialNetworks.twitter }}\"\n        target=\"_blanck\"\n        *ngIf=\"currentJournal.data.socialNetworks.twitter\"\n      >\n        {{ currentJournal.data.socialNetworks.twitter }}\n      </a>\n      <mat-label\n        *ngIf=\"!currentJournal.data.socialNetworks.twitter\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.linkedin\">\n      <mat-label style=\"font-weight: bold\">Linkedin:</mat-label>\n      <a\n        href=\"{{ currentJournal.data.socialNetworks.linkedin }}\"\n        target=\"_blanck\"\n        *ngIf=\"currentJournal.data.socialNetworks.linkedin\"\n      >\n        {{ currentJournal.data.socialNetworks.linkedin }}\n      </a>\n      <mat-label\n        *ngIf=\"!currentJournal.data.socialNetworks.linkedin\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"journalDataType.description\">\n      <mat-label style=\"font-weight: bold\">Descripción:</mat-label>\n      <mat-label\n        *ngIf=\"!currentJournal.data.description\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n    </ng-container>\n  </ng-container>\n\n  <!-- <mat-icon class=\"mat-18\" color=\"accent\" *ngIf=\"currentJournal.data.data && currentJournal.data.subtitle !== '' && currentJournal.data.subtitle !== currentcurrentJournal.data.subtitle\" matTooltip=\"Tiene cambios\">notifications</mat-icon> -->\n</div>\n","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"editingJournal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":5}}]}],"currentJournal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":5}}]}],"editingJournalChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":29,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"replace":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"toco-journal-view-version","template":"<mat-card *ngIf=\"currentJournal.data\">\n  <mat-card-header>\n    <!-- <img mat-card-avatar *ngIf=\"currentJournal.data.logo; else logotemplate\" [style.background-size]=\"'cover'\" src=\"currentJournal.data.logo\">\n            <ng-template #logotemplate>\n                <img mat-card-avatar [src]=\"defaultLogo\" alt=\"\">\n            </ng-template> -->\n\n    <mat-card-title>\n      <div fxLAyout=\"row\" fxLayoutAlign=\"space-between start\">\n        <mat-icon\n          class=\"mat-18 notification-position\"\n          color=\"accent\"\n          *ngIf=\"currentJournal.is_current\"\n          matTooltip=\"{{ currentJournal.comment }}\"\n          >star</mat-icon\n        >\n        <mat-icon\n          class=\"mat-18 notification-position\"\n          color=\"accent\"\n          *ngIf=\"!currentJournal.reviewed\"\n          matTooltip=\"{{ currentJournal.comment }}\"\n          >adjust</mat-icon\n        >\n      </div>\n    </mat-card-title>\n\n    <mat-card-subtitle>\n      <mat-label> {{ currentJournal.created_at | date }}. </mat-label>\n      <mat-label>\n        {{ currentJournal.userprofile.identify() }}\n      </mat-label>\n    </mat-card-subtitle>\n  </mat-card-header>\n\n  <mat-divider [inset]=\"true\" style=\"margin-bottom: 1em\"></mat-divider>\n\n  <mat-card-content>\n    <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.title\"\n    ></toco-journal-view-version-field>\n\n    <!-- subtitle -->\n    <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.subtitle\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.shortname\"\n    ></toco-journal-view-version-field>\n\n    <mat-label style=\"font-weight: bold\">ISSN: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnP\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnE\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.issnL\"\n      ></toco-journal-view-version-field>\n    </div>\n    <mat-label style=\"font-weight: bold\">RNPS: </mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.rnpsP\"\n      ></toco-journal-view-version-field>\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.rnpsE\"\n      ></toco-journal-view-version-field>\n    </div>\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.url\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.oaiurl\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.email\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.seriadas_cubanas\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.purpose\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.start_year\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.end_year\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.frequency\"\n    ></toco-journal-view-version-field>\n\n    <toco-journal-view-version-field\n    (editingJournalChange)=\"fieldEditingJournalChange()\"\n      [editingJournal]=\"editingJournal\"\n      [currentJournal]=\"currentJournal\"\n      [type]=\"journalDataType.description\"\n    ></toco-journal-view-version-field>\n\n    <div\n      *ngIf=\"currentJournal.data.description\"\n      class=\"e2e-inner-html-bound text-align-justify\"\n      [innerHTML]=\"currentJournal.data.description\"\n    ></div>\n\n    <mat-label style=\"font-weight: bold\">Redes Sociales:</mat-label>\n    <div style=\"margin-left: 0.8em\">\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.facebook\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.twitter\"\n      ></toco-journal-view-version-field>\n\n      <toco-journal-view-version-field\n      (editingJournalChange)=\"fieldEditingJournalChange()\"\n        [editingJournal]=\"editingJournal\"\n        [currentJournal]=\"currentJournal\"\n        [type]=\"journalDataType.linkedin\"\n      ></toco-journal-view-version-field>\n    </div>\n\n    <!-- show terms -->\n    <mat-divider\n      [inset]=\"true\"\n      style=\"margin-bottom: 1em; margin-top: 1em\"\n    ></mat-divider>\n\n    <!-- <p>\n      <mat-label style=\"font-weight: bold;\"> Institución: </mat-label>\n      <mat-label\n        *ngIf=\"currentInstitutionTerms.length == 0\"\n        class=\"text-muted text-through\"\n        >Vacío</mat-label\n      >\n      <ng-container *ngFor=\"let termSource of currentInstitutionTerms\">\n        <mat-label style=\"padding-left: 1em;\">\n          {{ termSource.description }}\n        </mat-label>\n      </ng-container>\n    </p> -->\n    <!-- <mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n      <mat-card-header>\n        <mat-card-title> Grupo: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentGroupTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vacío</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentGroupTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke;\">\n      <mat-card-header>\n        <mat-card-title> Provincia: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentProvinceTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vacío</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentProvinceTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card> -->\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title> Licencia: </mat-card-title>\n        <mat-label\n          *ngIf=\"currentLicenceTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vacío</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentLicenceTerms\">\n            <mat-chip>\n              <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button>\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceSubjects()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n\n          Materias:\n        </mat-card-title>\n        <mat-label\n          *ngIf=\"currentSubjectTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vacío</mat-label\n        >\n      </mat-card-header>\n      <mat-card-content>\n        <mat-chip-list>\n          <ng-container *ngFor=\"let termSource of currentSubjectTerms\">\n            <mat-chip>\n              <!-- <button\n                mat-icon-button\n                color=\"accent\"\n                matTooltip=\"Agregar\"\n                (click)=\"concat(journalDataType.term, termSource)\"\n              >\n                <mat-icon class=\"mat-18\">merge_type</mat-icon>\n              </button> -->\n              {{ termSource.description }}\n            </mat-chip>\n          </ng-container>\n        </mat-chip-list>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceOrganizations()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n          Organizaciones:\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-organizations\n          [sourceData]=\"currentJournal.data\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-organizations>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card style=\"margin: 1em; background-color: whitesmoke\">\n      <mat-card-header>\n        <mat-card-title>\n          <button\n            mat-icon-button\n            color=\"accent\"\n            matTooltip=\"Reemplazar\"\n            (click)=\"replaceIndexes()\"\n          >\n            <mat-icon class=\"mat-18\">merge_type</mat-icon>\n          </button>\n\n          Indizaciones:\n        </mat-card-title>\n        <!-- <mat-label\n          *ngIf=\"currentDataBaseTerms.length == 0\"\n          class=\"text-muted text-through\"\n          >Vacío</mat-label\n        > -->\n      </mat-card-header>\n      <mat-card-content>\n        <toco-source-indexes\n          [sourceData]=\"currentJournal.data\"\n          [editable]=\"false\"\n          [ngStyle]=\"{ margin: '1em' }\"\n        >\n        </toco-source-indexes>\n        <!-- <mat-accordion>\n          <ng-container *ngFor=\"let termSource of currentDataBaseTerms\">\n            <mat-expansion-panel\n              (opened)=\"panelOpenState = true\"\n              (closed)=\"panelOpenState = false\"\n            >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  <button\n                    mat-icon-button\n                    color=\"accent\"\n                    matTooltip=\"Agregar\"\n                    (click)=\"concat(journalDataType.term, termSource)\"\n                  >\n                    <mat-icon class=\"mat-18\">merge_type</mat-icon>\n                  </button>\n                  {{ termSource.description }}\n                </mat-panel-title>\n                <mat-panel-description> </mat-panel-description>\n              </mat-expansion-panel-header>\n              <p *ngIf=\"termSource.data\">\n                <strong>URL: </strong> {{ termSource.data.url }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['initial_cover']\">\n                <strong>Cobertura inicio: </strong>\n                {{ termSource.data[\"initial_cover\"] }}\n              </p>\n              <p *ngIf=\"termSource.data && termSource.data['end_cover']\">\n                <strong>Cobertura hasta: </strong>\n                {{ termSource.data[\"end_cover\"] }}\n              </p>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion> -->\n      </mat-card-content>\n    </mat-card>\n  </mat-card-content>\n\n  <mat-divider [inset]=\"true\"></mat-divider>\n\n  <!-- <mat-card-actions\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between center\"\n    fxLayoutGap=\"10px\"\n    style=\"padding: 1em\"\n  >\n    <mat-checkbox\n                [(ngModel)]=\"currentJournalChecked\"\n                (change)=\"markAsViewed()\"\n            >\n                Marcar como Visto\n            </mat-checkbox>\n\n    <div fxLayoutGap=\"10px\">\n      <button mat-stroked-button color=\"primary\" (click)=\"replace()\">\n        Sustituir todos los campos\n      </button>\n      <!-- <button mat-raised-button color=\"accent\">Descartar</button>\n    </div>\n  </mat-card-actions> -->\n</mat-card>\n","styles":[".text-muted{color:rgba(0,0,0,.54);padding-left:.2em}.text-through{text-decoration:line-through}.notification-position{position:absolute;top:0;right:0}p{padding-top:.8em}.overlay{opacity:.4;background:#000;width:100%;height:100%;z-index:10;top:0;left:0;position:fixed}"]}]}],"members":{"currentJournal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"editingJournal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"editingJournalChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":34,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":37,"character":33}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"loadJournalData":[{"__symbolic":"method"}],"markAsViewed":[{"__symbolic":"method"}],"fieldEditingJournalChange":[{"__symbolic":"method"}],"replace":[{"__symbolic":"method"}],"concat":[{"__symbolic":"method"}],"replaceSubjects":[{"__symbolic":"method"}],"replaceIndexes":[{"__symbolic":"method"}],"replaceClassifications":[{"__symbolic":"method"}],"replaceOrganizations":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FilterContainerComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"toco-catalog-filters-container","template":"<!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutAlign.xs=\"center center\" fxLayoutGap=\"1em\" fxLayoutGap.xs=\"0\"> -->\n\n  <ng-template toco-Filter></ng-template>\n\n<!-- </div> -->\n\n<button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>add</mat-icon>\n</button>\n  <mat-menu #menu=\"matMenu\" >\n    <ng-container *ngFor=\"let item of filters_data,let i=index\">\n        <ng-container *ngIf=\"item.is_enabled\">\n          <button mat-menu-item (click)=\"addFilter(i)\">\n            {{item.name}}\n          </button>\n        </ng-container>\n    </ng-container>\n    \n\n    \n  </mat-menu>","styles":[".width-100{width:100%}.mat-menu-item{height:37px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":29,"character":50},{"__symbolic":"reference","name":"FilterContainerService"},{"__symbolic":"reference","name":"CatalogService"},{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":33,"character":23},{"__symbolic":"reference","name":"Environment"}]}],"ngOnInit":[{"__symbolic":"method"}],"addOperator":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"toco-terms","template":"<mat-card>\n    <mat-card-header>\n        <mat-card-title>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between none\">\n                Términos\n                <ng-container *ngIf=\"currentVocab\"> de {{ currentVocab.human_name}} </ng-container>\n\n                <button mat-icon-button *ngIf=\"currentVocab && hasPermission('add')\" (click)=\"addTerm()\"\n                    matTooltip=\"Adicionar Término\">\n                    <mat-icon>library_add</mat-icon>\n                </button>\n\n            </div>\n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content [style.overflow]=\"'auto'\" [style.height]=\"'25em'\">\n        <mat-spinner *ngIf=\"loading; else elseTemplate\"></mat-spinner>\n\n        <ng-template #elseTemplate>\n            <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"padd\">\n                <mat-tree-node class=\"hover\" *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding\n                    fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <button mat-icon-button disabled></button>\n                        {{ node.name }}\n                    </div> \n                    <button mat-icon-button *ngIf=\"currentVocab && hasPermission('edit', currentVocab.id)\" (click)=\"editTerm(node)\" matTooltip=\"Editar\">\n                    <mat-icon>edit</mat-icon>\n                    </button>\n                </mat-tree-node>\n\n                <mat-tree-node class=\"hover\" *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n                    <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.name\">\n                        <mat-icon class=\"mat-icon-rtl-mirror\">\n                            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                        </mat-icon>\n                    </button>\n                    <div class=\"item-width\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                        {{ node.name }}\n                        <div>\n                            <button mat-icon-button *ngIf=\"currentVocab && hasPermission('edit', currentVocab.id)\" (click)=\"editTerm(node)\" matTooltip=\"Editar\">\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <!-- <button mat-icon-button (click)=\"deleteTerm(node)\" matTooltip=\"Eliminar\">\n                                <mat-icon>delete</mat-icon>\n                            </button> -->\n                        </div>\n                    </div>\n\n                </mat-tree-node>\n            </mat-tree>\n        </ng-template>\n    </mat-card-content>\n</mat-card>","styles":[".type-icon{color:#757575;margin-right:5px}.item-width{width:100%}.padd{padding:.7em}.hover:hover{transform:scale(1.02);box-shadow:0 0 10px 0 rgba(0,0,0,.4);border-radius:3px}"]}]}],"members":{"currentVocab":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaxonomyService"},{"__symbolic":"reference","module":"angular-oauth2-oidc","name":"OAuthStorage","line":83,"character":31},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":84,"character":23},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":85,"character":27}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"transformer":[{"__symbolic":"method"}],"getLevel":[{"__symbolic":"method"}],"isExpandable":[{"__symbolic":"method"}],"hasChild":[{"__symbolic":"method"}],"getChildren":[{"__symbolic":"method"}],"addTerm":[{"__symbolic":"method"}],"editTerm":[{"__symbolic":"method"}],"openTermDialog":[{"__symbolic":"method"}],"deleteTerm":[{"__symbolic":"method"}],"getAuthenticatedUserPermissions":[{"__symbolic":"method"}],"hasPermission":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"toco-term-generic","template":"\n<toco-form-container\n    [panelsContent]=\"panels\"\n    [useAccordion]=\"'false'\"\n    [action]=\"action\"\n    [actionLabel]=\"actionLabel\"\n    [formGroup]=\"formGroup\"\n></toco-form-container>\n\n<h2 *ngIf=\"!hasService\"> No Service</h2>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":48,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":48,"character":10}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":46,"character":24},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":47,"character":20},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"_getContent":[{"__symbolic":"method"}],"_getTermDataObject":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"toco-terms-viewer","template":"<mat-chip-list>\n  <mat-chip *ngFor=\"let term of terms\">{{ term.name }}</mat-chip>\n</mat-chip-list>\n","styles":[""]}]}],"members":{"vocabulary_id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"ids":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TaxonomyService"}]}],"ngOnInit":[{"__symbolic":"method"}]}}},"origins":{"TocoLibService":"./lib/toco-lib.service","TocoLibComponent":"./lib/toco-lib.component","TocoLibModule":"./lib/toco-lib.module","AngularMaterialModule":"./lib/angular-material/angular-material.module","storageFactory":"./lib/authentication/authentication.module","AuthenticationModule":"./lib/authentication/authentication.module","authConfig":"./lib/authentication/auth-config","OauthInfo":"./lib/authentication/authentication.component","AuthenticationComponent":"./lib/authentication/authentication.component","AuthBackend":"./lib/authentication/authentication.service","OauthAuthenticationService":"./lib/authentication/authentication.service","SimpleAuthenticationService":"./lib/authentication/authentication.service","BackendModule":"./lib/backend/backend.module","CatalogService":"./lib/backend/catalog.service","NotificationService":"./lib/backend/notification.service","ROOT_API":"./lib/backend/organization.service","ENDPOINT_APIS":"./lib/backend/organization.service","OrganizationService":"./lib/backend/organization.service","OrganizationServiceNoAuth":"./lib/backend/organization.service","SearchService":"./lib/backend/search.service","SourceService":"./lib/backend/source.service","SourceServiceNoAuth":"./lib/backend/source.service","TaxonomyService":"./lib/backend/taxonomy.service","UserProfileService":"./lib/backend/user-profile.service","CoreModule":"./lib/core/core.module","BodyComponent":"./lib/core/body/body.component","Error404Component":"./lib/core/error404/error404.component","FooterComponent":"./lib/core/footer/footer.component","HomeComponent":"./lib/core/home/home.component","InfoCardComponent":"./lib/core/info-card/info-card.component","JournalCardComponent":"./lib/core/journal-card/journal-card.component","NavComponent":"./lib/core/nav/nav.component","MenuItem":"./lib/core/nav/nav.component","PageHeaderComponent":"./lib/core/page-header/page-header.component","PageNotFoundComponent":"./lib/core/page-not-found/page-not-found.component","SceibaAppsComponent":"./lib/core/sceiba-apps/sceiba-apps.component","SortDirection":"./lib/core/services/backend-data-source","FilterControls":"./lib/core/services/backend-data-source","FilterValues":"./lib/core/services/backend-data-source","PageRequest":"./lib/core/services/backend-data-source","Page":"./lib/core/services/backend-data-source","BackendDataSourceFunction":"./lib/core/services/backend-data-source","filterPredicate":"./lib/core/services/backend-data-source","sortingDataAccessor":"./lib/core/services/backend-data-source","sortData":"./lib/core/services/backend-data-source","HTTP_INTERCEPTOR_PROVIDERS":"./lib/core/services/http-interceptor.order","CachingInterceptor":"./lib/core/services/http.interceptor","Response":"./lib/core/services/http.service","ResponseStatus":"./lib/core/services/http.service","HttpService":"./lib/core/services/http.service","IconService":"./lib/core/services/icon.service","MessageService":"./lib/core/services/message.service","CachableUrl":"./lib/core/services/request-cache-different-time.service","RequestCacheEntry":"./lib/core/services/request-cache-different-time.service","RequestCacheDifferentTimeWithMap":"./lib/core/services/request-cache-different-time.service","CACHABLE_URL_PROVIDER":"./lib/core/services/request-cache-different-time.service","REQUEST_CACHE_DIFFERENT_TIME_WITH_MAP_PROVIDER":"./lib/core/services/request-cache-different-time.service","REFRESH_X_CACHE":"./lib/core/services/request-cache.service","Cachable":"./lib/core/services/request-cache.service","RequestCache":"./lib/core/services/request-cache.service","UserQuery":"./lib/core/services/test-backend-data-source.service","UserService":"./lib/core/services/test-backend-data-source.service","Feature":"./lib/core/utils/road-map/road-map.component","Product":"./lib/core/utils/road-map/road-map.component","Result":"./lib/core/utils/road-map/road-map.component","ChartBar":"./lib/core/utils/road-map/road-map.component","EntryElement":"./lib/core/utils/road-map/road-map.component","RoadMapComponent":"./lib/core/utils/road-map/road-map.component","RoadMapSceibaComponent":"./lib/core/utils/road-map-sceiba/road-map-sceiba.component","GetViewContainerDirective":"./lib/core/utils/get-view-container.directive","MAX_SAFE_INTEGER":"./lib/core/utils/helpers","MARKDOWN_FILE_EXTENSION":"./lib/core/utils/helpers","Params":"./lib/core/utils/helpers","ActionText":"./lib/core/utils/helpers","ChildControlsPath":"./lib/core/utils/helpers","LanguageTexts":"./lib/core/utils/helpers","LanguageAbbrs":"./lib/core/utils/helpers","LANGUAGE_TEXTS_LIST":"./lib/core/utils/helpers","LANGUAGE_ABBRS_LIST":"./lib/core/utils/helpers","convertLangFromStringToNumber":"./lib/core/utils/helpers","convertLangFromNumberToString":"./lib/core/utils/helpers","getPathWithLangExtension":"./lib/core/utils/helpers","isDescendant":"./lib/core/utils/helpers","cloneValue":"./lib/core/utils/helpers","cloneValueToUndefined":"./lib/core/utils/helpers","logError":"./lib/core/utils/helpers","logComplete":"./lib/core/utils/helpers","getHttpEventTypeToString":"./lib/core/utils/helpers","HandlerComponent":"./lib/core/utils/message-handler","StatusCode":"./lib/core/utils/message-handler","DialogMessageData":"./lib/core/utils/message-handler","DialogDeleteConfirmMessageData":"./lib/core/utils/message-handler","DialogContentComponent":"./lib/core/utils/message-handler","DialogDeleteConfirmComponent":"./lib/core/utils/message-handler","MessageHandler":"./lib/core/utils/message-handler","ProgressComponent":"./lib/core/utils/progress","RequiredProperty":"./lib/core/utils/validator","ExtraValidators":"./lib/core/utils/validator","EqualLengthDirective":"./lib/core/utils/validator","Environment":"./lib/core/env","MetadataService":"./lib/core/metadata.service","EntitiesModule":"./lib/entities/entities.module","EntityBase":"./lib/entities/common","Entity":"./lib/entities/common","Identifier":"./lib/entities/common","IdentifierSchemas":"./lib/entities/common","Links":"./lib/entities/common","AggrBucket":"./lib/entities/common","Aggr":"./lib/entities/common","Hit":"./lib/entities/common","HitList":"./lib/entities/common","SearchResponse":"./lib/entities/common","CategoryQuestionType":"./lib/entities/evaluation.entity","CategoryQuestion":"./lib/entities/evaluation.entity","SectionCategory":"./lib/entities/evaluation.entity","SurveySection":"./lib/entities/evaluation.entity","JournalGeneralData":"./lib/entities/evaluation.entity","Evaluation":"./lib/entities/evaluation.entity","EvaluationOnlyAnswer":"./lib/entities/evaluation.entity","MainInstitution":"./lib/entities/inst-repo.entity","InstitutionalRepository":"./lib/entities/inst-repo.entity","mainInstEmpty":"./lib/entities/inst-repo.entity","instRepoEmpty":"./lib/entities/inst-repo.entity","JournalReference":"./lib/entities/journal_reference.entity","Reference":"./lib/entities/journal_reference.entity","SocialNetworks":"./lib/entities/journal.entity","IssnOrg":"./lib/entities/journal.entity","ISSN":"./lib/entities/journal.entity","RNPS":"./lib/entities/journal.entity","JournalData":"./lib/entities/journal.entity","Journal":"./lib/entities/journal.entity","JournalVersion":"./lib/entities/journal.entity","OrganizationRelationships":"./lib/entities/organization.entity","LabelDiffLang":"./lib/entities/organization.entity","Redirected":"./lib/entities/organization.entity","Relationship":"./lib/entities/organization.entity","GeoNamesAdmin":"./lib/entities/organization.entity","GeoNamesCity":"./lib/entities/organization.entity","Address":"./lib/entities/organization.entity","RedirectPropertiesIdtype":"./lib/entities/organization.entity","RedirectProperties":"./lib/entities/organization.entity","Redirect":"./lib/entities/organization.entity","Organization":"./lib/entities/organization.entity","Person":"./lib/entities/person.entity","Role":"./lib/entities/person.entity","User":"./lib/entities/person.entity","UserSourcesRoles":"./lib/entities/person.entity","UserProfile":"./lib/entities/person.entity","Record":"./lib/entities/record.entity","Repository":"./lib/entities/repository.entity","RepositorySet":"./lib/entities/repository.entity","HarvestedItem":"./lib/entities/repository.entity","SourceSystems":"./lib/entities/source.entity","SourceTypes":"./lib/entities/source.entity","SourceOrganizationRole":"./lib/entities/source.entity","SourcePersonRole":"./lib/entities/source.entity","SourceStatus":"./lib/entities/source.entity","SourceOrganization":"./lib/entities/source.entity","SourceClasification":"./lib/entities/source.entity","SavingInfoSchema":"./lib/entities/source.entity","SourceData":"./lib/entities/source.entity","SourceVersion":"./lib/entities/source.entity","Source":"./lib/entities/source.entity","VocabulariesInmutableNames":"./lib/entities/taxonomy.entity","Term":"./lib/entities/taxonomy.entity","TermInstitutionData":"./lib/entities/taxonomy.entity","TermIndexData":"./lib/entities/taxonomy.entity","Vocabulary":"./lib/entities/taxonomy.entity","TermNode":"./lib/entities/taxonomy.entity","FiltersModule":"./lib/filters/filters.module","BooleanFilterComponent":"./lib/filters/boolean-filter/boolean-filter.component","FilterContainerComponent":"./lib/filters/filter-container/filter-container.component","SelectAutocompleteFilterComponent":"./lib/filters/select-autocomplete-filter/select-autocomplete-filter.component","ValueInformation":"./lib/filters/select-autocomplete-filter/select-autocomplete-filter.component","SelectFilterOldComponent":"./lib/filters/select-filter/select-filter.component","TitleFilterComponent":"./lib/filters/title-filter/title-filter.component","FlatTreeNodeFilter":"./lib/filters/tree-filter/tree-filter.component","TreeFilterComponent":"./lib/filters/tree-filter/tree-filter.component","FilterContainerService":"./lib/filters/filter-container.service","FilterItem":"./lib/filters/filter-item","FilterHttpMap":"./lib/filters/filter-item","FilterComponent":"./lib/filters/filter.component","FilterDirective":"./lib/filters/filter.directive","FiltersService":"./lib/filters/filters.service","AutocompleteFilter":"./lib/filters/filters.service","TocoFormsModule":"./lib/forms/forms.module","ActionButtonComponent":"./lib/forms/action/button/button-action.component","OperationAction":"./lib/forms/action/action.control","isDisabledDefault":"./lib/forms/action/action.control","clickDefault":"./lib/forms/action/action.control","ActionContent":"./lib/forms/action/action.control","ActionControl":"./lib/forms/action/action.control","ComponentFactory_Depr":"./lib/forms/component-factory-depr/component-factory-depr.component","FormContainerAction":"./lib/forms/container/form-container/form-container.component","PanelContent_Depr":"./lib/forms/container/form-container/form-container.component","FormContainerComponent":"./lib/forms/container/form-container/form-container.component","FormContainerService":"./lib/forms/container/form-container/form-container.service","PanelContent":"./lib/forms/container/panel/panel-container.component","ContainerPanelComponent":"./lib/forms/container/panel/panel-container.component","PanelAction":"./lib/forms/container/panel-action/panel-action-container.component","PanelActionContent":"./lib/forms/container/panel-action/panel-action-container.component","ContainerPanelActionComponent":"./lib/forms/container/panel-action/panel-action-container.component","ContainerSimpleComponent":"./lib/forms/container/simple/simple-container.component","CssStyles":"./lib/forms/container/table/table.component","CellContentWrap":"./lib/forms/container/table/table.component","TableAction":"./lib/forms/container/table/table.component","TableContent":"./lib/forms/container/table/table.component","defaultTableContent":"./lib/forms/container/table/table.component","TableComponent":"./lib/forms/container/table/table.component","ContainerContent":"./lib/forms/container/container.control","ContainerControl":"./lib/forms/container/container.control","ContainerLabelDiffLangComponent":"./lib/forms/container-specific/label-diff-lang/label-diff-lang-container.component","DatepickerComponent":"./lib/forms/experimental/datepicker/datepicker.component","YEAR_MODE_FORMATS":"./lib/forms/experimental/datepicker-year/datepicker-year.component","DatepickerYearComponent":"./lib/forms/experimental/datepicker-year/datepicker-year.component","CheckboxComponent":"./lib/forms/experimental/checkbox/checkbox.component","SelectComponent":"./lib/forms/experimental/select/select.component","SelectFilterComponent":"./lib/forms/experimental/select-filter/select-filter.component","SelectOrgsComponent":"./lib/forms/experimental/select-orgs/select-orgs.component","SelectOptionNode":"./lib/forms/experimental/select-tree/select-tree.component","FlatTreeNode":"./lib/forms/experimental/select-tree/select-tree.component","SelectTreeComponent":"./lib/forms/experimental/select-tree/select-tree.component","TermParentComponent":"./lib/forms/experimental/term-parent/term-parent.component","TextareaComponent":"./lib/forms/experimental/textarea/textarea.component","VocabularyComponent":"./lib/forms/experimental/vocabulary/vocabulary.component","VocabularyTreeComponent":"./lib/forms/experimental/vocabulary-tree/vocabulary-tree.component","InputBoolComponent":"./lib/forms/input/bool/bool-input.component","EmailValue":"./lib/forms/input/email/email-value","InputEmailComponent":"./lib/forms/input/email/email-input.component","IdentifierValue":"./lib/forms/input/identifier/identifier-value","InputIdentifierComponent":"./lib/forms/input/identifier/identifier-input.component","IssnType_Abbreviation":"./lib/forms/input/issn/issn-value","IssnType_Label":"./lib/forms/input/issn/issn-value","IssnValue":"./lib/forms/input/issn/issn-value","InputIssnComponent":"./lib/forms/input/issn/issn-input.component","InputNumberComponent":"./lib/forms/input/number/number-input.component","RnpsValue":"./lib/forms/input/rnps/rnps-value","InputRnpsComponent":"./lib/forms/input/rnps/rnps-input.component","SelectOption":"./lib/forms/input/select/select-input.component","SelectContent":"./lib/forms/input/select/select-input.component","InputSelectComponent":"./lib/forms/input/select/select-input.component","InputTextComponent":"./lib/forms/input/text/text-input.component","UrlValue":"./lib/forms/input/url/url-value","InputUrlComponent":"./lib/forms/input/url/url-input.component","TextInputAppearance":"./lib/forms/input/input.control","InputContent":"./lib/forms/input/input.control","IInternalComponent":"./lib/forms/input/input.control","InputControl":"./lib/forms/input/input.control","FormSection":"./lib/forms/form-field.control","ValidatorArguments":"./lib/forms/form-field.control","TextAlign":"./lib/forms/form-field.control","ContentPosition":"./lib/forms/form-field.control","IconSource":"./lib/forms/form-field.control","IconValue":"./lib/forms/form-field.control","HintPosition":"./lib/forms/form-field.control","HintValue":"./lib/forms/form-field.control","FormFieldType":"./lib/forms/form-field.control","FormFieldContent":"./lib/forms/form-field.control","cloneFormControl":"./lib/forms/form-field.control","cloneFormSection":"./lib/forms/form-field.control","FormFieldControl":"./lib/forms/form-field.control","HarvesterModule":"./lib/harvester/harvester.module","HarvesterComponent":"./lib/harvester/harvester/harvester.component","HarvesterFiltersComponent":"./lib/harvester/harvester-filters/harvester-filters.component","HarvesterService":"./lib/harvester/harvester.service","RepositoriesComponent":"./lib/harvester/repositories/repositories.component","RepositoryComponent":"./lib/harvester/repository/repository.component","NotificationModule":"./lib/notification/notification.module","NotificationListComponent":"./lib/notification/notification-list/notification-list.component","NotificationButtonComponent":"./lib/notification/notification-button/notification-button.component","NotificationInfo":"./lib/notification/notification-button/notification-button.component","OrganizationsModule":"./lib/organizations/organizations.module","OrgAddComponent":"./lib/organizations/org-add/org-add.component","OrgEditComponent":"./lib/organizations/org-edit/org-edit.component","OrgSearchComponent":"./lib/organizations/org-search/org-search.component","OrganizationFlatNode":"./lib/organizations/org-tree-viewer/org-tree-viewer.component","OrganizationDataSource":"./lib/organizations/org-tree-viewer/org-tree-viewer.component","OrgTreeViewerComponent":"./lib/organizations/org-tree-viewer/org-tree-viewer.component","RelationshipLink":"./lib/organizations/org-view/org-view.component","RelationshipsValue":"./lib/organizations/org-view/org-view.component","OrgViewComponent":"./lib/organizations/org-view/org-view.component","PersonModule":"./lib/person/person.module","PersonComponent":"./lib/person/person/person.component","PersonViewComponent":"./lib/person/person-view/person-view.component","SearchModule":"./lib/search/search.module","AggregationsSelection":"./lib/search/aggregations/aggregations.component","AggregationsComponent":"./lib/search/aggregations/aggregations.component","QueryInputComponent":"./lib/search/query-input/query-input.component","RecordComponent":"./lib/search/record/record.component","RecordListComponent":"./lib/search/record-list/record-list.component","QueryParamKey":"./lib/search/search-utils","SharedModule":"./lib/shared/shared.module","SourcesModule":"./lib/sources/sources.module","JournalEditComponent":"./lib/sources/source-edit/journal-edit/journal-edit.component","JournalDataType":"./lib/sources/journal-view/journal-view.component","JournalViewComponent":"./lib/sources/journal-view/journal-view.component","CatalogComponent":"./lib/sources/catalog/catalog.component","DialogCatalogJournalInfoDialog":"./lib/sources/catalog/catalog.component","SourcesListComponent":"./lib/sources/sources-list/sources-list.component","StaticsModule":"./lib/statics/statics.module","StaticChipsComponent":"./lib/statics/chips/chips-static.component","PeriodicElement":"./lib/statics/table/table-static.component","StaticTableComponent":"./lib/statics/table/table-static.component","StaticTextComponent":"./lib/statics/text/text-static.component","TaxonomyModule":"./lib/taxonomy/taxonomy.module","TermHelper":"./lib/taxonomy/utils","TaxonomyComponent":"./lib/taxonomy/taxonomy/taxonomy.component","VocabularyDialogComponent":"./lib/taxonomy/vocabularies/vocabularies.component","VocabulariesComponent":"./lib/taxonomy/vocabularies/vocabularies.component","ɵa":"./lib/core/core-routing.module","ɵb":"./lib/harvester/harvester-routing.module","ɵc":"./lib/organizations/org-view/org-view-accordion/org-view-accordion.component","ɵd":"./lib/organizations/org-view/org-view-address/org-view-address.component","ɵe":"./lib/organizations/org-view/org-view-geo-names-city/org-view-geo-names-city.component","ɵf":"./lib/organizations/org-view/org-view-relationship/org-view-relationship.component","ɵg":"./lib/organizations/org-table-edit/org-table-edit.component","ɵh":"./lib/sources/journal-view/journal-view-version-term.component","ɵi":"./lib/sources/journal-view/journal-view-info.component","ɵj":"./lib/sources/journal-view/journal-view-info.component","ɵk":"./lib/sources/source-edit/source-organizations/source-organizations.component","ɵl":"./lib/sources/source-edit/source-organizations/source-organizations.component","ɵm":"./lib/sources/source-edit/source-organizations/source-organizations.component","ɵn":"./lib/sources/source-edit/source-indexes/source-indexes.component","ɵo":"./lib/sources/source-edit/source-indexes/source-indexes.component","ɵp":"./lib/sources/journal-view/journal-view-version-field.component","ɵq":"./lib/sources/journal-view/journal-view-version.component","ɵr":"./lib/sources/catalog-filters/catalog-filters.component","ɵs":"./lib/taxonomy/terms/terms.component","ɵt":"./lib/taxonomy/term-generic/term-generic.component","ɵu":"./lib/taxonomy/terms-viewer/terms-viewer.component"},"importAs":"toco-lib"}