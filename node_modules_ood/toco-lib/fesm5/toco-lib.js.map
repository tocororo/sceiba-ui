{"version":3,"file":"toco-lib.js","sources":["ng://toco-lib/lib/toco-lib.service.ts","ng://toco-lib/lib/toco-lib.component.ts","ng://toco-lib/lib/toco-lib.module.ts","ng://toco-lib/lib/angular-material/angular-material.module.ts","ng://toco-lib/lib/shared/shared.module.ts","ng://toco-lib/lib/core/env.ts","ng://toco-lib/lib/core/body/body.component.ts","ng://toco-lib/lib/core/error404/error404.component.ts","ng://toco-lib/lib/core/footer/footer.component.ts","ng://toco-lib/lib/core/metadata.service.ts","ng://toco-lib/lib/core/home/home.component.ts","ng://toco-lib/lib/entities/entities.module.ts","ng://toco-lib/lib/entities/common.ts","ng://toco-lib/lib/entities/evaluation.entity.ts","ng://toco-lib/lib/entities/inst-repo.entity.ts","ng://toco-lib/lib/entities/journal_reference.entity.ts","ng://toco-lib/lib/entities/organization.entity.ts","ng://toco-lib/lib/entities/person.entity.ts","ng://toco-lib/lib/entities/source.entity.ts","ng://toco-lib/lib/entities/journal.entity.ts","ng://toco-lib/lib/entities/record.entity.ts","ng://toco-lib/lib/entities/repository.entity.ts","ng://toco-lib/lib/entities/taxonomy.entity.ts","ng://toco-lib/lib/core/info-card/info-card.component.ts","ng://toco-lib/lib/core/journal-card/journal-card.component.ts","ng://toco-lib/lib/core/nav/nav.component.ts","ng://toco-lib/lib/core/page-header/page-header.component.ts","ng://toco-lib/lib/core/page-not-found/page-not-found.component.ts","ng://toco-lib/lib/core/core-routing.module.ts","ng://toco-lib/lib/core/utils/road-map/road-map.component.ts","ng://toco-lib/lib/core/utils/road-map-sceiba/road-map-sceiba.component.ts","ng://toco-lib/lib/core/utils/get-view-container.directive.ts","ng://toco-lib/lib/core/utils/validator.ts","ng://toco-lib/lib/core/utils/message-handler.ts","ng://toco-lib/lib/core/utils/progress.ts","ng://toco-lib/lib/core/sceiba-apps/sceiba-apps.component.ts","ng://toco-lib/lib/core/core.module.ts","ng://toco-lib/lib/core/utils/helpers.ts","ng://toco-lib/lib/core/services/backend-data-source.ts","ng://toco-lib/lib/core/services/http-interceptor.order.ts","ng://toco-lib/lib/core/services/request-cache.service.ts","ng://toco-lib/lib/core/services/http.interceptor.ts","ng://toco-lib/lib/core/services/http.service.ts","ng://toco-lib/lib/core/services/icon.service.ts","ng://toco-lib/lib/core/services/message.service.ts","ng://toco-lib/lib/core/services/request-cache-different-time.service.ts","ng://toco-lib/lib/core/services/test-backend-data-source.service.ts","ng://toco-lib/lib/backend/user-profile.service.ts","ng://toco-lib/lib/authentication/authentication.service.ts","ng://toco-lib/lib/authentication/authentication.component.ts","ng://toco-lib/lib/authentication/authentication.module.ts","ng://toco-lib/lib/authentication/auth-config.ts","ng://toco-lib/lib/backend/taxonomy.service.ts","ng://toco-lib/lib/backend/catalog.service.ts","ng://toco-lib/lib/backend/backend.module.ts","ng://toco-lib/lib/backend/notification.service.ts","ng://toco-lib/lib/backend/organization.service.ts","ng://toco-lib/lib/backend/search.service.ts","ng://toco-lib/lib/backend/source.service.ts","ng://toco-lib/lib/filters/filter-item.ts","ng://toco-lib/lib/filters/filters.service.ts","ng://toco-lib/lib/filters/filter-container.service.ts","ng://toco-lib/lib/filters/boolean-filter/boolean-filter.component.ts","ng://toco-lib/lib/filters/filter.directive.ts","ng://toco-lib/lib/filters/title-filter/title-filter.component.ts","ng://toco-lib/lib/filters/select-filter/select-filter.component.ts","ng://toco-lib/lib/filters/select-autocomplete-filter/select-autocomplete-filter.component.ts","ng://toco-lib/lib/filters/tree-filter/tree-filter.component.ts","ng://toco-lib/lib/filters/filter-container/filter-container.component.ts","ng://toco-lib/lib/filters/filters.module.ts","ng://toco-lib/lib/filters/filter.component.ts","ng://toco-lib/lib/forms/form-field.control.ts","ng://toco-lib/lib/forms/action/action.control.ts","ng://toco-lib/lib/forms/action/button/button-action.component.ts","ng://toco-lib/lib/forms/component-factory-depr/component-factory-depr.component.ts","ng://toco-lib/lib/forms/container/container.control.ts","ng://toco-lib/lib/forms/container/form-container/form-container.component.ts","ng://toco-lib/lib/forms/container/panel/panel-container.component.ts","ng://toco-lib/lib/forms/container/simple/simple-container.component.ts","ng://toco-lib/lib/forms/container/table/table.component.ts","ng://toco-lib/lib/forms/container-specific/label-diff-lang/label-diff-lang-container.component.ts","ng://toco-lib/lib/forms/input/input.control.ts","ng://toco-lib/lib/forms/input/bool/bool-input.component.ts","ng://toco-lib/lib/forms/input/email/email-value.ts","ng://toco-lib/lib/forms/input/email/email-input.component.ts","ng://toco-lib/lib/forms/input/identifier/identifier-value.ts","ng://toco-lib/lib/forms/input/identifier/identifier-input.component.ts","ng://toco-lib/lib/forms/input/issn/issn-value.ts","ng://toco-lib/lib/forms/input/issn/issn-input.component.ts","ng://toco-lib/lib/forms/input/number/number-input.component.ts","ng://toco-lib/lib/forms/input/rnps/rnps-value.ts","ng://toco-lib/lib/forms/input/rnps/rnps-input.component.ts","ng://toco-lib/lib/forms/input/select/select-input.component.ts","ng://toco-lib/lib/forms/input/text/text-input.component.ts","ng://toco-lib/lib/forms/input/url/url-value.ts","ng://toco-lib/lib/forms/input/url/url-input.component.ts","ng://toco-lib/lib/forms/experimental/vocabulary/vocabulary.component.ts","ng://toco-lib/lib/forms/experimental/vocabulary-tree/vocabulary-tree.component.ts","ng://toco-lib/lib/forms/experimental/term-parent/term-parent.component.ts","ng://toco-lib/lib/forms/experimental/select/select.component.ts","ng://toco-lib/lib/forms/experimental/textarea/textarea.component.ts","ng://toco-lib/lib/forms/experimental/select-filter/select-filter.component.ts","ng://toco-lib/lib/forms/experimental/select-tree/select-tree.component.ts","ng://toco-lib/lib/forms/experimental/datepicker/datepicker.component.ts","ng://toco-lib/lib/forms/experimental/checkbox/checkbox.component.ts","ng://toco-lib/lib/forms/container/panel-action/panel-action-container.component.ts","ng://toco-lib/lib/forms/experimental/datepicker-year/datepicker-year.component.ts","ng://toco-lib/lib/forms/experimental/select-orgs/select-orgs.component.ts","ng://toco-lib/lib/forms/forms.module.ts","ng://toco-lib/lib/forms/container/form-container/form-container.service.ts","ng://toco-lib/lib/harvester/harvester/harvester.component.ts","ng://toco-lib/lib/harvester/harvester-filters/harvester-filters.component.ts","ng://toco-lib/lib/harvester/repositories/repositories.component.ts","ng://toco-lib/lib/harvester/harvester-routing.module.ts","ng://toco-lib/lib/harvester/repository/repository.component.ts","ng://toco-lib/lib/harvester/harvester.service.ts","ng://toco-lib/lib/harvester/harvester.module.ts","ng://toco-lib/lib/notification/notification-button/notification-button.component.ts","ng://toco-lib/lib/notification/notification-list/notification-list.component.ts","ng://toco-lib/lib/notification/notification.module.ts","ng://toco-lib/lib/statics/chips/chips-static.component.ts","ng://toco-lib/lib/statics/table/table-static.component.ts","ng://toco-lib/lib/statics/text/text-static.component.ts","ng://toco-lib/lib/statics/statics.module.ts","ng://toco-lib/lib/organizations/org-view/org-view-accordion/org-view-accordion.component.ts","ng://toco-lib/lib/organizations/org-view/org-view.component.ts","ng://toco-lib/lib/organizations/org-view/org-view-address/org-view-address.component.ts","ng://toco-lib/lib/organizations/org-view/org-view-geo-names-city/org-view-geo-names-city.component.ts","ng://toco-lib/lib/organizations/org-view/org-view-relationship/org-view-relationship.component.ts","ng://toco-lib/lib/organizations/org-edit/org-edit.component.ts","ng://toco-lib/lib/organizations/org-add/org-add.component.ts","ng://toco-lib/lib/organizations/org-search/org-search.component.ts","ng://toco-lib/lib/organizations/org-table-edit/org-table-edit.component.ts","ng://toco-lib/lib/organizations/org-tree-viewer/org-tree-viewer.component.ts","ng://toco-lib/lib/organizations/organizations.module.ts","ng://toco-lib/lib/person/person/person.component.ts","ng://toco-lib/lib/person/person-view/person-view.component.ts","ng://toco-lib/lib/person/person.module.ts","ng://toco-lib/lib/search/record/record.component.ts","ng://toco-lib/lib/search/aggregations/aggregations.component.ts","ng://toco-lib/lib/search/query-input/query-input.component.ts","ng://toco-lib/lib/search/record-list/record-list.component.ts","ng://toco-lib/lib/search/search.module.ts","ng://toco-lib/lib/search/search-utils.ts","ng://toco-lib/lib/sources/journal-view/journal-view.component.ts","ng://toco-lib/lib/sources/source-edit/journal-edit/journal-edit.component.ts","ng://toco-lib/lib/sources/journal-view/journal-view-version-term.component.ts","ng://toco-lib/lib/sources/source-edit/source-indexes/source-indexes.component.ts","ng://toco-lib/lib/sources/source-edit/source-organizations/source-organizations.component.ts","ng://toco-lib/lib/sources/journal-view/journal-view-info.component.ts","ng://toco-lib/lib/sources/journal-view/journal-view-version-field.component.ts","ng://toco-lib/lib/sources/journal-view/journal-view-version.component.ts","ng://toco-lib/lib/sources/catalog-filters/catalog-filters.component.ts","ng://toco-lib/lib/sources/catalog/catalog.component.ts","ng://toco-lib/lib/sources/sources-list/sources-list.component.ts","ng://toco-lib/lib/sources/sources.module.ts","ng://toco-lib/lib/taxonomy/vocabularies/vocabularies.component.ts","ng://toco-lib/lib/taxonomy/term-generic/term-generic.component.ts","ng://toco-lib/lib/taxonomy/terms/terms.component.ts","ng://toco-lib/lib/taxonomy/taxonomy/taxonomy.component.ts","ng://toco-lib/lib/taxonomy/terms-viewer/terms-viewer.component.ts","ng://toco-lib/lib/taxonomy/taxonomy.module.ts","ng://toco-lib/lib/taxonomy/utils.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TocoLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-toco-lib',\n  template: `\n    <p>\n      toco-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class TocoLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TocoLibComponent } from './toco-lib.component';\n\n\n\n@NgModule({\n  declarations: [TocoLibComponent],\n  imports: [\n  ],\n  exports: [TocoLibComponent]\n})\nexport class TocoLibModule { }\n","\nimport { NgModule } from '@angular/core';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatOptionModule, MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper'\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * A module that contains all angular material modules that are needed. \n */\n@NgModule({\n    imports: [\n        LayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatGridListModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatSidenavModule,\n        MatTabsModule,\n        MatChipsModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSlideToggleModule,\n        MatSelectModule,\n        MatOptionModule,\n        MatAutocompleteModule,\n        MatExpansionModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTreeModule,\n        MatBadgeModule,\n        MatStepperModule,\n        MatRippleModule,\n        MatDividerModule,\n    ],\n\n    exports: [\n        LayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatGridListModule,\n        MatSnackBarModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatSidenavModule,\n        MatTabsModule,\n        MatChipsModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSlideToggleModule,\n        MatSelectModule,\n        MatOptionModule,\n        MatAutocompleteModule,\n        MatExpansionModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTreeModule,\n        MatBadgeModule,\n        MatStepperModule,\n        MatRippleModule,\n        MatDividerModule,\n    ]\n})\nexport class AngularMaterialModule\n{ }\n","\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AngularMaterialModule } from '../angular-material/public-api';\n\n/**\n * A module that contains all shared modules.\n */\n@NgModule({\n    declarations: [\n    ],\n\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        FlexLayoutModule,\n        AngularMaterialModule\n    ],\n\n    exports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        FlexLayoutModule,\n        AngularMaterialModule\n    ],\n\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class SharedModule\n{ }\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nexport abstract class Environment {\n  abstract readonly production: boolean;\n\n  abstract readonly sceibaHost: string;\n  abstract readonly sceibaApi: string;\n  abstract readonly cuorHost: string;\n  abstract readonly cuorApi: string;\n\n  abstract readonly appHost: string;\n  abstract readonly appName: string;\n\n  abstract readonly websiteUsername_Twitter: string;\n  abstract readonly websiteUsername_Facebook: string;\n\n  abstract readonly oauthRedirectUri: string;\n  abstract readonly oauthClientId: string;\n  abstract readonly oauthScope: string;\n\n  abstract readonly topOrganizationPID: string;\n\n  abstract readonly cachableUrls: Array<string>;\n\n  abstract readonly matomoUrl : string;\n  abstract readonly matomoSiteId : number;\n}\n\n// import { Injectable } from '@angular/core';\n\n// import { Params } from '../core/public-api';\n\n// @Injectable({\n//     providedIn: 'root'\n// })\n// export class Environment {\n\n//     public sceibaApi = '';\n//     public cuorApi = '';\n//     public sceibaHost = '';\n//     public cuorHost = '';\n//     public appHost = '';\n//     public appName = '';\n//     public pagesApi = '';\n//     public oauthRedirectUri = '';\n//     public oauthClientId = '';\n//     public oauthScope = '';\n//     public topOrganizationPID = '';\n//     public extraArgs: any = null;\n//     public user = null;\n\n//     /**\n//      * A collection of key/value elements, where the keys are cachable URLs,\n//      * and the values are maximum cache ages in milliseconds.\n//      */\n//     public cachableUrls: Params<number>;\n\n//     public constructor()\n//     { }\n// }\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'toco-body',\n    templateUrl: './body.component.html',\n    styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n\n    @Input()\n    body: string;\n\n    processed: string;\n\n    constructor()\n    { }\n\n    ngOnChanges(): void {\n        this.doReplace();\n    }\n\n    ngOnInit() {\n        if (this.body) {\n            this.doReplace();\n        }\n    }\n\n    doReplace() {\n        var find = \"/public/inline-images/\";\n        var replace = \"/public/inline-images/\";\n        var str = this.body.replace(find, replace);\n        this.processed = str;\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'toco-error404',\n    templateUrl: './error404.component.html',\n    styleUrls: ['./error404.component.scss']\n})\nexport class Error404Component implements OnInit\n{\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'toco-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    @Input()\n    public sites: Array< { name: string, url: string, useRouterLink: boolean } >;\n\n    @Input()\n    public information: Array< { name: string, url: string, useRouterLink: boolean } >;\n\n    @Input()\n    public image: string\n\n    public constructor() { }\n\n    public ngOnInit(): void {\n        if ( this.sites == undefined ) this.sites = new Array();\n        if ( this.information == undefined ) this.information = new Array();\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title, Meta } from '@angular/platform-browser';\n\nimport { Environment } from './env'\n\n/**\n * A service that is used to set the title and metadata of a route. \n * This service is important for things like configuring a Content Security Policy, \n * defining browser compatibility and security settings, setting HTTP Headers, \n * defining rich content for social sharing, and Search Engine Optimization (SEO). \n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetadataService\n{\n    public constructor(public bodyTitle: Title, public meta: Meta, private _router: Router, public env: Environment)\n    { }\n\n    /**\n     * Sets the page metadata for SEO and standard social networks. \n     * @param title The title to set. Maximum length 60-70 characters. \n     * @param description The description to set. Maximum length 155 characters. \n     * @param image The image to set. If the value is empty, then the image is not set. \n     * The image must be at least 280px in width and 150px in height; and must be less than 1Mb in size. \n     */\n    public setStandardMeta(title: string, description: string, image: string = \"\"): void\n    {\n        /* The canonical URL for your page. This should be the undecorated URL, \n        without session variables, user identifying parameters, or counters. */\n        let url: string = this.env.appHost + this._router.url;\n        //console.log('The URL for metadata is: ', url);\n        image = this.env.appHost + image;\n\n        /* Primary metadata. */\n\n        /* Maximum length 60-70 characters. */\n        this.bodyTitle.setTitle(title + \" | \" + this.env.appName);  /* Sets the title of the current HTML document. */\n        /* Maximum length 155 characters. */\n        this.meta.updateTag({ name: \"description\", content: description });\n\n        /* Schema.org markup for Google+. */\n\n        this.meta.updateTag({ itemprop: \"name\", title });\n        this.meta.updateTag({ itemprop: \"description\", content: description });\n        if (image) this.meta.updateTag({ itemprop: \"image\", content: image });\n\n        /* Twitter Card data */\n\n        this.meta.updateTag({ name: \"twitter:card\", content:\"summary_large_image\" });\n        /* Non-Essential, but required for analytics tool. */\n        this.meta.updateTag({ name: \"twitter:site\", content: this.env.websiteUsername_Twitter });  /* @website-username */\n        this.meta.updateTag({ name: \"twitter:title\", content: title });\n        this.meta.updateTag({ name: \"twitter:description\", content: description });\n        /* Twitter summary card with large image must be at least 280px x 150px. */\n        if (image) this.meta.updateTag({ name: \"twitter:image:src\", content: image });\n//        this.meta.updateTag({ name: \"twitter:image:alt\", content: \"Alt text for image...\" });\n\n        /* Open Graph data, Twitter, Facebook, and Linkedin. */\n\n        this.meta.updateTag({ property: \"og:title\", content: title });\n        this.meta.updateTag({ property: \"og:type\", content: \"website\" });\n        this.meta.updateTag({ property: \"og:url\", content: url });\n        if (image) this.meta.updateTag({ property: \"og:image\", content: image });\n        this.meta.updateTag({ property: \"og:description\", content: description });\n        this.meta.updateTag({ property: \"og:site_name\", content: this.env.appName });\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\nimport { MetadataService } from '../metadata.service';\n\n@Component({\n    selector: 'toco-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit\n{\n    constructor(private metadata: MetadataService)\n    { }\n    \n    ngOnInit()\n    {\n        this.metadata.setStandardMeta(\"Inicio\", \"\", \"\");\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { NgModule } from '@angular/core';\n\n@NgModule({ })\nexport class EntitiesModule\n{ }\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n/*** La idea de esta clase es tener un deserializador. */\nexport class EntityBase extends Object {\n  public deepcopy(data: any, exclude: string[] = []): void {\n    const keys: string[] = Object.keys(this);\n\n    for (const key of keys) {\n      if (data[key] && !exclude.includes(key)) {\n        // console.log('DEEEPCOPY OF : ', key, data[key])\n        // if(this.toBoolean(data[key])){\n        //   console.log('TO BOOLEAN IS TRUE !!!!!! ');\n        //   this[key] = data[key].toLowerCase() === 'true';\n        // } else {\n          // if (this[key] instanceof EntityBaseList) {\n          //   console.log('RECUSIVE CALL ON EntityBaseList',  this[key]);\n          //   this[key].deepcopy(data[key], exclude);\n          // } else{\n            if (this[key] instanceof EntityBase) {\n              console.log('RECUSIVE CALL ON EntityBase',  this[key]);\n              this[key].deepcopy(data[key], exclude);\n            }  else {\n              this[key] = data[key];\n            }\n          // }\n\n      }\n    }\n  }\n  private toBoolean(value){\n    if(typeof value === 'string' || value instanceof String){\n      console.log('DEEPCOPY ----------  TO BOOLEAN ------------ VAL=',value)\n      console.log(value.toLowerCase() === 'true' || value.toLowerCase() === 'false')\n      return value.toLowerCase() === 'true' || value.toLowerCase() === 'false';\n    }\n    return false;\n  }\n}\n\n// export class EntityBaseList<T extends EntityBase> extends Array<T> {\n\n//   constructor(private entityType: new () => T ){\n//     super();\n//   }\n\n//   getNew() : T {\n//     return new this.entityType();\n//   }\n\n//   public deepcopy(data: any[]): void {\n//     for (let i = 0; i < data.length; i++) {\n//       const element = data[i];\n//       let e  = this.getNew();\n//       e.deepcopy(element);\n//       this.push(e);\n//     }\n//   }\n//   public concat(list: EntityBaseList<T>){\n//     this.concat(list);\n//     return this;\n//   }\n// }\n\n/**\n * Created by Edel on 02/04/2018.\n */\nexport class Entity extends EntityBase {\n  id: string = '';\n\n  /** By default is FALSE. If TRUE, means that the entity does not have valid identifiers or has not been saved to the backend.  */\n  isNew = false;\n  // raw_data: String;\n  // created_at: String;\n  // updated_at: String;\n\n  identifiers:Array<Identifier> = new Array<Identifier>();\n  getIdentifierValue(idtype: IdentifierSchemas): string {\n    const id = this.identifiers.find((value) => value.idtype == idtype);\n    return id != undefined ? id.value : '';\n  }\n\n  setIdentifierValue(idtype: IdentifierSchemas, value: string) {\n    if(value != ''){\n      let added = false;\n      for (let index = 0; index < this.identifiers.length; index++) {\n        if(this.identifiers[index].idtype == idtype){\n          this.identifiers[index].value = value;\n          added = true;\n        }\n      }\n      if (!added) {\n        const id = new Identifier();\n        id.idtype = idtype;\n        id.value = value;\n        this.identifiers.push(id)\n      }\n    }\n  }\n\n  constructor() {\n    super();\n  }\n\n\n  /**\n   * return JSON.stringify, using a function to exclude object fields id and uuid\n   */\n  entitystringify(): string {\n    return JSON.stringify(this, (k, v) => {\n      // if (k !== \"id\" && k !== \"uuid\" && k !== \"isNew\") {\n      if (k !== \"isNew\" && k !== \"entityType\" && (v != null && v != '' && v != undefined && v != [])) {\n        return v;\n      }\n    });\n  }\n}\n\n/**\n * Entity for `Identifier` based on schema `organization-v1.0.0.json`.\n * Organization Identifier, different from GRID mapping.\n */\nexport class Identifier extends EntityBase {\n  /**\n   * Identifier type.\n   */\n  idtype: IdentifierSchemas;\n\n  /**\n   * Identifier value.\n   */\n  value: string = \"\";\n}\n\n\nexport enum IdentifierSchemas {\n  ark = \"ark\",\n  arxiv = \"arxiv\",\n  doi = \"doi\",\n  bibcode = \"bibcode\",\n  ean8 = \"ean8\",\n  ean13 = \"ean13\",\n  handle = \"handle\",\n  isbn = \"isbn\",\n  issn_p = \"issn_p\",\n  issn_l = \"issn_l\",\n  issn_e = \"issn_e\",\n  issn_c = \"issn_c\",\n  issn_o = \"issn_o\",\n  istc = \"istc\",\n  lsid = \"lsid\",\n  pmid = \"pmid\",\n  pmcid = \"pmcid\",\n  purl = \"purl\",\n  upc = \"upc\",\n  url = \"url\",\n  urn = \"urn\",\n  orcid = \"orcid\",\n  gnd = \"gnd\",\n  ads = \"ads\",\n  oai = \"oai\",\n  prnps = \"prnps\",\n  ernps = \"ernps\",\n  oaiurl = \"oaiurl\",\n  grid = \"grid\",\n  wkdata = \"wkdata\",\n  ror = \"ror\",\n  isni = \"isni\",\n  fudref = \"fudref\",\n  orgref = \"orgref\",\n  reup = \"reup\",\n}\n\nexport class Links extends EntityBase {\n  self = \"\";\n  next = \"\";\n  prev = \"\";\n}\n\nexport class AggrBucket extends EntityBase {\n  doc_count = 0;\n  key = \"\";\n}\nclass AggrMeta extends EntityBase {\n  order = 0;\n  title = \"\";\n}\n\nexport class Aggr extends EntityBase {\n  buckets: Array<AggrBucket> = new Array<AggrBucket>();\n  meta? = new AggrMeta();\n  doc_count_error_upper_bound = 0;\n  sum_other_doc_count = 0;\n}\n\nexport class Hit<T> extends EntityBase {\n  id = \"\";\n  created = \"\";\n  updated = \"\";\n  links = new Links();\n  metadata: T;\n  revision = 0;\n\n  revisions? : Array<Hit<T>>;\n}\n\nexport class HitList<T> extends EntityBase {\n  hits = new Array<Hit<T>>();\n  total: 0;\n}\n\nexport class SearchResponse<T> extends EntityBase {\n  aggregations: { [id: string]: Aggr } = {};\n  hits = new HitList<T>();\n  links = new Links();\n}\n","\nimport { Params } from '../core/utils/helpers';\nimport { SelectOption } from '../forms/input/select/select-input.component';\nimport { InputContent } from '../forms/input/input.control';\nimport { EntityBase, Entity } from './common';\n/**\n * An enum that represents the type of an `CategoryQuestion`. \n */\n export enum CategoryQuestionType\n {\n    /**\n     * The `bool` type is the default type. It shows a boolean control. \n     */\n    bool = 'bool',\n\n    /**\n     * It shows a numeric control. \n     */\n    integer = 'integer',\n\n    /**\n     * It shows a select control. \n     */\n    select = 'select'\n}\n\n/**\n * Entity for CategoryQuestion based on schema `...-v1.0.0.json`. \n * Represents a survey section category question. \n */\nexport class CategoryQuestion extends EntityBase\n{\n    /**\n     * Question type. \n     */\n    type: CategoryQuestionType;\n    /**\n     * Question id. \n     */\n    id: string;\n    /**\n     * Question description. \n     */\n    desc: string;\n    /**\n     * Question hint. \n     */\n    hint: string;\n    /**\n     * Question answer. \n     */\n    answer: any;\n    /**\n     * Possible minimum value. It is used if `type` == CategoryQuestionType.integer. \n     */\n    min?: number;\n    /**\n     * Possible maximum value. It is used if `type` == CategoryQuestionType.integer. \n     */\n    max?: number;\n\t/**\n     * Options list that can be selected. It is used if `type` == CategoryQuestionType.select. \n\t */\n    selectOptions?: SelectOption[];\n    /**\n     * This field is filled internally. \n     * For internal use only. \n     */\n    _inputContent?: InputContent = undefined;\n}\n\n/**\n * Entity for SectionCategory based on schema `...-v1.0.0.json`. \n * Represents a survey section category. \n */\nexport class SectionCategory extends EntityBase\n{\n    /**\n     * Category title. \n     */\n    title: string;\n    /**\n     * Category desription. \n     */\n    desc: string;\n    /**\n     * An array of questions associated with the category. \n     */\n    questions: Array<CategoryQuestion>;\n}\n\n/**\n * Entity for SurveySection based on schema `...-v1.0.0.json`. \n * Represents a survey section. \n */\nexport class SurveySection extends EntityBase\n{\n    /**\n     * Section title. \n     */\n    title: string;\n    /**\n     * An array of categories associated with the section. \n     */\n    categories: Array<SectionCategory>;\n}\n\n/**\n * Entity for JournalGeneralData based on schema `...-v1.0.0.json`. \n * Represents the journal general data that a user fills in the first step. \n */\n export class JournalGeneralData extends EntityBase\n {\n    /**\n     * Journal name. \n     */\n     name: string;\n     /**\n      * Journal URL page. \n      */\n     url: string;\n     /**\n      * Journal ISSN. \n      */\n     issn: string;\n }\n\n/**\n * Entity for Evaluation based on schema `...-v1.0.0.json`. \n */\n export class Evaluation extends Entity\n {\n    /**\n     * User who made the evaluation. \n     */\n    user: string;\n    /**\n     * Evaluation date. \n     */\n    date: Date;\n\n    /************************************* Journal Data ***************************/\n\n    /**\n     * Journal Data. \n     */\n    journalData: JournalGeneralData;\n\n    /**************************************** Survey ******************************/\n\n    /**\n     * An array of sections associated with the survey. \n     */\n    sections: Array<SurveySection>;\n\n    /****************************** Result and Recommendations ********************/\n    // TODO: ... \n }\n\n/**\n * Entity for EvaluationOnlyAnswer based on schema `...-v1.0.0.json`. \n */\nexport class EvaluationOnlyAnswer extends Entity\n{\n    /**\n     * User who made the evaluation. \n     */\n    user: string;\n    /**\n     * Evaluation date. \n     */\n    date: Date;\n\n    /************************************* Journal Data ***************************/\n\n    /**\n     * Journal Data. \n     */\n     journalData: JournalGeneralData;\n\n    /**************************************** Survey ******************************/\n\n    /**\n     * Journal survey. \n     */\n    survey: Params<any>;\n\n    /****************************** Result and Recommendations ********************/\n    // TODO: ... \n}\n","\nimport { EntityBase, Entity, Identifier } from './common';\n\n/**\n * Entity for main Institution based on schema `...-v1.0.0.json`. \n */\nexport class MainInstitution extends EntityBase\n{\n    /**\n     * The name typically used to refer to the institute. \n     */\n    name: string;\n    /**\n     * Organization Identifiers, different from GRID mapping. \n     */\n    identifiers: Array<Identifier>;\n}\n\n/**\n * Entity for Institutional Repository based on schema `...-v1.0.0.json`. \n */\nexport class InstitutionalRepository extends Entity\n{\n    /**\n     * Name of the region. \n     */\n    name: string;\n    /**\n     * Main Institution. \n     */\n    mainInst: MainInstitution;\n    /**\n     * URL page for the institute. \n     */\n    url: string;\n    /**\n     * URL-OAI page for the institute. \n     */\n    url_oai: string;\n}\n\n/**\n * Represents an object of `MainInstitution` type with all its values set to empty. \n * The `identifiers` array field must have one empty value at least. \n */\nexport const mainInstEmpty: any = {\n    'name': '',\n    'identifiers': [{\n        'idtype': '',\n        'value': ''\n    }]\n};\n\n/**\n * Represents an object of `InstitutionalRepository` type with all its values set to empty. \n */\nexport const instRepoEmpty: any = {\n    'id': '',\n    'name': '',\n    'mainInst': mainInstEmpty,\n    'url': '',\n    'url_oai': ''\n};\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Entity } from \"./common\";\n\nexport class JournalReference extends Entity\n{\n    reference: Reference;\n    startdate: string;\n    enddate: string;\n    url: string;\n}\n\nexport class Reference\n{\n    name: string\n}\n","import { EntityBase, Entity, Identifier } from './common';\n\n\nexport const OrganizationRelationships = {\n  PARENT: { label: 'Padre', value: 'parent' },\n  CHILD: { label: 'Hija', value: 'child' },\n  RELATED: { label: 'Relacionada', value: 'related' },\n  };\n\n\n/**\n * Entity for `LabelDiffLang` based on schema `organization-v1.0.0.json`.\n * Name of the institute in different language.\n */\nexport class LabelDiffLang extends EntityBase\n{\n  /**\n   * Institute name in a language variant.\n   */\n  label: string = '';\n\n  /**\n   * ISO-639-1 language code.\n   */\n  iso639: string = '';\n}\n\n/**\n * Entity for `Redirected` based on schema `organization-v1.0.0.json`.\n * Which organization redirects.\n */\n export class Redirected extends EntityBase\n {\n    /**\n      * Institute name in a language variant.\n    */\n    idtype: string = '';\n \n    /**\n      * ISO-639-1 language code.\n    */\n    value: string = '';\n }\n \n\n/**\n * Entity for `Relationship` based on schema `organization-v1.0.0.json`.\n * A relationship the institute has to other.\n */\nexport class Relationship extends Entity\n{\n  /**\n   * Organization Identifiers, different from GRID mapping.\n   */\n  identifiers: Array<Identifier> = new Array<Identifier>();\n\n  /**\n   * Relationship type.\n   */\n  type: string = '';\n\n  /**\n   * Name of the related institute.\n   */\n  label: string = '';\n}\n\n/**\n * Entity for `GeoNamesAdmin` based on schema `organization-v1.0.0.json`.\n */\nexport class GeoNamesAdmin extends EntityBase\n{\n  /**\n   * ID in the region format.\n   */\n  id: string = '';\n\n  /**\n   * Name of the region.\n   */\n  name: string = '';\n\n  /**\n   * Preferred ASCII encoded name for the region.\n   */\n  ascii_name: string = '';\n}\n\n/**\n * Entity for `GeoNamesCity` based on schema `organization-v1.0.0.json`.\n * The linked GeoNames data.\n */\nexport class GeoNamesCity extends EntityBase\n{\n  /**\n   * GeoNames ID.\n   */\n  id: number = 0;\n\n  /**\n   * Name of the city.\n   */\n  city: string = '';\n\n  /**\n   * geonames_admin1.\n   */\n  geonames_admin1: GeoNamesAdmin = undefined;\n\n  /**\n   * geonames_admin2.\n   */\n  geonames_admin2?: GeoNamesAdmin = undefined;\n\n  /**\n   * nuts_level1.\n   */\n  nuts_level1: GeoNamesAdmin = undefined;\n\n  /**\n   * nuts_level2.\n   */\n  nuts_level2?: GeoNamesAdmin = undefined;\n\n  /**\n   * nuts_level3.\n   */\n  nuts_level3?: GeoNamesAdmin = undefined;\n}\n\n/**\n * Entity for `Address` based on schema `organization-v1.0.0.json`.\n * An address associated with the institute.\n */\nexport class Address extends EntityBase\n{\n  /**\n   * Name of the city.\n   */\n  city: string = '';\n\n  /**\n   * Name of the country.\n   */\n  country: string = '';\n\n  /**\n   * ISO 3166-1 alpha-2 code of the country.\n   */\n  country_code: string = '';\n\n  /**\n   * Latitute of the institute.\n   */\n  lat: number = 0;\n\n  /**\n   * Longitude of the institute.\n   */\n  lng: number = 0;\n\n  /**\n   * First line of the address.\n   */\n  line_1: string = '';\n\n  /**\n   * Second line of the address.\n   */\n  line_2?: string = '';\n\n  /**\n   * Third line of the address.\n   */\n  line_3?: string = '';\n\n  /**\n   * Postcode/zipcode.\n   */\n  postcode: string = '';\n\n  /**\n   * If there is more than one address, identifies the main location.\n   * This address identifies the main location.\n   */\n  primary: boolean = false;\n\n  /**\n   * Name of the state/region.\n   */\n  state: string = '';\n\n  /**\n   * ISO 3166-2 region code.\n   */\n  state_code: string = '';\n\n  /**\n   * Name of the municipality.\n   */\n  municipality: string = '';\n\n  /**\n   * dpa municipality code.\n   */\n  municipality_dpa: string = '';\n\n  /**\n   * Linked GeoNames data.\n   */\n  geonames_city: GeoNamesCity = undefined;\n}\n\n/**\n * Entity for `RedirectPropertiesIdtype` based on schema `organization-v1.0.0.json`.\n * An address associated with the institute.\n */\nexport class RedirectPropertiesIdtype extends EntityBase {\n  /**\n   * description for RedirectPropertiesIdtype.\n   */\n  description: string = '';\n\n  /**\n   * type of RedirectPropertiesIdtype.\n   */\n  type: string = '';\n\n  /**\n   * enum for RedirectPropertiesIdtype.\n   */\n  enum: Array<string> = new Array<string>();\n}\n\n/**\n * Entity for `RedirectProperties` based on schema `organization-v1.0.0.json`.\n * An address associated with the institute.\n */\nexport class RedirectProperties extends EntityBase {\n  /**\n   * Name of the city.\n   */\n  idtype: RedirectPropertiesIdtype = undefined;\n\n  /**\n   * Name of the country.\n   */\n  value: { type: string } = undefined;\n}\n\n/**\n * Entity for `Redirect` based on schema `organization-v1.0.0.json`.\n * An address associated with the institute.\n */\nexport class Redirect extends EntityBase\n{\n  /**\n   * Type of redirect.\n   */\n  type: string = '';\n\n  /**\n   * Show additional properties for redirect if true.\n   */\n  additionalProperties: boolean = false;\n\n  /**\n   * Properties for redirect.\n   */\n  properties: RedirectProperties = undefined;\n}\n\n/**\n * Entity for `Organizations` based on schema `organization-v1.0.0.json`.\n */\nexport class Organization extends Entity\n{\n  /**\n   * Organization Identifiers, different from GRID mapping.\n   */\n  identifiers: Array <Identifier> = new Array <Identifier>();\n\n  /**\n   * The name typically used to refer to the institute.\n   */\n  name: string = '';\n\n  /**\n   * For an active institute, this is always set to active.\n   */\n  status: string = '';\n\n  /**\n   * The list of other names the institute is known as.\n   */\n  aliases: Array<string> = new Array<string>();\n\n  /**\n   * The list of short acronyms the institute is known as (e.g. MRC for the Medical Research Council).\n   */\n  acronyms: Array<string> = new Array<string>();\n\n  /**\n   * The list of types describing the institute.\n   */\n  types: Array<string> = new Array<string>();\n\n  /**\n   * URL of the wikipedia page for the institute.\n   */\n  wikipedia_url: string = '';\n\n  /**\n   * Contact email address for the institute.\n   */\n  email_address: string = '';\n\n  /**\n   * The list of IP addresses known to belong to the institute.\n   */\n  ip_addresses: Array<string> = new Array<string>();\n\n  /**\n   * Year the institute opened, CE.\n   */\n  established: number = -1;\n\n  /**\n   * Year the institute registered on ONEI.\n   */\n   onei_registry: number = -1;\n\n   /**\n    * If its able for exporting to international organizations systems.\n    */\n   exportable: boolean = false;\n\n  /**\n   * The list of URLs linking to things like the homepage for the institute.\n   */\n  links: Array<string> = new Array<string>();\n\n  /**\n   * Name of the institute in different languages.\n   */\n  labels: Array<LabelDiffLang> = new Array <LabelDiffLang>();\n\n  /**\n   * Any relationships the institute has to others.\n   */\n  relationships: Array <Relationship> = new Array <Relationship>();\n\n  /**\n   * An array of addresses associated with the institute.\n   */\n  addresses: Array <Address> = new Array<Address>();\n\n  /**\n   * An array of addresses associated with the institute.\n   */\n  redirect: Redirect = undefined;\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Entity } from \"./common\";\n\nexport class Person extends Entity\n{\n    institution_id: string;\n    name: String;\n    secondName: String;\n    lastName: String;\n    sex: String;\n    inicialsName: String;\n    userName: String;\n    email: String;\n    orcid: String;\n    phone: String;\n    bio: String;\n    street: String;\n    number: String;\n    city: String;\n    province: String;\n    country: String;\n}\n\nexport class Role {\n  id = '';\n  name = '';\n  description = '';\n}\nexport class User{\n  id: string = '';\n  email: string = '';\n  confirmed_at =  '';\n  last_login_at = '';\n  roles: Array<Role> = new Array<Role>();\n}\nexport class UserSourcesRoles{\n    source_uuid: string = '';\n    role: string = '';\n}\n\nexport class UserProfile extends Entity {\n    biography: string = '';\n    email: string = '';\n    full_name: string = '';\n    id: string = '';\n    institution: string = '';\n    institution_id: number = -1;\n    institution_rol: string = '';\n    username: string = '';\n    avatar: string = '';\n    sources: Array<UserSourcesRoles> = new Array<UserSourcesRoles>();\n    user: User = new User();\n\n    identify(){\n      return this.full_name + '<' + this.user.email + '>';\n    }\n}\n\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\n\n\nimport { Entity, EntityBase } from './common';\nimport { Organization } from './organization.entity';\nimport { UserProfile } from './person.entity';\n\nexport const SourceSystems = {\n  OJS: { label: 'Open Journal System', value: 'OJS' },\n  CMS: { label: 'Content Management System (Wordpress, Joomla, Drupal, etc)', value: 'CMS' },\n  DSPACE: { label: 'Dspace', value: 'DSPACE' },\n  OTHER: { label: 'Otro', value: 'OTHER' },\n};\n\nexport const SourceTypes = {\n    JOURNAL: { label: 'Revista Científica', value: 'JOURNAL' },\n    SERIAL: { label: 'Publicación Seriada', value: 'SERIAL' },\n    STUDENT: { label: 'Revista Científico Estudiantil', value: 'STUDENT' },\n    POPULARIZATION: { label: 'Revista de Divulgación', value: 'POPULARIZATION' },\n    REPOSITORY: { label: 'Repositorio Institucional', value: 'REPOSITORY' },\n    WEBSITE: { label: 'Sitio Web', value: 'WEBSITE' },\n    OTHER: { label: 'Otro', value: 'OTHER' },\n};\n\nexport const SourceOrganizationRole = {\n  MAIN: {label: 'Principal', value: 'MAIN'},\n  COLABORATOR: {label: 'Colaborador', value: 'COLABORATOR'}\n};\n\n\nexport const SourcePersonRole = {\n  ADMINISTRATOR: {label: 'Administrador', value: 'ADMINISTRATOR'},\n  JOURNALMANAGER: {label: 'Gestor de Revista', value: 'JOURNALMANAGER'},\n  AUTHOR: {label: 'Autor', value: 'AUTHOR'},\n  EDITOR: {label: 'Editor', value: 'EDITOR'},\n  SECTIONEDITOR: {label: 'Editor de Sección', value: 'SECTIONEDITOR'},\n  REVIEWER: {label: 'Revisor', value: 'REVIEWER'},\n  COPYEDITOR: {label: 'Editor de Copias', value: 'COPYEDITOR'},\n  LAYOUTEDITOR: {label: 'Editor de Formato', value: 'LAYOUTEDITOR'},\n  PROOFREADER: {label: 'Corrector de Pruebas', value: 'PROOFREADER'},\n  READER: {label: 'Lector', value: 'READER'}\n};\n\nexport const SourceStatus = {\n    APPROVED: { label: 'Aprobado', value: 'APPROVED' },\n    TO_REVIEW: { label: 'En revision', value: 'TO_REVIEW'},\n    UNOFFICIAL: { label: 'Incluido Extraoficialmente', value: 'UNOFFICIAL'}\n};\n\nexport class SourceOrganization extends Organization {\n  role: string = '';\n}\nexport class SourceClasification extends EntityBase {\n  id: string = '';\n  description: string = '';\n  vocabulary: string = '';\n  data =  new Object();\n}\n\nexport class  SavingInfoSchema extends EntityBase {\n  user_id: string = '';\n  comment: string = '';\n}\n\nexport class SourceData extends Entity {\n    name = '';\n    title = '';\n    description ?= '';\n    // term_sources ?: Array<TermSource> = new Array<TermSource>();\n    oaiurl ? = '';\n    source_system ? = '';\n    source_type = '';\n    source_status = '';\n    organizations?: Array<SourceOrganization> = new Array<SourceOrganization>();\n    classifications?: Array<SourceClasification> = new Array<SourceClasification>();\n\n\n    _save_info: SavingInfoSchema = new SavingInfoSchema();\n\n    reviewed = false;\n\n    versions? : Array<SourceVersion>;\n\n    // public deepcopy(data: any, exclude: string[] = []): void {\n\n    //   if (data['organizations'] && data['organizations'].length > 0){\n    //     for (let index = 0; index < data['organizations'].length; index++) {\n    //       const element = data['organizations'][index];\n    //       this.organizations.push(new SourceOrganization());\n    //     }\n    //   }\n    //   if (data['classifications'] && data['classifications'].length > 0){\n    //     for (let index = 0; index < data['classifications'].length; index++) {\n    //       const element = data['classifications'][index];\n    //       this.classifications.push(new SourceClasification());\n    //     }\n    //   }\n    //   super.deepcopy(data, exclude);\n    // }\n}\n\n// export class TermSource extends EntityBase {\n//     term_id = '';\n//     source_id = '';\n//     data =  new Object();\n//     term ?: Term  = null;\n// }\n\nexport class SourceVersion extends Entity {\n    user_id = '';\n    source_uuid = '';\n    comment = '';\n    created_at = new Date();\n    is_current = false;\n    reviewed = false;\n\n    data: SourceData = new SourceData();\n\n    userprofile: UserProfile = new UserProfile();\n}\n\n\n\nexport class Source extends Entity {\n    uuid = '';\n    name = '';\n\n    clasifications?: Array<SourceClasification> = new Array<SourceClasification>(0);\n    organizations?: Array<SourceOrganization> = new Array<SourceOrganization>();\n\n    aliases: Array<string> = new Array<string>();\n\n    source_type = '';\n    source_status = '';\n\n    version_to_review = false;\n\n    versions: Array<SourceVersion> = new Array<SourceVersion>();\n\n    data: SourceData = new SourceData();\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { EntityBase } from './common';\nimport { Source, SourceData, SourceVersion } from './source.entity';\n\n\nexport class SocialNetworks  extends EntityBase {\n  facebook = '';\n  twitter = '';\n  linkedin = '';\n}\n\nexport class IssnOrg extends EntityBase {\n  issn: '';\n  title: '';\n}\n\nexport class ISSN extends EntityBase {\n    p  = '';\n    e  = '';\n    l  = '';\n    issn_org = new IssnOrg();\n}\n\nexport class RNPS extends EntityBase {\n  p  = '';\n  e  = '';\n}\n\nexport class JournalData extends SourceData {\n\n    subtitle  = '';\n    shortname  = '';\n    issn: ISSN = new ISSN();\n    rnps: RNPS = new RNPS();\n    url = '';\n    email = '';\n    logo ? = '';\n    purpose ? = '';\n    start_year ? = '';\n    end_year ? = '';\n    frequency ? = '';\n    seriadas_cubanas ? = '';\n\n    socialNetworks: SocialNetworks = new SocialNetworks();\n\n}\n\nexport class Journal extends Source {\n  data: JournalData = new JournalData();\n  versions: Array<JournalVersion> = new Array<JournalVersion>();\n}\n\nexport class JournalVersion extends SourceVersion {\n  data: JournalData = new JournalData();\n  // /** WARNING: helper variable in the client side. Do not rely on this unless you know what you are doing */\n  // organization?: Term = null;\n  // /** WARNING: helper variable in the client side. Do not rely on this unless you know what you are doing */\n  // institution?: Term = null;\n  // /** WARNING: helper variable in the client side. Do not rely on this unless you know what you are doing */\n  // entity?: Term = null;\n\n  // entitystringify(): string  {\n  //   return JSON.stringify(this, (k, v) => {\n  //     if (k !== 'id' &&\n  //         k !== 'uuid' &&\n  //         k !== 'isNew' &&\n  //         k !== 'organization' &&\n  //         k !== 'institution' &&\n  //         k !== 'entity' ) {\n  //       return v;\n  //     }\n  //   });\n  // }\n}\n","import { EntityBase } from './common';\nimport { Source } from './source.entity';\n\n\n\nexport class Record extends EntityBase {\n  id = '';\n  identifiers = new Array<Object>();\n  source_repo = new Source();\n  spec = new Object();\n  title = '';\n  creators = new Array<Object>();\n  keywords = new Array<string>();\n  description = '';\n  publisher = '';\n  sources = new Array<string>();\n  rights = new Array<string>();\n  types = new Array<string>();\n  formats = new Array<string>();\n  language = '';\n  publication_date = '';\n  contributors = new Array<Object>();\n  references = new Object();\n  iroko_terms = new Array<string>();\n  status = '';\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Entity } from \"./common\";\n\nexport class Repository extends Entity {\n    source_id: string;\n    last_run: Date;\n    identifier: string;\n    metadata_formats: Array<string>;\n    status: string\n    error_log: string\n    sets: Array<RepositorySet>\n    jobId: string\n}\n\nexport class RepositorySet extends Entity {\n    setSpec: string\n    setName: string\n}\n\nexport class HarvestedItem extends Entity {\n    repository_id: string;\n    identifier: string;\n    record_uuid: string;\n    status: string;\n    error_log: string;\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Entity, EntityBase } from './common';\n\n// TODO: Esto esta bastante feo... hay que agregarle a vocabulario un nombre inmutable y referirse a este por aqui, no por los ids\nexport enum VocabulariesInmutableNames {\n    CUBAN_INTITUTIONS = 'CUBAN_INTITUTIONS',\n    SUBJECTS = 'SUBJECTS',\n    CUBAN_PROVINCES = 'CUBAN_PROVINCES',\n    // DATABASES = '3',\n    // MES_GROUPS = 'MES_GROUPS',\n    LICENCES = 'LICENCES',\n    INDEXES_CLASIFICATION = 'INDEXES_CLASIFICATION',\n    INDEXES = 'INDEXES',\n    UNESCO_VOCAB = 'UNESCO_VOCAB',\n    RECOD_SETS = 'RECOD_SETS',\n    RECORD_TYPES = 'RECORD_TYPES',\n    EXTRA_INSTITUTIONS = 'EXTRA_INSTITUTIONS',\n    SUBJECT_COVER = 'SUBJECT_COVER',\n    COUNTRIES = 'COUNTRIES'\n  }\n\nexport class Term extends Entity {\n    uuid = '';\n    identifier = '';\n    description = '';\n    data = new EntityBase();\n    vocabulary_id = '';\n    parent_id = '';\n    clasified_ids: number[] = [];\n    class_ids: number[] = [];\n\n    // deepcopy(data: any){\n    //     switch (data['vocabulary_id']) {\n    //         case VocabulariesInmutableNames.INTITUTION:\n    //             this.data = new TermInstitutionData();\n    //             break;\n    //         case VocabulariesInmutableNames.LICENCES:\n    //             this.data = new TermIndexData();\n    //         default:\n    //             this.data = new EntityBase();\n    //     }\n    //     super.deepcopy(data);\n    // }\n}\n\n\nexport class TermInstitutionData extends EntityBase {\n    grid = '';\n    email = '';\n    website = '';\n    address = '';\n\n}\n\nexport class TermIndexData extends EntityBase {\n  url = '';\n  abrev = '';\n  initial_cover = '';\n  end_cover = '';\n}\n\nexport class Vocabulary extends Entity {\n    name = '';\n    description = '';\n    human_name = '';\n    identifier = '';\n}\n\n/** File node data with possible child nodes. */\nexport interface TermNode {\n    term: Term;\n    parent: TermNode;\n    children?: TermNode[];\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { Entity } from '../../entities/public-api';\n\n@Component({\n    selector: 'toco-info-card',\n    templateUrl: './info-card.component.html',\n    styleUrls: ['./info-card.component.scss']\n})\nexport class InfoCardComponent implements OnInit {\n\n    @Input() avatar_card ;\n    @Input() title_card: String ;\n    @Input() subtitle_card: String ;\n    @Input() content_card: String ;\n    @Input() img_card: String;\n    @Input() router : String ;\n    @Input() entity: Entity;\n    \n    is_avatar_card: Boolean = false;\n    is_title_card: Boolean = false;\n    is_subtitle_card: Boolean = false;\n    is_content_card: Boolean = false;\n    is_img_card: Boolean = false;\n    @Input() is_actions_card: Boolean = false;\n\n    constructor()\n    { }\n\n    ngOnInit() {\n        if (typeof(this.avatar_card) != 'undefined') this.is_avatar_card = true;\n        if (this.content_card != ' ') this.is_content_card = true;\n        if (this.title_card != ' ') this.is_title_card = true;\n        if (this.subtitle_card != ' ') this.is_subtitle_card = true;\n        if (typeof(this.img_card) != 'undefined') this.is_img_card = true;\n    }\n\n    // show_people(){\n    //   var p = new PeopleShowComponent();\n    //   p.people = this.object_to_show;\n    // }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'toco-journal-card',\n    templateUrl: './journal-card.component.html',\n    styleUrls: ['./journal-card.component.scss']\n})\nexport class JournalCardComponent implements OnInit\n{\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'toco-nav',\n    templateUrl: './nav.component.html',\n    styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit\n{\n    @Input()\n    menuItems: MenuItem[];\n\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n\nexport interface MenuItem\n{\n    link: string;\n    label: string;\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'toco-page-header',\n    templateUrl: './page-header.component.html',\n    styleUrls: ['./page-header.component.scss']\n})\nexport class PageHeaderComponent implements OnInit {\n\n    @Input() drawer;\n    @Input() info:String[] = [];\n    is_show_icon:Boolean = false;\n    \n    constructor() { }\n\n    ngOnInit() {\n        //this.info = ['Listado de Personas','estas estan en el sitio','esta es otra fila'];\n    }\n\n    function(){\n        this.drawer.toggle();\n    }\n    \n    change_icon_show(){\n        this.is_show_icon = false;\n        console.log(this.is_show_icon);\n    }\n}\n","\nimport { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Component that shows information for a page-not-found view. \n */\n@Component({\n    selector: 'toco-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit\n{\n    /**\n     * Input field that contains the router link to reditect. \n     * By default, its value is `['/']`. \n     */\n    @Input()\n    public routerLink: string[];\n\n    /**\n     * Input field that contains the image source to show underneath the redirect link. \n     * By default, its value is `undefined`. \n     */\n    @Input()\n    public imgSource: string;\n\n    public constructor()\n    {\n        this.routerLink = undefined;\n        this.imgSource = undefined;\n    }\n\n    public ngOnInit(): void\n    {\n        /* Specifies the default values. */\n\n        if (this.routerLink == undefined) this.routerLink = ['/'];\n        /* The default value for `imgSource` is `undefined`. */\n    }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [{\n    path: 'home',\n    component: HomeComponent,\n    data: {\n        title: 'Inicio'\n    }\n}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CoreRoutingModule\n{ }\n","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { isObject } from 'util';\n\nconst seriesName_English: string[] = ['achieved', 'unresolved'];\nconst seriesName_Spanish: string[] = ['realizado', 'pendiente'];\n\n/**\n * An interface that represents the content of a feature object. \n */\nexport interface Feature\n{\n\t/**\n\t * The feature's name. \n\t */\n\tname: string;\n\n\t/**\n\t * The feature's achieved percentage. \n\t */\n\tachieved: number;\n}\n\n/**\n * An interface that represents the content of a product object. \n * Its achieved percentage value is calculated from its `features` array field. \n */\nexport interface Product\n{\n\t/**\n\t * The product's name. \n\t */\n\tname: string;\n\n\t/**\n\t * The product's features array. \n\t */\n\tfeatures: Feature[];\n}\n\n/**\n * An interface that represents the content of a result object. \n */\nexport interface Result\n{\n\t/**\n\t * The result's name. \n\t */\n\tname: string;\n\n\t/**\n\t * The result's value. \n\t */\n\tvalue: number;\n}\n\n/**\n * An interface that represents the content of a chart bar object. \n * Its `series` field is an array of length 2 that contains \n * the achieved/unresolved results; for example, \n\t`'series': [\n  \t\t{\n  \t\t\t'name': 'achieved',\n \t\t\t'value': 20\n \t\t},\n \t\t{\n \t\t\t'name': 'unresolved',\n \t\t\t'value': 80\n \t\t}\n \t]` \n */\nexport interface ChartBar\n{\n\t/**\n\t * The chart's bar name. \n\t */\n\tname: string;\n\n\t/**\n\t * The results array that makes up the chart's bar. \n\t */\n\tseries: Result[];\n}\n\n/**\n * An interface that represents the content of an entry element object. \n */\nexport interface EntryElement\n{\n\tname: string;\n\tvalue?: number;\n\tlabel?: string;\n\tseries?: string;\n}\n\n/**\n * Component for displaying a roadmap. It basically displays the products \n * that we are currently working, and the products that we will work in the future. \n * Besides, when a product is selected, its features are displayed. \n * It always shows the achieved/unresolved work in percentage. \n */\n@Component({\n\tselector: 'toco-road-map',\n\ttemplateUrl: './road-map.component.html',\n\tstyleUrls: ['./road-map.component.scss']\n})\nexport class RoadMapComponent implements OnInit\n{\n\t/**\n\t * Returns the -1 value that is used to remove a chart. \n\t */\n\tpublic readonly removeChart_PosFlag = -1;\n\n\t/**************************************************************************\n\t **************************************************************************\n\t * Options for displaying the products list. \n\t **************************************************************************\n\t *************************************************************************/\n\n\t/**\n\t * Input field that contains the text that is displayed when there is not any product. \n\t * By default, its value is `'¡No hay ningún producto!'`. \n\t */\n\t@Input()\n\tpublic withoutProductText: string;\n\n\t/**\n\t * Returns the chart's visualization direction. \n\t * It is true if the chart is visualized vertically; otherwise, false (horizontally). \n\t * By default, its value is `true`. \n\t */\n\tprivate _isChartVertical: boolean;\n\n\t/**\n\t * Input field that contains the tab's label of current works. \n\t * By default, its value is `'Trabajos Actuales'`. \n\t */\n\t@Input()\n\tpublic tabLabel_CW: string;\n\t/**\n\t * Input field that contains the tab's label of future works. \n\t * By default, its value is `'Trabajos Futuros o Pendientes'`. \n\t */\n\t@Input()\n\tpublic tabLabel_FW: string;\n\n\t/**\n\t * Returns the selected tab position. Its value is set internally. \n\t */\n\tprivate _selectedTabPos: number;\n\n\t/**\n\t * Returns the grid height. \n\t * Its value is set depending on the `legendPosition` value. \n\t */\n\tprivate _gridHeight: number;\n\n\t/**\n\t * Input field that contains the chart's title of products. \n\t * By default, its value is `'Lista de productos'`. \n\t */\n\t@Input()\n\tpublic chartTitle_P: string;\n\n\t/**\n\t * Returns true if it is using a trick to obligate repainting the chart; otherwise, false. \n\t */\n\tprivate _isUsingTrick_RepaintChart: boolean;\n\t/**\n\t * Returns the working products array introduced by the user. \n\t * It references the `_currentProducts` or `_futureProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _products: Product[];\n\t/**\n\t * Returns the current products array introduced by the user. \n\t * From this array is created the `_currentProducts_Internal` and `_currentFeatures_Internal` arrays. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _currentProducts: Product[];\n\t/**\n\t * Returns the future products array introduced by the user. \n\t * From this array is created the `_futureProducts_Internal` and `_futureFeatures_Internal` arrays. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _futureProducts: Product[];\n\n\t/**\n\t * Returns the working products array displayed in the chart. \n\t * It references the `_currentProducts_Internal` or `_futureProducts_Internal` array. \n\t * It is created from the `_products` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _products_Internal: ChartBar[];\n\t/**\n\t * Returns the current products array displayed in the chart. \n\t * It is created from the `_currentProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _currentProducts_Internal: ChartBar[];\n\t/**\n\t * Returns the future products array displayed in the chart. \n\t * It is created from the `_futureProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _futureProducts_Internal: ChartBar[];\n\n\t/**\n\t * Returns the array that contains all working features arrays that can be displayed in the chart. \n\t * This array contains the same length than `_products_Internal` array because \n\t * each position contains the working features array for a product. \n\t * It references the `_currentFeaturesTotal_Internal` or `_futureFeaturesTotal_Internal` array. \n\t * It is created from the `_products` array. \n\t * This array is for internal use only. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _featuresTotal_Internal: ChartBar[][];\n\t/**\n\t * Returns the array that contains all current features arrays that can be displayed in the chart. \n\t * This array contains the same length than `_currentProducts_Internal` array because \n\t * each position contains the current features array for a product. \n\t * It is created from the `_currentProducts` array. \n\t * This array is for internal use only. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _currentFeaturesTotal_Internal: ChartBar[][];\n\t/**\n\t * Returns the array that contains all future features arrays that can be displayed in the chart. \n\t * This array contains the same length than `_futureProducts_Internal` array because \n\t * each position contains the future features array for a product. \n\t * It is created from the `_futureProducts` array. \n\t * This array is for internal use only. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _futureFeaturesTotal_Internal: ChartBar[][];\n\n\t/**\n\t * Returns the working features array of a selected product displayed in the chart. \n\t * It references an element in the `_featuresTotal_Internal` array. This element \n\t * represents the features of a selected product in the `_products_Internal` array. \n\t * It references the `_currentFeatures_Internal` or `_futureFeatures_Internal` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _features_Internal: ChartBar[];\n\t/**\n\t * Returns the current features array of a selected product displayed in the chart. \n\t * It references an element in the `_currentFeaturesTotal_Internal` array. This element \n\t * represents the features of a selected product in the `_currentProducts_Internal` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _currentFeatures_Internal: ChartBar[];\n\t/**\n\t * Returns the future features array of a selected product displayed in the chart. \n\t * It references an element in the `_futureFeaturesTotal_Internal` array. This element \n\t * represents the features of a selected product in the `_futureProducts_Internal` array. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _futureFeatures_Internal: ChartBar[];\n\n\t/**\n\t * Returns the current product elements array to highlight displayed in the chart. \n\t * It is modified dynamically. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _activeEntries_P_CW: EntryElement[];\n\t/**\n\t * Returns the future product elements array to highlight displayed in the chart. \n\t * It is modified dynamically. \n\t * By default, its value is `[]`. \n\t */\n\tprivate _activeEntries_P_FW: EntryElement[];\n\n\t/**\n\t * Input field that contains the chart's dimensions [width, height]. \n\t * By default, its value is `[900, 350]`. \n\t */\n\t@Input()\n\tpublic view: number[];\n\n\t/**\n\t * Input field that contains the chart's color scheme of current works. \n\t * By default, its value is the following object: \n\t\t`{\n\t \t\tdomain: [ \n\t\t\t\t'#6EE9B5',  // light green \n\t\t\t\t'#E96E70'   // red\n\t\t\t] \n\t\t}` \n\t */\n\t@Input()\n\tpublic colorScheme_CW: any;\n\t/**\n\t * Input field that contains the chart's color scheme of future works. \n\t * By default, its value is the following object: \n\t\t`{\n\t \t\tdomain: [ \n\t\t\t\t'#6F6EE9',  // blue\n\t\t\t\t'#6EBBE9'   // light blue\n\t\t\t] \n\t\t}` \n\t */\n\t@Input()\n\tpublic colorScheme_FW: any;\n\n\t/**\n\t * Input field that indicates to fill chart's elements with a gradient or a solid color. \n\t * It is true if the chart's elements are filled with a gradient color; otherwise, false (filled with a solid color). \n\t * By default, its value is `false`. \n\t */\n\t@Input()\n\tpublic gradient: boolean;\n\n\t/**\n\t * Input field that contains the chart's padding between bars in px. \n\t * By default, its value is `12`. \n\t */\n\t@Input()\n\tpublic barPadding: number;\n\n\t/**\n\t * Shows the chart's x axis. \n\t */\n\tpublic readonly showXAxis: boolean;\n\t/**\n\t * Shows the chart's x axis label. \n\t */\n\tpublic readonly showXAxisLabel: boolean;\n\t/**\n\t * Input field that contains the chart's x axis label text of products. \n\t * By default, its value is `'Producto'`. \n\t */\n\t@Input()\n\tpublic xAxisLabel_P: string;\n\n\t/**\n\t * Input field that contains the chart's max length of the ticks (ticks over this length will be trimmed). \n\t * By default, its value is `16`. \n\t */\n\t@Input()\n\tpublic maxAxisTickLength: number;\n\n\t/**\n\t * Shows the chart's y axis. \n\t */\n\tpublic readonly showYAxis: boolean;\n\t/**\n\t * Shows the chart's y axis label. \n\t */\n\tpublic readonly showYAxisLabel: boolean;\n\t/**\n\t * Input field that contains the chart's y axis label text of products. \n\t * By default, its value is `'Realizado / Pendiente En Por Ciento'`. \n\t */\n\t@Input()\n\tpublic yAxisLabel_P: string;\n\n\t/**\n\t * Shows the chart's legend. \n\t */\n\tpublic readonly showLegend: boolean;\n\t/**\n\t * Input field that contains the chart's legend title. \n\t * By default, its value is `'Leyenda'`. \n\t */\n\t@Input()\n\tpublic legendTitle: string;\n\t/**\n\t * Input field that contains the chart's legend position. Its value is `'right'` or `'below'`. \n\t * By default, its value is `'right'`. \n\t */\n\tprivate _legendPosition: string;\n\n\t/**************************************************************************\n\t **************************************************************************\n\t * Options for displaying the features list of a selected product. \n\t **************************************************************************\n\t *************************************************************************/\n\n\t/**\n\t * Returns the working product position. Contains the `removeChart_PosFlag` value when \n\t * there is not any selected working product position. \n\t * It has the `_selectedProductPos_CW` or `_selectedProductPos_FW` value. \n\t */\n\tprivate _selectedProductPos: number;\n\t/**\n\t * Returns the selected current product position. Contains the `removeChart_PosFlag` value when \n\t * there is not any selected current product position. \n\t */\n\tprivate _selectedProductPos_CW: number;\n\t/**\n\t * Returns the selected future product position. Contains the `removeChart_PosFlag` value when \n\t * there is not any selected future product position. \n\t */\n\tprivate _selectedProductPos_FW: number;\n\n\t/**\n\t * Returns the chart's title of features. \n\t * This field is updated a little different. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\tprivate _chartTitle_F: string;\n\t/**\n\t * Returns the chart's title of working current features. \n\t * This field is updated a little different. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\tprivate _chartTitle_F_CW: string;\n\t/**\n\t * Returns the chart's title of working future features. \n\t * This field is updated a little different. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\tprivate _chartTitle_F_FW: string;\n\n\t/**\n\t * Input field that contains the chart's x axis label text of features. \n\t * By default, its value is `'Característica'`. \n\t */\n\t@Input()\n\tpublic xAxisLabel_F: string;\n\n\t/**\n\t * Input field that contains the chart's y axis label text of features. \n\t * By default, its value is `'Realizado / Pendiente En Por Ciento'`. \n\t */\n\t@Input()\n\tpublic yAxisLabel_F: string;\n\n\tpublic constructor()\n\t{\n\t\tthis.withoutProductText = '¡No hay ningún producto!';\n\n\t\tthis._isChartVertical = true;\n\n\t\tthis.tabLabel_CW = 'Trabajos Actuales';\n\t\tthis.tabLabel_FW = 'Trabajos Futuros o Pendientes';\n\t\tthis._selectedTabPos = 0;\n\t\t/* The `_gridHeight` value is set when the `legendPosition` value is set. */\n\n\t\tthis.chartTitle_P = 'Lista de productos';\n\n\t\tthis._isUsingTrick_RepaintChart = false;\n\t\tthis._products = this._currentProducts = [ ];\n\t\tthis._futureProducts = [ ];\n\t\tthis._products_Internal = this._currentProducts_Internal = [ ];\n\t\tthis._futureProducts_Internal = [ ];\n\t\tthis._featuresTotal_Internal = this._currentFeaturesTotal_Internal = [ ];\n\t\tthis._futureFeaturesTotal_Internal = [ ];\n\t\tthis._features_Internal = this._currentFeatures_Internal = [ ];\n\t\tthis._futureFeatures_Internal = [ ];\n\n\t\tthis._activeEntries_P_CW = [ ];\n\t\tthis._activeEntries_P_FW = [ ];\n\n\t\tthis.view = [900, 350];\n\t\tthis.colorScheme_CW = {\n\t\t\tdomain: [  // all colors light\n\t\t\t\t// '#85E96E',  // green\n\t\t\t\t'#6EE9B5',  // light green\n\t\t\t\t'#E96E70',  // red\n\t\t\t\t// '#6F6EE9',  // blue\n\t\t\t\t// '#6EBBE9',  // light blue\n\t\n\t\t\t\t// '#A9A9A9',\n\t\t\t\t// '#85E96E',\n\t\t\t\t// '#E3E96E',\n\t\t\t\t// '#E9AC6E',\n\t\t\t\t// '#E96E70',\n\t\t\t\t// '#E96EB6',\n\t\t\t\t// '#AE6EE9',\n\t\t\t\t// '#6F6EE9',\n\t\t\t\t// '#6EBBE9',\n\t\t\t\t// '#6EE9B5'\n\t\t\t]\n//\t\t\tdomain: [  // all colors dark\n\t\t\t//   '#2F6E6F',\n//\t\t\t  '#2F6F40',  // green\n\t\t\t//   '#6B6F2F',  // light green\n//\t\t\t  '#6F432F',  // red\n\t\t\t//   '#6F2F4F',\n\t\t\t//   '#562F6F',\n\t\t\t//   '#302F6F',\n\t\t\t//   '#2F466F'\n//\t\t\t]\n\t\t\t// domain: [  // all colors grey\n\t\t\t//\t '#a6a6a6',\n\t\t\t//   '#828282',\n\t\t\t//   '#686868',\n\t\t\t//\t '#555555',\n\t\t\t//   '#4d4d4d',\n\t\t\t//   '#464646',\n\t\t\t//   '#434343',\n\t\t\t//   '#3d3d3d',\n\t\t\t//   '#343434',\n\t\t\t//   '#262626',\n\t\t\t//   '#252525',\n\t\t\t//   '#000000'\n\t\t\t// ]\n\t\t};\n\t\tthis.colorScheme_FW = {\n\t\t\tdomain: [\n\t\t\t\t'#6F6EE9',  // blue\n\t\t\t\t'#6EBBE9'   // light blue\n\t\t\t]\n\t\t};\n\t\tthis.gradient = false;\n\t\tthis.barPadding = 12;\n\n\t\tthis.showXAxis = true;\n\t\tthis.showXAxisLabel = true;\t\n\t\tthis.xAxisLabel_P = 'Producto';\n\t\tthis.maxAxisTickLength = 16;\n\n\t\tthis.showYAxis = true;\n\t\tthis.showYAxisLabel = true;\n\t\tthis.yAxisLabel_P = 'Realizado / Pendiente En Por Ciento';\n\n\t\tthis.showLegend = true;\n\t\tthis.legendTitle = 'Leyenda';\n\t\tthis.legendPosition = 'right';\n\n\n\t\tthis._selectedProductPos = this._selectedProductPos_CW = this._selectedProductPos_FW = this.removeChart_PosFlag;\n\n\t\tthis._chartTitle_F = this._chartTitle_F_CW = this._chartTitle_F_FW = 'Lista de características del producto seleccionado';\n\t\tthis.xAxisLabel_F = 'Característica';\n\t\tthis.yAxisLabel_F = 'Realizado / Pendiente En Por Ciento';\n\t}\n\n\tpublic ngOnInit(): void\n\t{ }\n\n\t/**\n\t * Returns the input field that contains the chart's visualization direction. \n\t * It is true if the chart is visualized vertically; otherwise, false (horizontally). \n\t * When this value is set, the `xAxisLabel_P`/`yAxisLabel_P` and `xAxisLabel_F`/`yAxisLabel_F` values are set accordingly. \n\t * By default, its value is `true`. \n\t */\n\t@Input()\n\tpublic get isChartVertical(): boolean\n\t{\n\t\treturn this._isChartVertical;\n\t}\n\n\t/**\n\t * Sets the input field that contains the chart's visualization direction. \n\t * It is true if the chart is visualized vertically; otherwise, false (horizontally). \n\t * When this value is set, the `xAxisLabel_P`/`yAxisLabel_P` and `xAxisLabel_F`/`yAxisLabel_F` values are set accordingly. \n\t * By default, its value is `true`. \n\t * @param value The new chart's visualization direction to set. \n\t */\n\tpublic set isChartVertical(value: boolean)\n\t{\n\t\tif (this._isChartVertical != value)\n\t\t{\n\t\t\tlet temp: string = this.xAxisLabel_P;\n\t\t\tthis.xAxisLabel_P = this.yAxisLabel_P;\n\t\t\tthis.yAxisLabel_P = temp;\n\n\t\t\ttemp = this.xAxisLabel_F;\n\t\t\tthis.xAxisLabel_F = this.yAxisLabel_F;\n\t\t\tthis.yAxisLabel_F = temp;\n\n\t\t\tthis._isChartVertical = value\n\t\t}\n\t}\n\n\t/**\n\t * Returns the grid height. \n\t * Its value is set depending on the `legendPosition` value. \n\t */\n\tpublic get gridHeight(): number\n\t{\n\t\treturn this._gridHeight;\n\t}\n\n\t/**\n\t * Returns the input field that contains the current products array introduced by the user. \n\t * From this array is created the `currentProducts_Internal` and `currentFeatures_Internal` arrays. \n\t * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic get currentProducts(): Product[]\n\t{\n\t\treturn this._currentProducts;\n\t}\n\n\t/**\n\t * Sets the input field that contains the current products array. \n\t * By default, its value is `[]`. \n\t * @param value The new current products array to set. \n\t */\n\tpublic set currentProducts(value: Product[])\n\t{\n\t\t// console.log('currentProducts: ', value);\n\n\t\t/* Updates the current products/features arrays. */\n\t\tthis._currentProducts = value || [ ];\n\t\tif (this._isUsingTrick_RepaintChart)\n\t\t{\n\t\t\tthis._isUsingTrick_RepaintChart = false;\n\n\t\t\tthis._currentProducts_Internal = this._currentProducts_Internal.map(value => value);\n\t\t\tthis._currentFeaturesTotal_Internal = this._currentFeaturesTotal_Internal.map(value => value.map(value => value));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._currentProducts_Internal = [ ];\n\t\t\tthis._currentFeaturesTotal_Internal = [ ];\n\n\t\t\t/* Creates the internal arrays that are going to be passed in the template; \n\t\t\t`_currentProducts_Internal` and `_currentFeaturesTotal_Internal` arrays. \n\t\t\tThe `_currentFeatures_Internal` array references an element in \n\t\t\tthe `_currentFeaturesTotal_Internal` array. This element represents the features \n\t\t\tof a selected product in the `_currentProducts_Internal` array. */\n\t\t\tthis._createsInternalArrays(this._currentProducts, this._currentProducts_Internal, this._currentFeaturesTotal_Internal);\n\t\t}\n\t\tthis._currentFeatures_Internal = [ ];\n\n\t\t/* Updates the fields whether there is a selected current product. */\n\t\tif (this._selectedProductPos_CW != this.removeChart_PosFlag)\n\t\t{\n\t\t\tif (this._selectedProductPos_CW < this._currentProducts.length)\n\t\t\t{\n\t\t\t\t/* Updates the fields whether the new `_currentProducts` array has the enough length. */\n\n\t\t\t\t/* The `_selectedProductPos_CW` value is already correct. */\n\t\t\t\tthis._currentFeatures_Internal = this._currentFeaturesTotal_Internal[this._selectedProductPos_CW];\n\t\t\t\tthis._set_activeEntries_P_CW(false);\n\t\t\t\tthis._chartTitle_F_CW = this._chartTitle_F \n\t\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t\t+ `“${ this._currentProducts_Internal[this._selectedProductPos_CW].name }”`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Removes the selected current product because the `_currentProducts` array has not the enough length. */\n\n\t\t\t\tthis._selectedProductPos_CW = this.removeChart_PosFlag;\n\t\t\t\t/* The `_currentFeatures_Internal` array is already correct (an empty array). */\n\t\t\t\tthis._set_activeEntries_P_CW(true);\n\t\t\t\tthis._chartTitle_F_CW = this._chartTitle_F;\n\t\t\t}\n\t\t}\n\n\t\t/* Updates the fields whether the selected tab is the current works. */\n\t\tif (this._selectedTabPos == 0)\n\t\t{\n\t\t\tthis._setData_CW();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the current products array displayed in the chart. \n\t * It is created from the `currentProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get currentProducts_Internal(): ChartBar[]\n\t{\n\t\treturn this._currentProducts_Internal;\n\t}\n\n\t/**\n\t * Returns the current features array of a selected product displayed in the chart. \n\t * It is created from the `currentProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get currentFeatures_Internal(): ChartBar[]\n\t{\n\t\treturn this._currentFeatures_Internal;\n\t}\n\n\t/**\n\t * Returns the input field that contains the future products array introduced by the user. \n\t * From this array is created the `futureProducts_Internal` and `futureFeatures_Internal` arrays. \n\t * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic get futureProducts(): Product[]\n\t{\n\t\treturn this._futureProducts;\n\t}\n\n\t/**\n\t * Sets the input field that contains the future products array. \n\t * By default, its value is `[]`. \n\t * @param value The new future products array to set. \n\t */\n\tpublic set futureProducts(value: Product[])\n\t{\n\t\t// console.log('futureProducts: ', value);\n\n\t\t/* Updates the future products/features arrays. */\n\t\tthis._futureProducts = value || [ ];\n\t\tif (this._isUsingTrick_RepaintChart)\n\t\t{\n\t\t\tthis._isUsingTrick_RepaintChart = false;\n\n\t\t\tthis._futureProducts_Internal = this._futureProducts_Internal.map(value => value);\n\t\t\tthis._futureFeaturesTotal_Internal = this._futureFeaturesTotal_Internal.map(value => value.map(value => value));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._futureProducts_Internal = [ ];\n\t\t\tthis._futureFeaturesTotal_Internal = [ ];\n\n\t\t\t/* Creates the internal arrays that are going to be passed in the template; \n\t\t\t`_futureProducts_Internal` and `_futureFeaturesTotal_Internal` arrays. \n\t\t\tThe `_futureFeatures_Internal` array references an element in \n\t\t\tthe `_futureFeaturesTotal_Internal` array. This element represents the features \n\t\t\tof a selected product in the `_futureProducts_Internal` array. */\n\t\t\tthis._createsInternalArrays(this._futureProducts, this._futureProducts_Internal, this._futureFeaturesTotal_Internal);\n\t\t}\n\t\tthis._futureFeatures_Internal = [ ];\n\n\t\t/* Updates the fields whether there is a selected future product. */\n\t\tif (this._selectedProductPos_FW != this.removeChart_PosFlag)\n\t\t{\n\t\t\tif (this._selectedProductPos_FW < this._futureProducts.length)\n\t\t\t{\n\t\t\t\t/* Updates the fields whether the new `_futureProducts` array has the enough length. */\n\n\t\t\t\t/* The `_selectedProductPos_FW` value is already correct. */\n\t\t\t\tthis._futureFeatures_Internal = this._futureFeaturesTotal_Internal[this._selectedProductPos_FW];\n\t\t\t\tthis._set_activeEntries_P_FW(false);\n\t\t\t\tthis._chartTitle_F_FW = this._chartTitle_F \n\t\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t\t+ `“${ this._futureProducts_Internal[this._selectedProductPos_FW].name }”`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Removes the selected future product because the `_futureProducts` array has not the enough length. */\n\n\t\t\t\tthis._selectedProductPos_FW = this.removeChart_PosFlag;\n\t\t\t\t/* The `_futureFeatures_Internal` array is already correct (an empty array). */\n\t\t\t\tthis._set_activeEntries_P_FW(true);\n\t\t\t\tthis._chartTitle_F_FW = this._chartTitle_F;\n\t\t\t}\n\t\t}\n\n\t\t/* Updates the fields whether the selected tab is the future works. */\n\t\tif (this._selectedTabPos == 1)\n\t\t{\n\t\t\tthis._setData_FW();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the future products array displayed in the chart. \n\t * It is created from the `futureProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get futureProducts_Internal(): ChartBar[]\n\t{\n\t\treturn this._futureProducts_Internal;\n\t}\n\n\t/**\n\t * Returns the future features array of a selected product displayed in the chart. \n\t * It is created from the `futureProducts` array. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get futureFeatures_Internal(): ChartBar[]\n\t{\n\t\treturn this._futureFeatures_Internal;\n\t}\n\n\t/**\n\t * Returns the current product elements array to highlight displayed in the chart. \n\t * It is modified dynamically. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get activeEntries_P_CW(): EntryElement[]\n\t{\n\t\treturn this._activeEntries_P_CW;\n\t}\n\n\t/**\n\t * Sets the current product elements array to highlight displayed in the chart. \n\t * @param setEmpty If it is true, then sets the `_activeEntries_P_CW` array to empty. \n\t */\n\tprivate _set_activeEntries_P_CW(setEmpty: boolean): void\n\t{\n\t\t// console.log('Called \"_set_activeEntries_P_CW\": setEmpty = ', setEmpty);\n\n\t\tif (setEmpty)\n\t\t{\n\t\t\tthis._activeEntries_P_CW = [ ];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet selectedProduct: ChartBar = this._currentProducts_Internal[this._selectedProductPos_CW];\n\n\t\t\tthis._activeEntries_P_CW = [\n\t\t\t\t{\n\t\t\t\t\t'name': selectedProduct.series[0].name,\n\t\t\t\t\t'value': selectedProduct.series[0].value,\n\t\t\t\t\t'label': selectedProduct.series[0].name,\n\t\t\t\t\t'series': selectedProduct.name\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'name': selectedProduct.series[1].name,\n\t\t\t\t\t'value': selectedProduct.series[1].value,\n\t\t\t\t\t'label': selectedProduct.series[1].name,\n\t\t\t\t\t'series': selectedProduct.name\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the future product elements array to highlight displayed in the chart. \n\t * It is modified dynamically. \n\t * By default, its value is `[]`. \n\t */\n\tpublic get activeEntries_P_FW(): EntryElement[]\n\t{\n\t\treturn this._activeEntries_P_FW;\n\t}\n\n\t/**\n\t * Sets the future product elements array to highlight displayed in the chart. \n\t * @param setEmpty If it is true, then sets the `_activeEntries_P_FW` array to empty. \n\t */\n\tprivate _set_activeEntries_P_FW(setEmpty: boolean): void\n\t{\n\t\t// console.log('Called \"_set_activeEntries_P_FW\": setEmpty = ', setEmpty);\n\n\t\tif (setEmpty)\n\t\t{\n\t\t\tthis._activeEntries_P_FW = [ ];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet selectedProduct: ChartBar = this._futureProducts_Internal[this._selectedProductPos_FW];\n\n\t\t\tthis._activeEntries_P_FW = [\n\t\t\t\t{\n\t\t\t\t\t'name': selectedProduct.series[0].name,\n\t\t\t\t\t'value': selectedProduct.series[0].value,\n\t\t\t\t\t'label': selectedProduct.series[0].name,\n\t\t\t\t\t'series': selectedProduct.name\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'name': selectedProduct.series[1].name,\n\t\t\t\t\t'value': selectedProduct.series[1].value,\n\t\t\t\t\t'label': selectedProduct.series[1].name,\n\t\t\t\t\t'series': selectedProduct.name\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the input field that contains the chart's legend position. Its value is `'right'` or `'below'`. \n\t * By default, its value is `'right'`. \n\t */\n\t@Input()\n\tpublic get legendPosition(): string\n\t{\n\t\treturn this._legendPosition;\n\t}\n\n\t/**\n\t * Sets the input field that contains the chart's legend position. Its value is `'right'` or `'below'`. \n\t * By default, its value is `'right'`. \n\t * @param value The new chart's legend position to set. \n\t */\n\tpublic set legendPosition(value: string)\n\t{\n\t\tif ((this._legendPosition = value) == 'below')\n\t\t{\n\t\t\t/* Sets the grid height. */\n\t\t\tthis._gridHeight = this.view[1] + 60;  /* More 60 to include the legend in the grid. */\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Sets the grid height. */\n\t\t\tthis._gridHeight = this.view[1];\n\t\t}\n\t}\n\n\t/**\n\t * Returns a boolean value that indicates the legend position. \n\t * It is true if the legend position is `'right'`; otherwise, false (`'below'`). \n\t * By default, its value is `true`. \n\t */\n\tpublic get isLegendRight(): boolean\n\t{\n\t\treturn (this.legendPosition == 'right');\n\t}\n\n\t/**\n\t * Sets a boolean value that indicates the legend position. \n\t * It is true if the legend position is `'right'`; otherwise, false (`'below'`). \n\t * By default, its value is `true`. \n\t * @param value The new boolean value to set. \n\t */\n\tpublic set isLegendRight(value: boolean)\n\t{\n\t\tthis.legendPosition = (value) ? 'right' : 'below';\n\t}\n\n\t/**\n\t * Returns the selected current product position. Contains the `removeChart_PosFlag` value when \n\t * there is not any selected current product position. \n\t */\n\tpublic get selectedProductPos_CW(): number\n\t{\n\t\treturn this._selectedProductPos_CW;\n\t}\n\n\t/**\n\t * Returns the selected future product position. Contains the `removeChart_PosFlag` value when \n\t * there is not any selected future product position. \n\t */\n\tpublic get selectedProductPos_FW(): number\n\t{\n\t\treturn this._selectedProductPos_FW;\n\t}\n\n\t/**\n\t * Returns the input field that contains the chart's title of features. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\t@Input()\n\tpublic get chartTitle_F(): string\n\t{\n\t\treturn this._chartTitle_F;\n\t}\n\n\t/**\n\t * Sets the input field that contains the chart's title of features. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t * @param value The new chart's title of features to set. \n\t */\n\tpublic set chartTitle_F(value: string)\n\t{\n\t\tthis._chartTitle_F = value || 'Lista de características del producto seleccionado';\n\n\t\t/* Updates all chart's titles of features. */\n\n\t\tthis._chartTitle_F_CW = (this._selectedProductPos_CW == this.removeChart_PosFlag) \n\t\t\t? (this._chartTitle_F)\n\t\t\t: (this._chartTitle_F \n\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t+ `“${ this._currentProducts_Internal[this._selectedProductPos_CW].name }”`);\n\n\t\tthis._chartTitle_F_FW = (this._selectedProductPos_FW == this.removeChart_PosFlag) \n\t\t\t? (this._chartTitle_F)\n\t\t\t: (this._chartTitle_F \n\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t+ `“${ this._futureProducts_Internal[this._selectedProductPos_FW].name }”`);\n\t}\n\n\t/**\n\t * Returns the chart's title of working current features. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\tpublic get chartTitle_F_CW(): string\n\t{\n\t\treturn this._chartTitle_F_CW;\n\t}\n\n\t/**\n\t * Returns the chart's title of working future features. \n\t * By default, its value is `'Lista de características del producto seleccionado'`. \n\t */\n\tpublic get chartTitle_F_FW(): string\n\t{\n\t\treturn this._chartTitle_F_FW;\n\t}\n\n\tpublic onSelectTab(newPos: number): void\n\t{\n\t\t// console.log('onSelectTab pos: ', newPos);\n\n\t\t/* Uses this trick to obligate repainting the chart. */\n\t\tthis._isUsingTrick_RepaintChart = true;\n\n\t\tif ((this._selectedTabPos = newPos) == 0)\n\t\t{\n\t\t\tthis.currentProducts = this.currentProducts.map(value => value);\n\n\t\t\t// this._setData_CW();  /* Better performance: Use this option if you do not use the dynamic legend position or not resize the navigator. */\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.futureProducts = this.futureProducts.map(value => value);\n\n\t\t\t// this._setData_FW();  /* Better performance: Use this option if you do not use the dynamic legend position or not resize the navigator. */\n\t\t}\n\t}\n\n\tpublic onSelect(eventInfo: any): void\n\t{\n\t\t// console.log('onSelect: ', eventInfo);\n\n\t\tif (isObject(eventInfo))  /* It has not clicked a legend item. */\n\t\t{\n\t\t\tlet tempPos: number;\n\t\t\tconst len: number = this._products_Internal.length;\n\t\t\tconst posAsString: string = eventInfo.series;\n\n\t\t\t/* Gets the new selected position. */\n\t\t\tfor(tempPos = 0; tempPos < len; tempPos++)\n\t\t\t{\n\t\t\t\tif (this._products_Internal[tempPos].name == posAsString) break;\n\t\t\t}\n\n\t\t\t/* Updates the `_selectedProductPos_CW`/`_selectedProductPos_FW`. If the new selected \n\t\t\t * position equals the current selected position, then the chart for displaying \n\t\t\t * the features list of the selected product will be removed. */\n\t\t\tthis._updateProductPos(tempPos);\n\t\t}\n\t}\n\n\tpublic onActivate(eventInfo: any): void\n\t{\n\t\t// console.log('onActivate: ', eventInfo);\n\t}\n\n\tpublic onDeactivate(eventInfo: any): void\n\t{\n\t\t// console.log('onDeactivate: ', eventInfo, ', _activeEntries_P_CW = ', this._activeEntries_P_CW, ', _activeEntries_P_FW = ', this._activeEntries_P_FW);\n\n\t\tif (this._isFeaturesChartShowed)\n\t\t{\n\t\t\tif (this._selectedTabPos == 0)\n\t\t\t{\n\t\t\t\tthis._activeEntries_P_CW = this._activeEntries_P_CW.map(value => value);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._activeEntries_P_FW = this._activeEntries_P_FW.map(value => value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the data of current works. \n\t */\n\tprivate _setData_CW(): void\n\t{\n\t\tthis._products = this._currentProducts;\n\t\tthis._products_Internal = this._currentProducts_Internal;\n\t\tthis._featuresTotal_Internal = this._currentFeaturesTotal_Internal;\n\t\tthis._features_Internal = this._currentFeatures_Internal;\n\n\t\tthis._selectedProductPos = this._selectedProductPos_CW;\n\t}\n\n\t/**\n\t * Sets the data of future works. \n\t */\n\tprivate _setData_FW(): void\n\t{\n\t\tthis._products = this._futureProducts;\n\t\tthis._products_Internal = this._futureProducts_Internal;\n\t\tthis._featuresTotal_Internal = this._futureFeaturesTotal_Internal;\n\t\tthis._features_Internal = this._futureFeatures_Internal;\n\n\t\tthis._selectedProductPos = this._selectedProductPos_FW;\n\t}\n\n\t/**\n\t * Returns true if the features chart is showed; otherwise, false. \n\t */\n\tprivate get _isFeaturesChartShowed(): boolean\n\t{\n\t\treturn (this._selectedProductPos != this.removeChart_PosFlag);\n\t}\n\n\t/**\n\t * Updates the `selectedProductPos`. If the new selected position equals the current \n\t * selected position, then the chart for displaying the features list of the selected product \n\t * will be removed. \n\t * @param newSelectedPosition The new selected position. \n\t */\n\tprivate _updateProductPos(newSelectedPosition: number): void\n\t{\n\t\t/* Updates the `selectedProductPos`. If the new selected position equals the current \n\t\t * selected position, then the chart for displaying the features list of the selected product \n\t\t * will be removed. */\n\t\tif (newSelectedPosition == this._selectedProductPos)\n\t\t{\n\t\t\tif (this._selectedTabPos == 0)\n\t\t\t{\n\t\t\t\tthis._selectedProductPos = this._selectedProductPos_CW = this.removeChart_PosFlag;\n\t\t\t\tthis._features_Internal = this._currentFeatures_Internal = [ ];\n\t\t\t\tthis._set_activeEntries_P_CW(true);\n\t\t\t\tthis._chartTitle_F_CW = this._chartTitle_F;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._selectedProductPos = this._selectedProductPos_FW = this.removeChart_PosFlag;\n\t\t\t\tthis._features_Internal = this._futureFeatures_Internal = [ ];\n\t\t\t\tthis._set_activeEntries_P_FW(true);\n\t\t\t\tthis._chartTitle_F_FW = this._chartTitle_F;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this._selectedTabPos == 0)\n\t\t\t{\n\t\t\t\tthis._selectedProductPos = this._selectedProductPos_CW = newSelectedPosition;\n\t\t\t\tthis._features_Internal = this._currentFeatures_Internal = this._featuresTotal_Internal[newSelectedPosition];\n\t\t\t\tthis._set_activeEntries_P_CW(false);\n\t\t\t\tthis._chartTitle_F_CW = this._chartTitle_F \n\t\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t\t+ `“${ this._products_Internal[newSelectedPosition].name }”`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._selectedProductPos = this._selectedProductPos_FW = newSelectedPosition;\n\t\t\t\tthis._features_Internal = this._futureFeatures_Internal = this._featuresTotal_Internal[newSelectedPosition];\n\t\t\t\tthis._set_activeEntries_P_FW(false);\n\t\t\t\tthis._chartTitle_F_FW = this._chartTitle_F \n\t\t\t\t\t+ ((this._chartTitle_F.length == 0) ? '' : ' ') \n\t\t\t\t\t+ `“${ this._products_Internal[newSelectedPosition].name }”`;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates the internal arrays that are going to be passed in the template \n\t * for the current/future products/features accordingly. \n\t * @param products The current/future products array introduced by the user. \n\t * @param products_Internal The current/future products array displayed in the chart. \n\t * @param featuresTotal_Internal The array that contains all current/future features arrays that can be displayed in the chart. \n\t */\n\tprivate _createsInternalArrays(products: Product[], products_Internal: ChartBar[], featuresTotal_Internal: ChartBar[][]): void\n\t{\n\t\t/* Creates the internal arrays that are going to be passed in the template; \n\t\t`_currentProducts_Internal`/`_futureProducts_Internal` and `_currentFeaturesTotal_Internal`/`_futureFeaturesTotal_Internal` arrays. \n\t\tThe `_currentFeatures_Internal`/`_futureFeatures_Internal` array references an element in \n\t\tthe `_currentFeaturesTotal_Internal`/`_futureFeaturesTotal_Internal` array. This element represents the features \n\t\tof a selected product in the `_currentProducts_Internal`/`_futureProducts_Internal` array. */\n\n\t\tlet i: number, j: number;\n\t\tconst len_i: number = products.length;\n\t\tlet len_j: number;\n\t\tlet tempCurrentFeatures_Internal: ChartBar[];\n\t\tlet tempFeatures: Feature[];\n\t\tlet tempAchieved: number;\n\n\t\t/* Calculates the achieved percentage of a product. */\n\t\tlet achievedPercentage_P: number;\n\t\tlet maxPercentage_F: number;\n\t\tlet achievedPercentage_F: number;\n\n\t\tfor(i = 0; i < len_i; i++)\n\t\t{\n\t\t\ttempCurrentFeatures_Internal = [ ];\n\t\t\tlen_j = ((tempFeatures = products[i].features) ? tempFeatures.length : 0);\n\t\t\tmaxPercentage_F = len_j * 100.00;\n\t\t\tachievedPercentage_F = 0;\n\n\t\t\tfor(j = 0; j < len_j; j++)\n\t\t\t{\n\t\t\t\t/* Adds all `achieved` values of the `tempFeatures` array. */\n\t\t\t\tachievedPercentage_F += (tempAchieved = tempFeatures[j].achieved);\n\n\t\t\t\t/* Creates the current features array of this product displayed in the chart. */\n\t\t\t\ttempCurrentFeatures_Internal.push({\n\t\t\t\t\t'name': tempFeatures[j].name,\n\t\t\t\t\t'series': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'name': 'realizado',  // TODO: Use the `seriesName_English` and `seriesName_Spanish` constants depending on the language selected. \n\t\t\t\t\t\t\t'value': tempAchieved\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'name': 'pendiente',  // TODO: Use the `seriesName_English` and `seriesName_Spanish` constants depending on the language selected. \n\t\t\t\t\t\t\t'value': 100.00 - tempAchieved\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* Calculates the achieved percentage of this product. */\n\t\t\tachievedPercentage_P = (achievedPercentage_F * 100.00) / maxPercentage_F;\n\t\t\t// achievedPercentage_P = Math.round(((achievedPercentage_F * 100.00) / maxPercentage_F) * 100.00) / 100.00;\n\n\t\t\t/* Creates the current products array displayed in the chart. */\n\t\t\tproducts_Internal.push({\n\t\t\t\t'name': products[i].name,\n\t\t\t\t'series': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'realizado',  // TODO: Use the `seriesName_English` and `seriesName_Spanish` constants depending on the language selected. \n\t\t\t\t\t\t'value': achievedPercentage_P\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'pendiente',  // TODO: Use the `seriesName_English` and `seriesName_Spanish` constants depending on the language selected. \n\t\t\t\t\t\t'value': 100.00 - achievedPercentage_P\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t/* Creates the array that contains all current features arrays that can be displayed in the chart. */\n\t\t\tfeaturesTotal_Internal.push(tempCurrentFeatures_Internal);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the chart for displaying the features list of the selected product. \n\t */\n\tpublic click_RemoveChart(): void\n\t{\n\t\tthis._updateProductPos(this._selectedProductPos);\n\t}\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\nimport { Product } from '../road-map/road-map.component';\n\n@Component({\n\tselector: 'toco-road-map-sceiba',\n\ttemplateUrl: './road-map-sceiba.component.html',\n\tstyleUrls: ['./road-map-sceiba.component.scss']\n})\nexport class RoadMapSceibaComponent implements OnInit\n{\n\t/**\n\t * Returns the road map's title. \n\t * By default, its value is `'Visualización del roadmap del proyecto Sceiba'`. \n\t */\n\tpublic title: string;\n\n\t/**\n\t * Returns the current products array introduced by the user. \n\t * From this array is created the internal current products array, \n\t * and the internal current features array for each product. \n\t * By default, its value is `[]`. \n\t */\n\tpublic currentProducts: Product[];\n\n\t/**\n\t * Returns the future products array introduced by the user. \n\t * From this array is created the internal future products array, \n\t * and the internal future features array for each product. \n\t * By default, its value is `[]`. \n\t */\n\tpublic futureProducts: Product[];\n\n\tpublic constructor()\n\t{\n\t\tthis.title = 'Visualización del roadmap del proyecto Sceiba';\n\t\tthis.currentProducts = [ ];\n\t\tthis.futureProducts = [ ];\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t// this.currentProducts = [ ];\n\t\t// this.currentProducts = undefined;\n\t\tthis.currentProducts = [\n\t\t\t{\n\t\t\t\t'name': 'Producto-1',  /* 'achieved' = 33.33 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-1',\n\t\t\t\t\t\t'achieved': 20\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-2',\n\t\t\t\t\t\t'achieved': 50\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-3',\n\t\t\t\t\t\t'achieved': 30\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Producto-2',  /* 'achieved' = 51.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-1',\n\t\t\t\t\t\t'achieved': 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-2',\n\t\t\t\t\t\t'achieved': 50\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-3',\n\t\t\t\t\t\t'achieved': 75\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-4',\n\t\t\t\t\t\t'achieved': 30\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-5',\n\t\t\t\t\t\t'achieved': 95\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Producto-3',  /* 'achieved' = 100.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-1',\n\t\t\t\t\t\t'achieved': 100\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Producto-4',  /* 'achieved' = 0.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-1',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Producto-5',  /* 'achieved' = 47.50 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-1',\n\t\t\t\t\t\t'achieved': 80\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-2',\n\t\t\t\t\t\t'achieved': 25\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-3',\n\t\t\t\t\t\t'achieved': 95\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-4',\n\t\t\t\t\t\t'achieved': 40\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-5',\n\t\t\t\t\t\t'achieved': 10\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-6',\n\t\t\t\t\t\t'achieved': 15\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-7',\n\t\t\t\t\t\t'achieved': 15\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Característica-8',\n\t\t\t\t\t\t'achieved': 100\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Producto-6',  /* 'achieved' = -- */\n\t\t\t\t'features': [\n\t\t\t\t]\n\t\t\t\t// 'features': undefined\n\t\t\t}\n\t\t];\n\n\t\t// this.futureProducts = [ ];\n\t\t// this.futureProducts = undefined;\n\t\tthis.futureProducts = [\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-1',  /* 'achieved' = 33.33 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-1',\n\t\t\t\t\t\t'achieved': 80\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-2',\n\t\t\t\t\t\t'achieved': 50\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-2',  /* 'achieved' = 51.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-1',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-2',\n\t\t\t\t\t\t'achieved': 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-3',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-4',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-5',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-3',  /* 'achieved' = 100.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-1',\n\t\t\t\t\t\t'achieved': 100\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-4',  /* 'achieved' = 0.00 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-1',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-5',  /* 'achieved' = 47.50 */\n\t\t\t\t'features': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-1',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-2',\n\t\t\t\t\t\t'achieved': 100\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-3',\n\t\t\t\t\t\t'achieved': 50\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-4',\n\t\t\t\t\t\t'achieved': 20\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-5',\n\t\t\t\t\t\t'achieved': 80\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-6',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-7',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'name': 'Fut-Característica-8',\n\t\t\t\t\t\t'achieved': 0\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Fut-Producto-6',  /* 'achieved' = -- */\n\t\t\t\t'features': [\n\t\t\t\t]\n\t\t\t\t// 'features': undefined\n\t\t\t}\n\t\t];\n\t}\n}\n","\nimport { Directive, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\n\n/**\n * A helper directive to mark valid insertion points in the template. \n * This directive injects the `ViewContainerRef` to gain access to the view container of the element \n * that will host the dynamically components. \n * In the `@Directive` decorator, notice the selector name, `get-view-container`; that's what you use \n * to apply the directive to the element. \n */\n@Directive({\n    selector: '[get-view-container]'\n})\nexport class GetViewContainerDirective\n{\n    public constructor(private _viewContainerRef: ViewContainerRef, private _componentFactoryResolver: ComponentFactoryResolver)\n    { }\n\n    /**\n     * Returns the injected `ViewContainerRef` to gain access to the view container of the element \n     * that will host the dynamically components. \n     */\n    public get viewContainerRef(): ViewContainerRef\n    {\n        return this._viewContainerRef;\n    }\n\n    /**\n     * Returns the injected `ComponentFactoryResolver` to gain access to the factory for a given component type. \n     */\n    public get componentFactoryResolver(): ComponentFactoryResolver\n    {\n        return this._componentFactoryResolver;\n    }\n}\n","\nimport { Directive, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { AbstractControl, FormControl, ValidatorFn, ValidationErrors, Validator, NG_VALIDATORS, FormGroup, FormArray } from '@angular/forms';\n\n/**\n * Represents a class that contains a boolean property named `required`. \n */\nexport interface RequiredProperty\n{\n    /**\n     * Returns true if the control is required; otherwise, false. \n     */\n    readonly required: boolean;\n}\n\n/**\n * @description\n * Provides a set of extra validators that can be used by form controls. \n *\n * A validator is a function that processes a `FormControl` or collection of \n * controls and returns an error map or `null`. A `null` map means that validation has passed. \n *\n * @see [Form Validation](/guide/form-validation)\n */\nexport class ExtraValidators\n{\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be equal to the \n     * provided length. It assumes that the control's value is of string type. \n     * This validator is used with Reactive Forms; if you want to use \n     * an equivalent validator with Template-driven Form you must use the `equalLength` attribute. \n     *\n     * @usageNotes\n     *\n     * ### Validates that the field has a length of 4 characters: \n     *\n     * ```typescript \n     * const control = new FormControl('ng', ExtraValidators.equalLength(4)); \n     *\n     * console.log(control.errors); // { equalLength: { requiredLength: 4, actualLength: 2 } } \n     * ``` \n     *\n     * ```html \n     * <input name=\"firstName\" ngModel equallength=\"4\"> \n     * ``` \n     *\n     * @returns A validator function that returns an error map with the `equalLength` \n     * if the validation check fails, otherwise `null`. \n     */\n    public static equalLength(equalLength: number): ValidatorFn\n    {\n        const res = (control: AbstractControl): ValidationErrors | null => {\n            const len: number = control.value ? control.value.length : 0;\n\n            return ((len != 0) && (len != equalLength)) \n                ? { 'equalLength': { 'requiredLength': equalLength, 'actualLength': len } } \n                : null;\n        };\n\n        return res;\n    }\n\n    /**\n     * @description\n     * Validator that is applied to `FormArray` controls. It requires that the amount of \n\t * `FormArray`'s child controls to be greater than or equal to the provided minimum length. \n\t * The validator exists only as a function and not as a directive. \n     *\n     * @usageNotes\n     *\n     * ### Validates that the `FormArray` field has a minimum of 2 child controls: \n     *\n     * ```typescript \n     * const formArrayControl = new FormArray([new FormControl('ng')], ExtraValidators.minLength(2)); \n     *\n\t * console.log(formArrayControl.errors); // { minLength: { requiredLength: 2, actualLength: 1 } } \n     * ``` \n     *\n     * @returns A validator function that returns an error map with the \n     * `minLength` if the validation check fails, otherwise `null`. \n     */\n    public static minLength(minLength: number): ValidatorFn\n    {\n        const res = (control: FormArray): ValidationErrors | null => {\n            const len: number = control.controls.length;\n\n            return (len < minLength) \n                ? { 'minLength': { 'requiredLength': minLength, 'actualLength': len } } \n                : null;\n        };\n\n        return res;\n    }\n\n    /**\n     * @description\n     * Validator that is applied to a control that has an array of child controls. \n     * It receives an object that fits the `RequiredProperty` interface and an array of child controls. \n     * The behavior of the validator is the following: \n     * If the control's value is required, then \n     *   - all child controls must be different of empty. \n     * If the control's value is not required, then \n     *   - all child controls can be empty. \n     *   - if there is at least one child control not empty, then all child controls must be different of empty. \n     * The validator exists only as a function and not as a directive. \n     *\n     * @usageNotes\n     *\n     * ### Validates that the control does not have an empty child control: \n     *\n     * ```typescript \n     * const control = new FormGroup({\n     *     'fg': (firstGroup = new FormControl('2049')), \n     *     'sg': (secondGroup = new FormControl(''))}, \n     *     ExtraValidators.requiredAndNotEmpty(this, [firstGroup, secondGroup])); \n     *\n     * console.log(control.errors); // { requiredAndNotEmpty: { required: true, pos: 1 } } \n     * ``` \n     *\n     * @returns A validator function that returns an error map with the `requiredAndNotEmpty` \n     * if the validation check fails, otherwise `null`. \n     */\n    public static requiredAndNotEmpty(requiredProperty: RequiredProperty, childControls: FormControl[]): ValidatorFn\n    {\n        const res = (control: AbstractControl): ValidationErrors | null => {\n            let i: number = 0;\n            let controlsGroupLength: number = childControls.length;\n\n            if (requiredProperty.required)\n            {\n                /* Only iterates to the first empty element. */\n                for (; i < controlsGroupLength; i++)\n                {\n                    if (!childControls[i].value) break;\n                }\n\n                return (i == controlsGroupLength) \n                    ? null \n                    : { 'requiredAndNotEmpty': { 'required': true, 'pos': i } };\n            }\n            else\n            {\n                let hasControlNotEmpty: boolean = false;\n                let minEmptyPos: number = -1;\n\n                /* Iterates to the first empty element. */\n                for (; i < controlsGroupLength; i++)\n                {\n                    if (childControls[i].value)\n                    {\n                        if (minEmptyPos != -1) break;\n                        hasControlNotEmpty = true;\n                    }\n                    else\n                    {\n                        if (minEmptyPos == -1) minEmptyPos = i;\n                        if (hasControlNotEmpty) break;\n                    }\n                }\n\n                return (i == controlsGroupLength)\n                    ? null\n                    : { 'requiredAndNotEmpty': { 'required': true, 'pos': minEmptyPos } };\n            }\n        };\n\n        return res;\n    }\n\n    /**\n     * @description\n     * Validator that requires the control's value pass an ISSN validation test (confirm the check digit). \n     * Assumes that the code (control's value) is a string of length 11, with the form 'XXXX – XXXX'. \n     * The validator exists only as a function and not as a directive. \n     *\n     * @usageNotes\n     *\n     * ### Validates that the field matches a valid ISSN pattern (confirms the check digit): \n     *\n     * ```typescript \n     * const control = new FormControl('2049 – 3635', ExtraValidators.issnConfirmCheckDigitOneField(11)); \n     *\n     * console.log(control.errors); // { issnConfirmCheckDigitOneField: true } \n     * ``` \n     *\n     * @returns A validator function that returns an error map with the `issnConfirmCheckDigitOneField` \n     * if the validation check fails, otherwise `null`. \n     */\n    public static issnConfirmCheckDigitOneField(codeLength: number): ValidatorFn\n    {\n        const res = (control: AbstractControl): ValidationErrors | null => {\n            if (control.value.length == codeLength)\n            {\n                let code: string = control.value;\n\n                let result: number = (code.charCodeAt(0) - 48) * 8;\n                result += (code.charCodeAt(1) - 48) * 7;\n                result += (code.charCodeAt(2) - 48) * 6;\n                result += (code.charCodeAt(3) - 48) * 5;\n\n                /* code[4] = ' ', code[5] = '–', code[6] = ' '. */\n\n                result += (code.charCodeAt(7) - 48) * 4;\n                result += (code.charCodeAt(8) - 48) * 3;\n                result += (code.charCodeAt(9) - 48) * 2;\n                result += ((code[10] == 'x') || (code[10] == 'X')) ? 10 : code.charCodeAt(10) - 48;\n\n                return (result % 11) \n                    ? { 'issnConfirmCheckDigitOneField': true } \n                    : null;\n            }\n\n            return null;\n        };\n\n        return res;\n    }\n\n    /**\n     * @description\n     * Validator that requires the control's value passes an ISSN validation test (confirms the check digit). \n     * The ISSN value is divided in two groups, therefore the control has two child controls and they are \n     * arguments of the validator method. It assumes that the control's value is of string type. \n     * The validator exists only as a function and not as a directive. \n     *\n     * @usageNotes\n     *\n     * ### Validates that the field matches a valid ISSN pattern (confirms the check digit): \n     *\n     * ```typescript \n     * const control = new FormGroup({\n     *     'fg': (firstGroup = new FormControl('2049')), \n     *     'sg': (secondGroup = new FormControl('3635'))}, \n     *     ExtraValidators.issnConfirmCheckDigitTwoField(firstGroup, secondGroup, 4)); \n     *\n     * console.log(control.errors); // { issnConfirmCheckDigitTwoField: true } \n     * ``` \n     *\n     * @returns A validator function that returns an error map with the `issnConfirmCheckDigitTwoField` \n     * if the validation check fails, otherwise `null`. \n     */\n    public static issnConfirmCheckDigitTwoField(firstGroup: FormControl, secondGroup: FormControl, groupLength: number): ValidatorFn\n    {\n        const res = (control: AbstractControl): ValidationErrors | null => {\n            if ((firstGroup.value.length == groupLength) && (secondGroup.value.length == groupLength))\n            {\n                let groupValue: string = firstGroup.value;\n\n                let result: number = (groupValue.charCodeAt(0) - 48) * 8;\n                result += (groupValue.charCodeAt(1) - 48) * 7;\n                result += (groupValue.charCodeAt(2) - 48) * 6;\n                result += (groupValue.charCodeAt(3) - 48) * 5;\n\n                result += ((groupValue = secondGroup.value).charCodeAt(0) - 48) * 4;\n                result += (groupValue.charCodeAt(1) - 48) * 3;\n                result += (groupValue.charCodeAt(2) - 48) * 2;\n                result += ((groupValue[3] == 'x') || (groupValue[3] == 'X')) ? 10 : groupValue.charCodeAt(3) - 48;\n\n                return (result % 11) \n                    ? { 'issnConfirmCheckDigitTwoField': true } \n                    : null;\n            }\n\n            return null;\n        };\n\n        return res;\n    }\n\n    public static issnValidator(internalFormGroup: FormGroup): ValidatorFn\n    {\n        const res = (control: AbstractControl): ValidationErrors | null => {\n            return (!internalFormGroup.valid) \n                ? { 'issnValidator': { 'requiredValid': internalFormGroup.valid } } \n                : null;\n        };\n\n        return res;\n    }\n}\n\n/**\n * @description\n * A directive that represents a validator that requires the length of the control's value \n * to be equal to the provided length. The control must be marked with the `equalLength` attribute. \n * The directive is provided with the `NG_VALIDATORS` mult-provider list. \n * This validator is used with Template-driven Form; if you want to use an equivalent validator \n * with Reactive Forms you must use the `ExtraValidators.equalLength` method. \n *\n * @usageNotes\n *\n * ### Validates that the field has a length of 4 characters: \n *\n * The following example shows how to add an equal length validator to an input attached to an \n * ngModel binding. \n *\n * ```html \n * <input name=\"firstName\" ngModel equallength=\"4\"> \n * ``` \n */\n@Directive({\n    selector: '[equalLength]',\n    providers: [{ \n        provide: NG_VALIDATORS, \n        useExisting: EqualLengthDirective, \n        multi: true\n    }]\n})\nexport class EqualLengthDirective implements OnChanges, Validator\n{\n    /**\n     * @description\n     * Input variable that contains the length to check. \n     */\n    @Input()\n    public equalLength: string;\n\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    /**\n     * @description\n     * A lifecycle hook method that is called when the directive's inputs change. For internal use only. \n     *\n     * @param changes An object of key/value pairs for the set of changed inputs. \n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if('equalLength' in changes)\n        {\n            this._validator = ExtraValidators.equalLength(parseInt(this.equalLength, 10));\n\n            if(this._onChange) this._onChange();\n        }\n    }    \n\n    /**\n     * @description\n     * Method that performs synchronous validation against the provided control. It requires the length \n     * of the control's value to be equal to the provided `equalLength`. \n     *\n     * @param control The control to validate against. \n     *\n     * @returns A map of validation errors if validation fails; otherwise, `null`. \n     */    \n    public validate(control: AbstractControl): ValidationErrors | null\n    {\n        return (this.equalLength) \n            ? this._validator(control) \n            : null;\n    }\n\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change. \n     *\n     * @param fn The callback function to register. \n     */\n    public registerOnValidatorChange(fn: () => void): void\n    {\n        this._onChange = fn;\n    }\n}\n","\nimport { Component, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport enum HandlerComponent {\n\tsnackBar = 'snackBar',\n\tdialog = 'dialog',\n}\n\nexport enum StatusCode {\n\tOK = 200,\n\tserverError = 500,\n\tnotFound = 400\n}\n\n/**\n * Object that is used with the `DialogContentComponent` component.\n * It contains the different data that are showed in the message.\n */\nexport class DialogMessageData {\n    /**\n     * Message title.\n     */\n\ttitle: string;\n    /**\n     * Message content.\n     */\n\tcontent: string;\n}\n\n/**\n * Object that is used with the `DialogDeleteConfirmComponent` component.\n * It contains the different data that are showed in the message.\n */\nexport class DialogDeleteConfirmMessageData\n{\n    /**\n     * Article of the type to delete.\n     */\n\tdelTypeArt: string;\n    /**\n     * Type to delete.\n     */\n\tdelType: string;\n    /**\n     * Value to delete.\n     */\n\tdelValue: string;\n}\n\n/**\n * Simple dialog message.\n */\n@Component({\n\tselector: 'toco-dialog-message',\n\ttemplate: `\n\t\t<h1 mat-dialog-title>\n\t\t\t{{ data.title }}\n\t\t</h1>\n\t\t<mat-dialog-content> {{ data.content }} </mat-dialog-content>\n\t\t<mat-dialog-actions align=\"end\">\n\t\t\t<button mat-stroked-button mat-dialog-close>OK</button>\n\t\t</mat-dialog-actions>\n\t`\n})\nexport class DialogContentComponent\n{\n\tpublic constructor(@Inject(MAT_DIALOG_DATA) public data: DialogMessageData)\n\t{ }\n}\n\n/**\n * Dialog confirm message used to delete something.\n */\n@Component({\n\tselector: 'toco-dialog-delete-confirm',\n\ttemplate: `\n\t\t<h1 mat-dialog-title>\n\t\t\t¿Está usted seguro que desea eliminar {{ data.delTypeArt }} <strong>{{ data.delType }}</strong>?\n\t\t</h1>\n\t\t<mat-dialog-content>\n\t\t\tSu valor es: <em>{{ data.delValue }}</em>\n\t\t</mat-dialog-content>\n\t\t<mat-dialog-actions align=\"end\">\n\t\t\t<button mat-stroked-button mat-dialog-close color=\"warning\">Cancelar</button>\n\t\t\t<button mat-stroked-button [mat-dialog-close]=\"true\" color=\"warning\" cdkFocusInitial>Eliminar</button>\n\t\t</mat-dialog-actions>\n\t`\n})\nexport class DialogDeleteConfirmComponent\n{\n\tpublic constructor(\n\t\t/*public dialogRef: MatDialogRef<DialogDeleteConfirmComponent>,*/\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogDeleteConfirmMessageData)\n\t{ }\n}\n\nexport class MessageHandler\n{\n\tconstructor(private _snackBar?: MatSnackBar, public dialog?: MatDialog)\n\t{ }\n\n\tshowMessage(status: StatusCode, message?: string, component?: HandlerComponent, title?: string, width?: string) {\n\t\tswitch (status)\n\t\t{\n\t\t\tcase StatusCode.serverError:\n\t\t\t\tthis.componentHandler(message ? message : 'No se pudo conectar al servidor.', component, title, width);\n\t\t\t\tbreak;\n\t\t\tcase StatusCode.notFound:\n\t\t\t\tthis.componentHandler(message ? message : 'Operación extraviada, no se pudo realizar.', component, title, width);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.componentHandler(message ? message : 'Operación realizada con éxito.', component, title, width);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate componentHandler(message: string, handlercomponent?: HandlerComponent, title?: string, width: string = '300px'): void {\n\t\tswitch (handlercomponent)\n\t\t{\n\t\t\tcase HandlerComponent.dialog:\n\t\t\t\tthis.dialog.open(DialogContentComponent, {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tdata: { title: title, content: message }\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._snackBar.open(message, null, {\n\t\t\t\t\tduration: 5000,\n\t\t\t\t\tverticalPosition: 'bottom',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\n// @Component({\n//     selector: 'toco-progress',\n//     template: `\n//     <mat-progress-bar *ngIf=\"loading\"\n//         mode=\"indeterminate\" color=\"warn\" style=\"z-index: 1001\">\n//     </mat-progress-bar>\n//     <div *ngIf=\"loading && position == 'fixed'\" class=\"overlay-fixed\">\n\n//     </div >\n//     <div *ngIf=\"loading && position == 'absolute'\" class=\"overlay-absolute\">\n\n//     </div> `,\n\n//     styles: [\n// `.overlay-fixed {\n//     opacity:    0.4;\n//     background: #000;\n//     width:      100%;\n//     height:     100%;\n//     z-index:    1000;\n//     top:        0;\n//     left:       0;\n//     position:   fixed;\n//   }\n//   .overlay-absolute {\n//     opacity:    0.4;\n//     background: #000;\n//     width:      100%;\n//     height:     100%;\n//     z-index:    1000;\n//     top:        0;\n//     left:       0;\n//     position:   absolute;\n//   }`\n//     ]\n\n//   })\n\n  @Component({\n    selector: 'toco-progress',\n    template: `\n    <div class=\"spinner\" *ngIf=\"loading\">\n      <div class=\"bounce1\"></div>\n      <div class=\"bounce2\"></div>\n      <div class=\"bounce3\"></div>\n    </div>\n `,\n\n    styles: [\n`\n.overlay-fixed {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   fixed;\n    }\n    .overlay-absolute {\n      opacity:    0.4;\n      background: #000;\n      width:      100%;\n      height:     100%;\n      z-index:    1000;\n      top:        0;\n      left:       0;\n      position:   absolute;\n    }\n\n.spinner {\nmargin: 5px auto 0;\nwidth: 70px;\ntext-align: center;\n}\n\n.spinner > div {\nwidth: 14px;\nheight: 14px;\n\n\nborder-radius: 100%;\ndisplay: inline-block;\n-webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\nanimation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\nbackground-color:#007e3e;\n-webkit-animation-delay: -0.60s;\nanimation-delay: -0.60s;\n}\n\n.spinner .bounce2 {\nbackground-color: #018d79;\n-webkit-animation-delay: -0.30s;\nanimation-delay: -0.30s;\n}\n\n.spinner .bounce3 {\nbackground-color: #0f6684;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n0%, 80%, 100% { -webkit-transform: scale(0) }\n40% { -webkit-transform: scale(1.0) }\n}\n\n@keyframes sk-bouncedelay {\n0%, 80%, 100% {\n  -webkit-transform: scale(0);\n  transform: scale(0);\n} 40% {\n  -webkit-transform: scale(1.0);\n  transform: scale(1.0);\n}\n}`\n    ]\n\n  })\n\n  export class ProgressComponent {\n        @Input()\n        public loading = false;\n        @Input()\n        public position = 'fixed';\n        constructor() { }\n  }\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'toco-sceiba-apps',\n  templateUrl: './sceiba-apps.component.html',\n  styleUrls: ['./sceiba-apps.component.scss']\n})\nexport class SceibaAppsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n// import { throwIfAlreadyLoaded } from './module-import-guard';\n\n\nimport { BodyComponent } from './body/body.component';\nimport { Error404Component } from './error404/error404.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { JournalCardComponent } from './journal-card/journal-card.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { CoreRoutingModule } from './core-routing.module';\nimport { MetadataService } from './metadata.service';\nimport { RoadMapComponent } from './utils/road-map/road-map.component';\nimport { RoadMapSceibaComponent } from './utils/road-map-sceiba/road-map-sceiba.component';\nimport { GetViewContainerDirective } from './utils/get-view-container.directive';\nimport { EqualLengthDirective } from './utils/validator';\nimport { DialogContentComponent, DialogDeleteConfirmComponent } from './utils/message-handler';\nimport { ProgressComponent } from './utils/progress';\nimport { SceibaAppsComponent } from './sceiba-apps/sceiba-apps.component';\n\n@NgModule({\n    declarations: [\n        BodyComponent,\n        Error404Component,\n        FooterComponent,\n        HomeComponent,\n        InfoCardComponent,\n        JournalCardComponent,\n        NavComponent,\n        PageHeaderComponent,\n        PageNotFoundComponent,\n        RoadMapComponent,\n        RoadMapSceibaComponent,\n        GetViewContainerDirective,\n        EqualLengthDirective,\n        DialogContentComponent,\n        DialogDeleteConfirmComponent,\n        ProgressComponent,\n        SceibaAppsComponent\n    ],\n\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgxChartsModule,\n        CoreRoutingModule\n    ],\n\n    exports: [\n        BodyComponent,\n        Error404Component,\n        FooterComponent,\n        HomeComponent,\n        InfoCardComponent,\n        JournalCardComponent,\n        NavComponent,\n        PageHeaderComponent,\n        PageNotFoundComponent,\n        RoadMapComponent,\n        RoadMapSceibaComponent,\n        GetViewContainerDirective,\n        EqualLengthDirective,\n        DialogContentComponent,\n        DialogDeleteConfirmComponent,\n        ProgressComponent,\n        SceibaAppsComponent\n    ],\n    entryComponents: [\n        DialogContentComponent,\n        DialogDeleteConfirmComponent\n    ],\n    providers: [\n        MetadataService\n    ]\n})\nexport class CoreModule\n{\n    public constructor(@Optional() @SkipSelf() parentModule: CoreModule)\n    {\n        //throwIfAlreadyLoaded(parentModule, 'CoreModule');\n    }\n}\n","\nimport { HttpEventType } from '@angular/common/http';\nimport { isArray, isRegExp, isDate, isError, isObject } from 'util';\n\n/**\n * A file with constants and functions that are helpers. \n */\n\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to \n * flaky browser support and the value not being defined in Closure's typings. \n */\nexport const MAX_SAFE_INTEGER: number = 9007199254740991;\n\n/**\n * The markdown file extension. \n */\nexport const MARKDOWN_FILE_EXTENSION: string = '.md';\n\n/**\n * A collection of key/value elements, where the keys are strings. \n */\nexport type Params<T> = {\n    [key: string]: T;\n};\n\n/**\n * An enum that describes an action through a text. \n */\nexport enum ActionText\n{\n    /**\n     * Viewing action. \n     */\n    view = 'view',\n\n    /**\n     * Adding action. \n     */\n    add = 'add',\n\n    /**\n     * Editing action. \n     */\n    edit = 'edit'\n}\n\n/**\n * An object of paths that is used to get the child controls in a `FormGroup`/`FormArray` control. \n * The value of its properties is a dot-delimited string value or an array of string/number values \n * that define the path to a child control. \n */\nexport type ChildControlsPath = {\n    [key: string]: Array<string | number> | string;\n};\n\n/**\n * An enum that represents the language texts. \n */\nexport enum LanguageTexts\n{\n    /**\n     * The Spanish language. \n     */\n    Español = 'Español',\n\n    /**\n     * The English language. \n     */\n    English = 'English',\n}\n\n/**\n * An enum that represents the language text abbreviations. \n */\nexport enum LanguageAbbrs\n{\n    /**\n     * The Spanish language abbreviation. \n     */\n    es = 'es',\n\n    /**\n     * The English language abbreviation. \n     */\n    en = 'en',\n}\n\n/**\n * The list of language texts. \n */\nexport const LANGUAGE_TEXTS_LIST: LanguageTexts[] = [LanguageTexts.Español, LanguageTexts.English];\n\n/**\n * The list of language text abbreviations.\n */\nexport const LANGUAGE_ABBRS_LIST: LanguageAbbrs[] = [LanguageAbbrs.es, LanguageAbbrs.en];\n\n/**\n * Converts the language representation from string to number. \n * If the string specified is not registered as a language, then returns -1 number value. \n * The Spanish language is: 0 as number, and 'es' as string. \n * The English language is: 1 as number, and 'en' as string. \n * In other words, it follows the order of `LANGUAGE_TEXTS_LIST` and `LANGUAGE_ABBRS_LIST` enums. \n * @param lang The language text abbreviation to be used. \n * @returns Returns the language as a number based on its representation as string. \n * If the string specified is not registered as a language, then returns -1 number value. \n */\nexport function convertLangFromStringToNumber(lang: string | LanguageAbbrs): number\n{\n    switch (lang)\n    {\n        case LanguageAbbrs.es:  /* Spanish */\n            {\n                return 0;\n            }\n\n        case LanguageAbbrs.en:  /* English */\n            {\n                return 1;\n            }\n    }\n\n    return -1;\n}\n\n/**\n * Converts the language representation from number to string. \n * If the number specified is not registered as a language, then returns empty string value. \n * The Spanish language is: 0 as number, and 'es' as string. \n * The English language is: 1 as number, and 'en' as string. \n * In other words, it follows the order of `LANGUAGE_TEXTS_LIST` and `LANGUAGE_ABBRS_LIST` enums. \n * @param index The language representation as number. \n * @returns Returns the language as a string based on its representation as number. \n * If the number specified is not registered as a language, then returns empty string value. \n */\nexport function convertLangFromNumberToString(index: number): string\n{\n    switch (index)\n    {\n        case 0:  /* Spanish */\n            {\n                return LanguageAbbrs.es;\n            }\n\n        case 1:  /* English */\n            {\n                return LanguageAbbrs.en;\n            }\n    }\n\n    return '';\n}\n\n/**\n * Returns a string that is the result of concatenating the specified `path` argument, \n * the language extension, and the markdown file extension. \n * @param path The path to markdown file without the language extension and the markdown file extension. \n * @param lang The language text abbreviation to be used. \n * @returns Returns the correct path to the markdown file. \n */\nexport function getPathWithLangExtension(path: string, lang: string | LanguageAbbrs): string\n{\n    return (path + '.' + lang + MARKDOWN_FILE_EXTENSION);\n}\n\n/**\n * Returns true if the specified `possDescendant` is descendant from the specified `ancestorName`; \n * otherwise, false. \n * @param possDescendant Possible descendant. \n * @param ancestorName Ancestor name. \n * Example in usage: \n *  if (isDescendant(target.controlType.__proto__, InputControl.name)) { ... }\n */\nexport function isDescendant(possDescendant: any, ancestorName: string): boolean\n{\n    do\n    {\n        if (possDescendant.name == ancestorName) return true;\n    }\n    while((possDescendant = possDescendant.__proto__).name != '');\n\n    return false;\n}\n\n/**\n * Returns a new value that represents the clone of the specified `target` value. \n * Implementation notes: \n *  - If `target` is `undefined`, then returns `undefined`. \n *  - If `target` is an object, then returns a cloned object with all its properties cloned. \n *  - If `target` is an array, then returns a cloned array with all its values cloned. \n * @param target The target value to clone. \n */\nexport function cloneValue(target: any): any\n{\n    if (isArray(target))\n    {\n        return _cloneValue(target, [ ]);\n    }\n    else if (isRegExp(target))\n    {\n        return target;  /* It can return `target` directly because all fields in a `RegExp` are read-only. */\n    }\n    else if (isDate(target))\n    {\n        return new Date(target);\n    }\n    else if (isError(target))\n    {\n        return target;  /* It can return `target` directly because an `Error` is extremely dependent of the place where it is created. */\n    }\n    else if (isObject(target))\n    {\n        return _cloneValue(target, { });\n    }\n    else\n    {\n        return target;\n    }\n}\n\nfunction _cloneValue(target: any, container: any): any\n{\n    let temp: any;\n\n    for (let prop in target)\n    {\n        temp = target[prop];\n\n        if (isArray(temp))\n        {\n            container[prop] = _cloneValue(temp, [ ]);\n        }\n        else if (isRegExp(temp))\n        {\n            container[prop] = temp;  /* It can return `temp` directly because all fields in a `RegExp` are read-only. */\n        }\n        else if (isDate(temp))\n        {\n            container[prop] = new Date(temp);\n        }\n        else if (isError(temp))\n        {\n            container[prop] = temp;  /* It can return `temp` directly because an `Error` is extremely dependent of the place where it is created. */\n        }\n        else if (isObject(temp))\n        {\n            container[prop] = _cloneValue(temp, { });\n        }\n        else\n        {\n            container[prop] = temp;\n        }\n    }\n\n    return container;\n}\n\n/**\n * Returns a new value that represents the clone of the specified `target` value, and \n * sets all its properties/values of built-in type to `undefined`. \n * Implementation notes: \n *  - If `target` is `undefined`, then returns `undefined`. \n *  - If `target` is an object, then returns an object with all its properties of built-in type to `undefined`. \n *  - If `target` is an array, then returns an array with all its values of built-in type to `undefined`. \n * @param target The target value to clone. \n */\nexport function cloneValueToUndefined(target: any): any\n{\n    if (isArray(target))\n    {\n        return _cloneValueToUndefined(target, [ ]);\n    }\n    else if (isRegExp(target))\n    {\n        return undefined;\n    }\n    else if (isDate(target))\n    {\n        return undefined;\n    }\n    else if (isError(target))\n    {\n        return undefined;\n    }\n    else if (isObject(target))\n    {\n        return _cloneValueToUndefined(target, { });\n    }\n    else\n    {\n        return undefined;\n    }\n}\n\nfunction _cloneValueToUndefined(target: any, container: any): any\n{\n    let temp: any;\n\n    for(let prop in target)\n    {\n        temp = target[prop];\n\n        if (isArray(temp))\n        {\n            container[prop] = _cloneValueToUndefined(temp, [ ]);\n        }\n        else if (isRegExp(target))\n        {\n            container[prop] = undefined;\n        }\n        else if (isDate(target))\n        {\n            container[prop] = undefined;\n        }\n        else if (isError(target))\n        {\n            container[prop] = undefined;\n        }\n        else if (isObject(temp))\n        {\n            container[prop] = _cloneValueToUndefined(temp, { });\n        }\n        else\n        {\n            container[prop] = undefined;\n        }\n    }\n\n    return container;\n}\n\n/**\n * Logs an error notification message to the console. \n * @param operation The operation during the error occurs. \n * @param place The place where the error occurs. \n * @param err The error that occurs. \n */\nexport function logError(operation: string, place: string, err: any): void\n{\n    console.log(`The observable got an error '${ operation }' in '${ place }': ${ err }.`);\n}\n\n/**\n * Logs a complete notification message to the console. \n * @param operation The operation during the complete occurs. \n * @param place The place where the complete occurs. \n */\nexport function logComplete(operation: string, place: string): void\n{\n    console.log(`The observable got a complete notification '${ operation }' in '${ place }'.`);\n}\n\n/**\n * Returns a string representation of `HttpEventType` specified. \n * @param httpEventType Type enumeration for the different kinds of `HttpEvent`. \n */\nexport function getHttpEventTypeToString(httpEventType: HttpEventType): string\n{\n    switch (httpEventType)\n    {\n        /* The request was sent out over the wire. */\n        case HttpEventType.Sent:\n            return \"'Sent (0)'\";\n\n        /* An upload progress event was received. */\n        case HttpEventType.UploadProgress:\n            return \"'UploadProgress (1)'\";\n\n        /* The response status code and headers were received. */\n        case HttpEventType.ResponseHeader:\n            return \"'ResponseHeader (2)'\";\n\n        /* A download progress event was received. */\n        case HttpEventType.DownloadProgress:\n            return \"'DownloadProgress (3)'\";\n\n        /* The full response including the body was received. */\n        case HttpEventType.Response:\n            return \"'Response (4)'\";\n\n        /* A custom event from an interceptor or a backend. */\n        case HttpEventType.User:\n            return \"'User (5)'\";\n\n        default:\n            return \"'It does not know the code'\";\n    }\n}\n","\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { Sort, PageEvent } from '@angular/material';\nimport { Observable } from 'rxjs';\n\nimport { InputControl } from '../../forms/public-api';\n\nimport { MAX_SAFE_INTEGER, Params } from '../utils/helpers';\n\n/**\n * The data sort direction. \n */\nexport enum SortDirection\n{\n    /**\n     * Sorts the data in the ascending order. \n     */\n    asc = 'asc',\n\n    /**\n     * Sorts the data in the descending order. \n     */\n    desc = 'desc',\n\n    /**\n     * Sorts the data in the original order or does not sort them. \n     */\n    orig = ''\n}\n\n/**\n * A collection of key/value elements, where the key is the filter name and the value is the control \n * that contains the filter value. \n * Both the `FilterControls` keys and `FilterValues` keys are the same.\n */\nexport type FilterControls = Params<InputControl>;\n\n/**\n * A collection of key/value elements, where the key is the filter name and the value is the filter value. \n * Both the `FilterControls` keys and `FilterValues` keys are the same.\n */\nexport type FilterValues = Params<any>;\n\n/**\n * An interface that represents the input data that are used to make a page request. \n * It is the input of `BackendDataSourceFunction` function. \n */\nexport interface PageRequest\n{\n    /**\n     * The current filter state. \n     */\n    filter?: FilterValues;\n\n    /**\n     * The current sort state. \n     */\n    sort: Sort;\n\n    /**\n     * The current paginator state. \n     */\n    paginator: PageEvent;\n}\n\n/**\n * An interface that represents the requested page. \n * It is the output of `BackendDataSourceFunction` function. \n * The generic parameter T always refers to the type of data that it is dealing with. \n */\nexport interface Page<T>\n{\n    /**\n     * Returns the list of items. \n     * By default, its value is `[]`. \n     */\n    data: T[];\n\n    /**\n     * Returns the total number of items being paged. \n     * By default, its value is `0`. \n     */\n    totalData: number;\n\n    /**\n     * Returns the zero-based page index of the displayed list of items. \n     * By default, its value is `0`. \n     */\n    pageIndex: number;\n\n    /**\n     * Returns the number of items to display on a page. \n     * By default, its value is `50`. \n     */\n    pageSize: number;\n}\n\n/**\n * An interface that represents the function that is used to get the data source from backend. \n * The generic parameter T always refers to the type of data that it is dealing with. \n */\nexport interface BackendDataSourceFunction<T>\n{\n    (pageRequest: PageRequest): Observable<Page<T>>;\n}\n\n/**\n * Checks if a data object matches the data source's filter string. By default, each data object \n * is converted to a string of its properties and returns true if the filter has \n * at least one occurrence in that string. By default, the filter string has its whitespace \n * trimmed and the match is case-insensitive. \n * May be overridden for a custom implementation of filter matching. \n * @param data Data object used to check against the filter. \n * @param filter Filter string that has been set on the data source. \n * @return Returns true whether the filter matches against the data; otherwise, false. \n */\nexport function filterPredicate<T>(data: T, filter: string): boolean\n{\n    /* Transforms the data into a lowercase string of all property values. */\n    const dataStr: string = Object.keys(data).reduce((\n        (currentTerm, key): string => {\n            /* Use an obscure Unicode character to delimit the words in the concatenated string. \n             * This avoids matches where the values of two columns combined will match the user's query \n             * (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something \n             * that has a very low chance of being typed in by somebody in a text field. This one in \n             * particular is \"White up-pointing triangle with dot\" from \n             * https://en.wikipedia.org/wiki/List_of_Unicode_characters. */\n            return currentTerm + data[key] + '◬';\n        }), '').toLowerCase();\n\n    /* Transforms the filter by converting it to lowercase and removing whitespace. */\n    const transformedFilter: string = filter.trim().toLowerCase();\n\n    return (dataStr.indexOf(transformedFilter) != -1);\n}\n\n/**\n * Data accessor function that is used for accessing data properties for sorting through \n * the default `sortData` function. \n * This default function assumes that the sort header IDs (which defaults to the column name) \n * matches the data's properties (e.g. column Xyz represents data['Xyz']). \n * May be overridden for a custom implementation of different behavior. \n * @param data Data object that is being accessed. \n * @param sortHeaderId The name of the column that represents the data. \n */\nexport function sortingDataAccessor<T>(data: T, sortHeaderId: string): string | number\n{\n    const value: any = data[sortHeaderId];\n\n    if (_isNumberValue(value))\n    {\n        const numberValue: number = Number(value);\n\n        /* Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we \n         * leave them as strings. For more info: https://goo.gl/y5vbSg. */\n        return (numberValue < MAX_SAFE_INTEGER ? numberValue : value);\n    }\n\n    return value;\n}\n\n/**\n * Gets a sorted copy of the data array based on the state of the `MatSort`. Called \n * after changes are made to the filtered data or when sort changes are emitted from `MatSort`. \n * By default, the function retrieves the active sort and its direction and compares data \n * by retrieving data using the `sortingDataAccessor`. \n * May be overridden for a custom implementation of data ordering. \n * @param data The array of data that should be sorted. \n * @param sort The connected `MatSort` that holds the current sort state. \n */\nexport function sortData<T>(data: T[], sort: Sort): T[]\n{\n    const active: string = sort.active;\n    const direction: SortDirection = sort.direction as SortDirection;\n\n    if ((!active) || (direction == SortDirection.orig)) return data;\n\n    return data.sort((a: T, b: T): number => {\n        let valueA: string | number = sortingDataAccessor(a, active);\n        let valueB: string | number = sortingDataAccessor(b, active);\n\n        /**\n         * If both `valueA` and `valueB` exist (truthy), then compare the two. Otherwise, checks if \n         * one value exists while the other doesn't. In this case, existing value should come last. \n         * This avoids inconsistent results when comparing values to undefined/null. \n         * If neither value exists, returns 0 (equal). \n         */\n\n        let comparatorResult: number = 0;\n\n        if ((valueA != null) && (valueB != null))\n        {\n            /* Checks if one value is greater than the other one; if equal, `comparatorResult` should remain 0. */\n\n            if (valueA > valueB) comparatorResult = 1;\n            else if (valueA < valueB) comparatorResult = -1;\n        }\n        else if (valueA != null) comparatorResult = 1;\n        else if (valueB != null) comparatorResult = -1;\n\n        return comparatorResult * ((direction == SortDirection.asc) ? 1 : -1);\n    });\n}\n","\n/* \"Barrel\" of Http Interceptors.\n * Angular applies interceptors in the order that you provide them. If you provide interceptors A,\n * then B, then C, requests will flow in A->B->C and responses will flow out C->B->A.\n * You cannot change the order or remove interceptors later. If you need to enable and disable\n * an interceptor dynamically, you'll have to build that capability into the interceptor itself. */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// import { AuthenticationService } from '../../authentication';\n\nimport { CachingInterceptor } from './http.interceptor';\n\n/**\n * Http interceptor providers in order.\n */\nexport const HTTP_INTERCEPTOR_PROVIDERS = [\n    // { provide: HTTP_INTERCEPTORS, useClass: AuthenticationService, multi: true },\n    //{ provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true }\n];\n","\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\n/**\n * Returns a constant that is used in the `HttpHeaders` to do request although the request exists in cache. \n */\nexport const REFRESH_X_CACHE: string = 'refresh-x-cache';\n\n/**\n * Represents the base abstract class for all services that implement the cachable URL request. \n * See `CachableUrl` service. \n */\nexport abstract class Cachable\n{\n    /**\n     * Returns a number greater than zero if the specified request is cachable; \n\t * that number represents the maximum cache age in milliseconds. \n\t * Return zero if the specified request is NOT cachable. \n     * @param req The outgoing request object to handle. \n     */\n    public abstract isCachable(req: HttpRequest<any>): number\n}\n\n/**\n * Represents the base abstract class for all services that implement the request cache. \n * See `RequestCacheDifferentTimeWithMap` service. \n */\nexport abstract class RequestCache\n{\n\tpublic abstract get(req: HttpRequest<any>): HttpResponse<any> | undefined;\n\n\tpublic abstract set(req: HttpRequest<any>, maxAgeInCache: number, response: HttpResponse<any>): void;\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { REFRESH_X_CACHE, Cachable, RequestCache } from './request-cache.service';\n\n/* Note: When you are going to use the Interceptors, make a \"Barrel\" of Http Interceptors. \n * Angular applies interceptors in the order that you provide them. If you provide interceptors A, \n * then B, then C, requests will flow in A->B->C and responses will flow out C->B->A. \n * You cannot change the order or remove interceptors later. If you need to enable and disable \n * an interceptor dynamically, you'll have to build that capability into the interceptor itself. */\n\n\n/**\n * A service that caches certain requests and responses to improve performance. \n * It is delegated to an interceptor without disturbing the existing data services. \n * \n * - If request is cachable (e.g., package search) and response is in cache, \n * then returns the cached response as observable. \n * - If request is cachable and has `REFRESH_X_CACHE` option header in true (or the request is not in cache), \n * then passes request to the following `HttpHandler` and makes a cache from response. \n * - If request is not cachable, \n * then passes request to the following `HttpHandler`. \n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CachingInterceptor implements HttpInterceptor\n{\n    public constructor(private _cachable: Cachable, private _cache: RequestCache)\n    { }\n\n    /**\n     * Identifies and handles a given HTTP request. \n     * @param req The outgoing request object to handle. \n     * @param next The next interceptor in the chain, or the backend if no interceptors remain in the chain. \n     * @returns An observable of the event stream. \n     */\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        let maxAgeInCache: number;\n\n        /* Continues if not cachable. */\n        if (!(maxAgeInCache = this._cachable.isCachable(req)))\n        {\n            return next.handle(req);\n        }\n\n        /* This option is triggered by the presence of a custom `REFRESH_X_CACHE` header with true value. */\n        if (req.headers.get(REFRESH_X_CACHE))\n        {\n            /* fetch. */\n            return this._sendRequest(req, maxAgeInCache, true, next);\n        }\n\n        /* cache-or-fetch. */\n        const cachedResponse: HttpResponse<any> = this._cache.get(req);\n        return (cachedResponse\n            ? of(cachedResponse)\n            : this._sendRequest(req, maxAgeInCache, false, next));\n    }\n\n    /**\n     * Gets server response observable by sending request to `next` argument. \n     * It will add the response to the cache on the way out. \n     * @param req The outgoing request object to handle. \n     * @param maxAgeInCache The maximum cache age in milliseconds. \n     * @param hasRefreshXCache It is true if the custom `REFRESH_X_CACHE` header is present; otherwise, false. \n     * @param next The next interceptor in the chain, or the backend if no interceptors remain in the chain. \n     * @returns An observable of the event stream. \n     */\n    private _sendRequest(req: HttpRequest<any>, maxAgeInCache: number, hasRefreshXCache: boolean, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        /* Removes the `REFRESH_X_CACHE` custom option from header. */\n        let reqWithoutCustomHeader: HttpRequest<any> = (hasRefreshXCache)\n            ? req.clone({ headers: (req.headers.delete(REFRESH_X_CACHE)) })\n            : req;\n\n        console.log('Req-2: ', reqWithoutCustomHeader.headers);\n\n        return next.handle(reqWithoutCustomHeader).pipe(\n            tap((event: HttpEvent<any>) => {\n                /* There may be other events besides the response. */\n                if (event instanceof HttpResponse)\n                {\n                    /* Updates the cache. */\n                    this._cache.set(req, maxAgeInCache, event);  /* Cached the original request `req`. */\n                }\n            })\n        );\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nexport interface Response<T>\n{\n    message?: string;\n    status?: string;\n    data?: T;\n}\n\nexport const ResponseStatus = {\n    SUCCESS: 'success',\n    ERROR: 'error'\n};\n\n@Injectable()\nexport class HttpService\n{\n    constructor(protected http: HttpClient)\n    { }\n}","\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * A service that registers custom svg icons in order to use them through the `mat-icon` component. \n * Which simply registers the custom icons with the `MatIconRegistry` service provided by Angular Material. \n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class IconService\n{\n\t/**\n\t * Returns the default icon name. It represents a blank icon. \n\t * It is used by controls that want to have occupied the icon space, but nothing is showed. \n\t */\n\tpublic static readonly defaultIconName: string = 'outlined-blank-24px';\n\n\tpublic constructor(private _matIconRegistry: MatIconRegistry, private _domSanitizer: DomSanitizer)\n\t{ }\n\n\t/**\n\t * Registers an array of icons. \n\t * @param iconNames Array of names under which the icons should be registered. \n\t * @param iconUrl The relative URL path pointing to the location of the icons. \n\t */\n\tpublic registerIcons(iconNames: string[], iconUrl: string): void\n\t{\n\t\ticonNames.forEach(iconName => {\n\t\t  this._matIconRegistry.addSvgIcon(\n\t\t\t  iconName, \n\t\t\t  this._domSanitizer.bypassSecurityTrustResourceUrl(`${ iconUrl }/${ iconName }.svg`));\n\t\t});\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MessageService\n{\n\t/**\n\t * Cache of messages.\n\t */\n\tpublic messages: string[] = [];\n\n\tpublic constructor()\n\t{ }\n\n\t/**\n\t * Adds the specified message. \n\t * @param msg The message to add. \n\t */\n\tpublic add(msg: string): void\n\t{\n\t\tconsole.log(msg);\n\t\tthis.messages.push(msg);\n\t}\n\n\t/**\n\t * Deletes all messages. \n\t */\n\tpublic clear(): void\n\t{\n\t\tthis.messages = [];\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Environment } from '../env';\n\nimport { MessageService } from './message.service';\nimport { Cachable, RequestCache } from './request-cache.service';\n\n/**\n * A service that implements the cachable URL request.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CachableUrl implements Cachable\n{\n\tpublic constructor(private _env: Environment)\n\t{ }\n\n    /**\n     * Returns a number greater than zero if the specified request is cachable;\n\t * that number represents the maximum cache age in milliseconds.\n\t * Return zero if the specified request is NOT cachable.\n     * @param req The outgoing request object to handle.\n     */\n    public isCachable(req: HttpRequest<any>): number\n    {\n        /* Only GET requests are cachable. */\n\t\tif (req.method != 'GET') return 0;\n\n\t\tObject.keys(this._env.cachableUrls).forEach(\n\t\t\t(url: string) => {\n\t\t\t\t/* Verifies if the request cache is cachable. */\n\t\t\t\tif (req.url.indexOf(url) > -1) return this._env.cachableUrls[url];\n\t\t\t}\n\t\t);\n\n\t\t/* It is not cachable. */\n\t\treturn 0;\n    }\n}\n\n/**\n * Represents the request cache entry.\n */\nexport interface RequestCacheEntry\n{\n\t/**\n\t * Returns the request URL.\n\t */\n\turl: string;\n\n\t/**\n\t * Returns the request cache.\n\t */\n\tresponse: HttpResponse<any>;\n\n\t/**\n\t * Returns the maximum cache age in milliseconds.\n\t */\n\tmaxAgeInCache: number;\n\n\t/**\n\t * Returns the last read of the request URL.\n\t */\n\tlastRead: number;\n}\n\n/**\n * A service that implements the request cache with the different time using `Map` collection.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RequestCacheDifferentTimeWithMap implements RequestCache\n{\n\tprivate _cache: Map<string, RequestCacheEntry>;\n\n\tpublic constructor(private _messageService: MessageService)\n\t{\n\t\tthis._cache = new Map<string, RequestCacheEntry>();\n\t}\n\n\tpublic get(req: HttpRequest<any>): HttpResponse<any> | undefined\n\t{\n\t\tconst cached: RequestCacheEntry = this._cache.get(req.urlWithParams);\n\n\t\tif (!cached)\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ((cached.lastRead + cached.maxAgeInCache) < Date.now())  /* Found expired cached. */\n\t\t{\n\t\t\tthis._messageService.add(`Found expired cached response for '${ req.urlWithParams }'.`);\n\t\t\treturn undefined;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._messageService.add(`Found cached response for '${ req.urlWithParams }'.`);\n\t\t\treturn cached.response;\n\t\t}\n\t}\n\n\tpublic set(req: HttpRequest<any>, maxAgeInCache: number, response: HttpResponse<any>): void\n\t{\n\t\tconst url: string = req.urlWithParams;\n\t\tthis._messageService.add(`Caching response from '${ url }'.`);\n\n\t\tthis._cache.set(url, { url, response, maxAgeInCache, lastRead: Date.now() });\n\n\t\t/* Removes expired cache entries. */\n\t\tthis._cache.forEach(\n\t\t\t(entry: RequestCacheEntry) => {\n\t\t\t\tif (entry.lastRead < Date.now() - entry.maxAgeInCache)\n\t\t\t\t{\n\t\t\t\t\tthis._cache.delete(entry.url);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis._messageService.add(`Request cache size: ${ this._cache.size }.`);\n\t}\n}\n\n/**\n * A provider for the cachable URL request.\n */\nexport const CACHABLE_URL_PROVIDER = [\n    { 'provide': Cachable, 'useClass': CachableUrl, 'multi': false }\n];\n\n/**\n * A provider for the request cache with the different time using `Map` collection.\n */\nexport const REQUEST_CACHE_DIFFERENT_TIME_WITH_MAP_PROVIDER = [\n    { 'provide': RequestCache, 'useClass': RequestCacheDifferentTimeWithMap, 'multi': false }\n];\n","\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\nimport { PageRequest, Page, sortData } from './backend-data-source';\n\ninterface User\n{\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n    address:\n    {\n        street: string;\n        suite: string;\n        city: string;\n        zipcode: string;\n        geo:\n        {\n            lat: string;\n            lng: string;\n        };\n    };\n    phone: string;\n    website: string;\n    company:\n    {\n        name: string;\n        catchPhrase: string;\n        bs: string;\n    };\n    registrationDate: Date;\n}\n\nexport interface UserQuery\n{\n    search: string;\n    registration: Date;\n}\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UserService\n{\n    public page(pageRequest: PageRequest): Observable<Page<User>>\n    {\n        /* Fake backend, do your server request here instead. */\n\n        let filteredUsers = this.users.slice();  /* Clones the array. */\n\n        let { search, registration } = pageRequest.filter;\n\n        if (search)\n        {\n            search = search.toLowerCase();\n            filteredUsers = filteredUsers.filter(\n                //({ name, username, email }) => {\n                ({ id, name, registrationDate }) => {\n                    return id.toString(10).includes(search) ||\n                    name.toLowerCase().includes(search) /*||\n                    registrationDate.toString(10).toLowerCase().includes(search)*/;\n                }\n            );\n        }\n\n        if (registration)\n        {\n            filteredUsers = filteredUsers.filter(\n                ({ registrationDate }) =>\n                    registrationDate.getFullYear() === registration.getFullYear() &&\n                    registrationDate.getMonth() === registration.getMonth() &&\n                    registrationDate.getDate() === registration.getDate()\n            );\n        }\n\n        if (pageRequest.sort)\n        {\n            filteredUsers = sortData(filteredUsers, pageRequest.sort);\n        }\n\n        let newPageIndex: number = pageRequest.paginator.pageIndex;\n        const pageSize: number = pageRequest.paginator.pageSize;\n        let start: number = 0;\n\n        if (filteredUsers.length != 0)\n        {\n            while ((start = newPageIndex * pageSize) >= filteredUsers.length)\n            {\n                newPageIndex--;\n            }\n        }\n        else\n        {\n            newPageIndex = 0;\n        }\n\n        const end: number = start + pageSize;\n\n        const resultUsers: User[] = filteredUsers.slice(start, end);\n\n        const page: Page<User> = {\n            'data': resultUsers,\n            'totalData': filteredUsers.length,\n            'pageIndex': newPageIndex,\n            'pageSize': pageSize/*resultUsers.length*/\n        };\n\n        return of(page).pipe(delay(2000));\n    }\n\n    private users: User[] = [{\n        id: 1,\n        name: \"Leanne Graham\",\n        registrationDate: new Date(1565575044121),\n        username: \"Bret\",\n        email: \"Sincere@april.biz\",\n        address: {\n            street: \"Kulas Light\",\n            suite: \"Apt. 556\",\n            city: \"Gwenborough\",\n            zipcode: \"92998-3874\",\n            geo: {\n                lat: \"-37.3159\",\n                lng: \"81.1496\"\n            }\n        },\n        phone: \"1-770-736-8031 x56442\",\n        website: \"hildegard.org\",\n        company: {\n            name: \"Romaguera-Crona\",\n            catchPhrase: \"Multi-layered client-server neural-net\",\n            bs: \"harness real-time e-markets\"\n        }\n    },\n    {\n        id: 2,\n        name: \"Ervin Howell\",\n        registrationDate: new Date(1565575044121),\n        username: \"Antonette\",\n        email: \"Shanna@melissa.tv\",\n        address: {\n            street: \"Victor Plains\",\n            suite: \"Suite 879\",\n            city: \"Wisokyburgh\",\n            zipcode: \"90566-7771\",\n            geo: {\n                lat: \"-43.9509\",\n                lng: \"-34.4618\"\n            }\n        },\n        phone: \"010-692-6593 x09125\",\n        website: \"anastasia.net\",\n        company: {\n            name: \"Deckow-Crist\",\n            catchPhrase: \"Proactive didactic contingency\",\n            bs: \"synergize scalable supply-chains\"\n        }\n    },\n    {\n        id: 3,\n        name: \"Clementine Bauch\",\n        registrationDate: new Date(1565575044121),\n        username: \"Samantha\",\n        email: \"Nathan@yesenia.net\",\n        address: {\n            street: \"Douglas Extension\",\n            suite: \"Suite 847\",\n            city: \"McKenziehaven\",\n            zipcode: \"59590-4157\",\n            geo: {\n                lat: \"-68.6102\",\n                lng: \"-47.0653\"\n            }\n        },\n        phone: \"1-463-123-4447\",\n        website: \"ramiro.info\",\n        company: {\n            name: \"Romaguera-Jacobson\",\n            catchPhrase: \"Face to face bifurcated interface\",\n            bs: \"e-enable strategic applications\"\n        }\n    },\n    {\n        id: 4,\n        name: \"Patricia Lebsack\",\n        registrationDate: new Date(1565575044121),\n        username: \"Karianne\",\n        email: \"Julianne.OConner@kory.org\",\n        address: {\n            street: \"Hoeger Mall\",\n            suite: \"Apt. 692\",\n            city: \"South Elvis\",\n            zipcode: \"53919-4257\",\n            geo: {\n                lat: \"29.4572\",\n                lng: \"-164.2990\"\n            }\n        },\n        phone: \"493-170-9623 x156\",\n        website: \"kale.biz\",\n        company: {\n            name: \"Robel-Corkery\",\n            catchPhrase: \"Multi-tiered zero tolerance productivity\",\n            bs: \"transition cutting-edge web services\"\n        }\n    },\n    {\n        id: 5,\n        name: \"Chelsey Dietrich\",\n        registrationDate: new Date(1550478139234),\n        username: \"Kamren\",\n        email: \"Lucio_Hettinger@annie.ca\",\n        address: {\n            street: \"Skiles Walks\",\n            suite: \"Suite 351\",\n            city: \"Roscoeview\",\n            zipcode: \"33263\",\n            geo: {\n                lat: \"-31.8129\",\n                lng: \"62.5342\"\n            }\n        },\n        phone: \"(254)954-1289\",\n        website: \"demarco.info\",\n        company: {\n            name: \"Keebler LLC\",\n            catchPhrase: \"User-centric fault-tolerant solution\",\n            bs: \"revolutionize end-to-end systems\"\n        }\n    },\n    {\n        id: 6,\n        name: \"Mrs. Dennis Schulist\",\n        registrationDate: new Date(1550478139234),\n        username: \"Leopoldo_Corkery\",\n        email: \"Karley_Dach@jasper.info\",\n        address: {\n            street: \"Norberto Crossing\",\n            suite: \"Apt. 950\",\n            city: \"South Christy\",\n            zipcode: \"23505-1337\",\n            geo: {\n                lat: \"-71.4197\",\n                lng: \"71.7478\"\n            }\n        },\n        phone: \"1-477-935-8478 x6430\",\n        website: \"ola.org\",\n        company: {\n            name: \"Considine-Lockman\",\n            catchPhrase: \"Synchronised bottom-line interface\",\n            bs: \"e-enable innovative applications\"\n        }\n    },\n    {\n        id: 7,\n        name: \"Kurtis Weissnat\",\n        registrationDate: new Date(1550478139234),\n        username: \"Elwyn.Skiles\",\n        email: \"Telly.Hoeger@billy.biz\",\n        address: {\n            street: \"Rex Trail\",\n            suite: \"Suite 280\",\n            city: \"Howemouth\",\n            zipcode: \"58804-1099\",\n            geo: {\n                lat: \"24.8918\",\n                lng: \"21.8984\"\n            }\n        },\n        phone: \"210.067.6132\",\n        website: \"elvis.io\",\n        company: {\n            name: \"Johns Group\",\n            catchPhrase: \"Configurable multimedia task-force\",\n            bs: \"generate enterprise e-tailers\"\n        }\n    },\n    {\n        id: 8,\n        name: \"Nicholas Runolfsdottir V\",\n        registrationDate: new Date(1550478139234),\n        username: \"Maxime_Nienow\",\n        email: \"Sherwood@rosamond.me\",\n        address: {\n            street: \"Ellsworth Summit\",\n            suite: \"Suite 729\",\n            city: \"Aliyaview\",\n            zipcode: \"45169\",\n            geo: {\n                lat: \"-14.3990\",\n                lng: \"-120.7677\"\n            }\n        },\n        phone: \"586.493.6943 x140\",\n        website: \"jacynthe.com\",\n        company: {\n            name: \"Abernathy Group\",\n            catchPhrase: \"Implemented secondary concept\",\n            bs: \"e-enable extensible e-tailers\"\n        }\n    },\n    {\n        id: 9,\n        name: \"Glenna Reichert\",\n        registrationDate: new Date(1550478139234),\n        username: \"Delphine\",\n        email: \"Chaim_McDermott@dana.io\",\n        address: {\n            street: \"Dayna Park\",\n            suite: \"Suite 449\",\n            city: \"Bartholomebury\",\n            zipcode: \"76495-3109\",\n            geo: {\n                lat: \"24.6463\",\n                lng: \"-168.8889\"\n            }\n        },\n        phone: \"(775)976-6794 x41206\",\n        website: \"conrad.com\",\n        company: {\n            name: \"Yost and Sons\",\n            catchPhrase: \"Switchable contextually-based project\",\n            bs: \"aggregate real-time technologies\"\n        }\n    },\n    {\n        id: 10,\n        name: \"Clementina DuBuque\",\n        registrationDate: new Date(1550478139234),\n        username: \"Moriah.Stanton\",\n        email: \"Rey.Padberg@karina.biz\",\n        address: {\n            street: \"Kattie Turnpike\",\n            suite: \"Suite 198\",\n            city: \"Lebsackbury\",\n            zipcode: \"31428-2261\",\n            geo: {\n                lat: \"-38.2386\",\n                lng: \"57.2232\"\n            }\n        },\n        phone: \"024-648-3804\",\n        website: \"ambrose.net\",\n        company: {\n            name: \"Hoeger LLC\",\n            catchPhrase: \"Centralized empowering task-force\",\n            bs: \"target end-to-end models\"\n        }\n    }];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Environment } from '../core/public-api';\n\nimport { Response } from '../core/public-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  constructor(\n      private env: Environment,\n      protected http: HttpClient) { }\n\n  /**\n   * gives information about an user authenticated\n   */\n  getUserInfo(): Observable<Response<any>> {\n    return this.http.get<Response<any>>(this.env.sceibaApi + 'me');\n  }\n\n  getUsers(size= 10, page= 1, query= ''): Observable<Response<any>> {\n    let params = new HttpParams();\n    params = params.set('size', size.toString(10));\n    params = params.set('page', page.toString(10));\n    params = params.set('query', query);\n    const options = {\n      params: params\n    };\n    return this.http.get<Response<any>>(this.env.sceibaApi + 'users/search', options);\n  }\n\n\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { HttpClient, HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Optional } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthConfig, JwksValidationHandler, OAuthModuleConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserProfile } from '../../public-api';\nimport { Environment } from '../core/public-api';\n\n/**\n * This enum handles the selected backend\n */\nexport enum AuthBackend{\n    /**\n     * `sceiba` represent the Sceiba's backend\n     */\n    sceiba = 'sceiba',\n    /**\n     * `cuor` represent the Cuor's backend, The Organizations System\n     */\n    cuor = 'cuor'\n}\n/**\n * This service handles the behavior when a user authentications and\n * gives information about it.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class OauthAuthenticationService implements CanActivate, HttpInterceptor {\n\n    // public authBackend: AuthBackend =  AuthBackend.sceiba\n    public userInfoEndpoint: string;\n\n    constructor(\n        // private env: Environment,\n        private oauthStorage: OAuthStorage,\n        protected http: HttpClient,\n        private _router: Router,\n        private oauthService: OAuthService,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig) { }\n\n    // TODO: this object is `any` because we have two backends with two difrent userprofiles...\n    private authenticationSubject: Subject<any> = new Subject();\n    /**\n     * Observer to handles the behavior when a user authenticates\n     */\n    public authenticationSubjectObservable = this.authenticationSubject.asObservable();\n\n    /**\n     * notifies by an observable if the user is authenticated\n     * for the knowledge of who uses it\n     * @param islogged 'true' is loggued or 'false' other way\n     */\n    login(user) {\n      console.log('autentication service user:', user)\n      this.authenticationSubject.next(user);\n    }\n    logout() {\n      this.authenticationSubject.next(null);\n  }\n    /**\n     * gives information about an user authenticated\n     */\n    getUserInfo(): Observable<any> {\n      return this.http.get<any>(this.userInfoEndpoint);\n        // if (this.authBackend == AuthBackend.sceiba) {\n        //     return this.http.get<any>(this.env.sceibaApi + 'me');\n        // } else if (this.authBackend == AuthBackend.cuor){\n        //     return this.http.get<any>(this.env.cuorApi + 'me');\n        // }\n    }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const user = this.oauthStorage.getItem('user')\n\n        if (user) {\n            return true;\n        }\n        else{\n            this._router.navigate(['/']);\n            return false;\n        }\n\n    }\n\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        let token = this.oauthStorage.getItem('access_token');\n\n        if (token) {\n            let headers = req.headers.set('Authorization', 'Bearer ' + token);\n\n            if (req.method != 'GET'){\n                headers = headers.set('Content-Type', 'application/json');\n                headers = headers.set('Access-Control-Allow-Origin', '*');\n            }\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).pipe(\n            catchError((err: HttpErrorResponse) => {\n\n                /* 401 means the user is not authorized. */\n                if (err.status === 401) {\n                    this.oauthService.initImplicitFlow();\n                    // this._router.navigateByUrl('/');\n                }\n\n                return throwError(err);\n            })\n        );\n    }\n\n    /**\n     * Configure, this function is necessary if you will implement your own logic\n     * @param authConfig: is the auth configuration.\n     * you have to call `oauthService.initImplicitFlow()` in you login function\n     * and `oauthService.logOut()` in you logout function\n     */\n    public configure(authConfig: AuthConfig): void {\n        this.oauthService.configure(authConfig);\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SimpleAuthenticationService { //implements CanActivate {\n\n  public authBackend: AuthBackend =  AuthBackend.sceiba\n\n  constructor(\n      private env: Environment,\n      protected http: HttpClient,\n      private _router: Router) { }\n\n  private authenticationSubject: Subject<boolean> = new Subject();\n  /**\n   * Observer to handles the behavior when a user authenticates\n   */\n  public authenticationSubjectObservable = this.authenticationSubject.asObservable();\n\n  /**\n   * notifies by an observable if the user is authenticated\n   * for the knowledge of who uses it\n   * @param islogged 'true' is loggued or 'false' other way\n   */\n  logguedChange(islogged: boolean) {\n      this.authenticationSubject.next(islogged);\n  }\n  /**\n   * gives information about an user authenticated\n   */\n  getUserInfo(): Observable<any> {\n      if (this.authBackend == AuthBackend.sceiba) {\n          return this.http.get<any>(this.env.sceibaApi + 'me');\n      } else if (this.authBackend == AuthBackend.cuor){\n          return this.http.get<any>(this.env.cuorApi + 'me');\n      }\n  }\n\n  // canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n  //   if(this.env.user != null){\n  //     return true;\n  //   }\n  //   else{\n  //       this._router.navigate(['/']);\n  //       return false;\n  //   }\n\n  // }\n}\n","\nimport { AfterViewInit, Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PartialObserver, Subscription, timer } from \"rxjs\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { AuthConfig, JwksValidationHandler, OAuthService,OAuthStorage } from \"angular-oauth2-oidc\";\n\nimport { Environment } from \"../core/env\";\nimport { UserProfileService } from \"../backend/user-profile.service\";\nimport { UserProfile } from \"../entities/person.entity\";\nimport { OauthAuthenticationService } from \"./authentication.service\";\n// import { authConfig } from './auth-config';\n\nexport interface OauthInfo\n{\n  serverHost: string;\n  loginUrl: string;\n  tokenEndpoint: string;\n  userInfoEndpoint: string,\n  appHost: string;\n  appName: string;\n  oauthRedirectUri: string;\n  oauthClientId: string;\n  oauthScope: string;\n}\n\n/**\n * Represents a component used to authenticate. \n * \n * In order to use this component with the correct i18n, you must include \n * (in your i18n translate files that are in the folder `assets\\i18n`) \n * a translation key of name \"TOCO_AUTHENTICATION\" that contains \n * an object as value with the translation needed by this component. \n * \n * In the case of `es.json` file, you must include the following translation key: \n    \"TOCO_AUTHENTICATION\": {\n        \"MAT_CARD_TITLE_AUTH\": \"Autenticación con\",\n        \"AUTENTICARSE\": \"Autenticarse\",\n        \"H1_HOLA\": \"Hola\",\n        \"BUTTON_SALIR\": \"Salir\"\n    }\n * \n * In the case of `en.json` file, you must include the following translation key: \n    \"TOCO_AUTHENTICATION\": {\n        \"MAT_CARD_TITLE_AUTH\": \"Authentication with\",\n        \"AUTENTICARSE\": \"Log in\",\n        \"H1_HOLA\": \"Hello,\",\n        \"BUTTON_SALIR\": \"Exit\"\n    }\n * \n * If you have another language, then you have another `*.json` file, \n * and you must include the \"TOCO_AUTHENTICATION\" translation key with the correct translation values. \n */\n@Component({\n  selector: \"toco-authentication\",\n  templateUrl: \"./authentication.component.html\",\n  styleUrls: [\"./authentication.component.scss\"],\n})\nexport class AuthenticationComponent implements OnInit, AfterViewInit {\n\n  @Input()\n  public isButtonLogin: boolean;\n\n  @Input()\n  public isButtonLoginIcon: boolean;\n\n  @Input()\n  public isButtonLoginText: string;\n\n  @Input()\n  public oauthInfo: OauthInfo;\n\n  public user: UserProfile;\n\n  public userName: string;\n  private timerAuthenticateSuscription: Subscription = null;\n  private timerAuthenticateObserver: PartialObserver<number> = {\n    next: (_) => {\n      // console.log('next');\n      // this.oauthService.setupAutomaticSilentRefresh();\n      if (this.oauthStorage.getItem(\"access_token\")) {\n        this.authenticationService.getUserInfo().subscribe(\n          (response) => {\n            this.oauthStorage.setItem(\"user\", JSON.stringify(response));\n            this.authenticationService.login(response);\n          },\n          error => console.log(error),\n          () => {}\n        )\n        // this.authenticationService.logguedChange(true);\n      }\n    },\n\n    error: (err: any) => {\n      console.log(\"The observable got an error notification: \" + err + \".\");\n    },\n\n    complete: () => {\n      console.log(\"The observable got a complete notification.\");\n    },\n  };\n\n  constructor(\n    private userProfileService: UserProfileService,\n    private env: Environment,\n    private router: Router,\n    private oauthService: OAuthService,\n    private oauthStorage: OAuthStorage,\n    private authenticationService: OauthAuthenticationService,\n    private _transServ: TranslateService\n  )\n  { }\n\n  ngOnInit()\n  {\n    if (this.isButtonLogin == undefined) this.isButtonLogin = false;\n    if (this.isButtonLoginIcon == undefined) this.isButtonLoginIcon = false;\n    if (this.isButtonLoginText == undefined)\n    {\n      this._transServ.get('TOCO_AUTHENTICATION.AUTENTICARSE').subscribe((res: string) => {\n        this.isButtonLoginText = res;\n      });\n    }\n    if (this.oauthInfo.loginUrl == undefined || this.oauthInfo.loginUrl == ''){\n      this.oauthInfo.loginUrl = this.oauthInfo.serverHost + \"oauth/authorize\";\n    }\n    if (this.oauthInfo.tokenEndpoint == undefined || this.oauthInfo.tokenEndpoint == ''){\n      this.oauthInfo.tokenEndpoint = this.oauthInfo.serverHost + \"oauth/token\";\n    }\n    this.configure();\n  }\n\n  ngOnDestroy(): void {\n    if (this.timerAuthenticateSuscription) {\n      this.timerAuthenticateSuscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // this observable is to wait a while for the component to finish loading,\n    // because otherwise it fails to notify that the user is authenticated\n    this.timerAuthenticateSuscription = timer(0).subscribe(\n      this.timerAuthenticateObserver\n    );\n  }\n\n  /**\n   * Configurations to authenticate\n   */\n  private configure() {\n    const authConfig: AuthConfig = {\n      // Url of the Identity Provider\n      //issuer: 'https://sceiba-lab.upr.edu.cu',\n\n      loginUrl: this.oauthInfo.loginUrl,\n\n      tokenEndpoint: this.oauthInfo.tokenEndpoint,\n\n      // URL of the SPA to redirect the user to after login\n      redirectUri: this.oauthInfo.oauthRedirectUri,\n\n      // The SPA's id. The SPA is registered with this id at the auth-server\n      clientId: this.oauthInfo.oauthClientId,\n\n      oidc: false,\n\n      // silentRefreshRedirectUri: this.oauthInfo.sceibaHost + 'oauth/token',\n\n      // timeoutFactor: 0.75,\n\n      sessionChecksEnabled: true,\n      // set the scope for the permissions the client should request\n      // The first three are defined by OIDC. The 4th is a usecase-specific one\n      scope: this.oauthInfo.oauthScope, //'openid profile email voucher',\n    };\n    this.oauthService.configure(authConfig);\n\n    // Store user session in storage\n    // this.oauthService.setStorage(this.oauthStorage);\n\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n\n    // Try to login and if a token was received, request user information\n    this.oauthService.tryLogin({\n      onTokenReceived: (_) => {\n        // gives information about user loggued\n        this.authenticationService.userInfoEndpoint = this.oauthInfo.userInfoEndpoint;\n        this.authenticationService.getUserInfo().subscribe(\n\n            (response) => {\n              console.log(response);\n              \n              this.oauthStorage.setItem(\"user\", JSON.stringify(response));\n              this.authenticationService.login(response);\n            },\n            error => console.log(error),\n            () => {}\n\n\n          // (response) => {\n          // this.oauthStorage.setItem(\"user\", JSON.stringify(response));\n          // // // save email in storage\n          // // if (this.authBackend == AuthBackend.cuor){\n          // //   this.oauthStorage.setItem(\"email\", response.email);\n          // // }else{\n          // //   this.oauthStorage.setItem(\"email\", response.data.userprofile.user.email);\n          // // }\n          // // this.oauthStorage.setItem('userID', response.data.userprofile.id);\n\n          // // notifies user is logged\n          // this.authenticationService.logguedChange(true);\n\n          // this.userName = this.oauthStorage.getItem(\"email\");\n\n        // }\n        );\n      },\n      onLoginError: (err) => {\n        console.log(\"error in login\", err);\n      },\n    });\n  }\n\n  /**\n   * Starts the login flow\n   */\n  public login() {\n    this.oauthService.initImplicitFlow();\n    // this.authenticationService.authBackend = this.authBackend\n    // TODO: por que esto aqui, este modulo solo se encarga de la autenticacion y dar la informacion basica del usuario,\n    // el perfil es manejado por otro componente\n    this.user = new UserProfile();\n    this.userProfileService.getUserInfo().subscribe({\n      next: (response) => {\n        if (response && response.data && response.data.userprofile) {\n          this.user.deepcopy(response.data.userprofile);\n          this.oauthStorage.setItem(\"user\", this.user.entitystringify());\n        }\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n\n  /**\n   * Ends the login flow\n   */\n  public logoff() {\n    this.oauthService.logOut();\n    this.authenticationService.logout();\n  }\n\n  /**\n   * Gives the user's email if the user is authenticated\n   */\n  public get name() {\n    if (this.oauthStorage.getItem(\"access_token\")) {\n      return this.oauthStorage.getItem(\"email\");\n    } else {\n      return null;\n    }\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\n\nimport { AuthenticationComponent } from './authentication.component'\nimport { AuthenticateRoutingModule } from './authentication-routing.module'\nimport { OauthAuthenticationService, SimpleAuthenticationService } from './authentication.service'\n\nexport function storageFactory() : OAuthStorage {\n  return localStorage\n}\n@NgModule({\n    declarations: [\n        AuthenticationComponent\n    ],\n\n    imports: [\n        SharedModule,\n        HttpClientModule,\n        TranslateModule,\n        OAuthModule.forRoot(),\n        // AuthenticateRoutingModule\n    ],\n    exports: [\n        AuthenticationComponent\n    ],\n\n    //TODO: esto se elimina de aquí y se pone en el fichero `core/services/http-interceptor.order.ts`.\n    providers: [\n        { provide: OAuthStorage, useFactory: storageFactory },\n        OauthAuthenticationService,\n        SimpleAuthenticationService,\n        /* TODO: This can not be set here. */\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: OauthAuthenticationService,\n            multi: true\n        }\n      ]\n})\nexport class AuthenticationModule\n{ }\n","import { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n    // Url of the Identity Provider\n    //issuer: 'https://sceiba-lab.upr.edu.cu',\n\n    loginUrl: 'https://localhost:5000/oauth/authorize',\n\n    tokenEndpoint: 'https://localhost:5000/oauth/token',\n\n    // URL of the SPA to redirect the user to after login\n    redirectUri: 'https://127.0.0.1:4200/',\n\n    // The SPA's id. The SPA is registered with this id at the auth-server\n    clientId: 'a0QpogRmC5iyrhLbfIqmDEbOhhr9nUzOYYPAhWW1',\n\n    oidc: false,\n\n    timeoutFactor: 0.80,\n\n    // set the scope for the permissions the client should request\n    // The first three are defined by OIDC. The 4th is a usecase-specific one\n    scope: 'user:email', //'openid profile email voucher',\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, PartialObserver, Subject } from 'rxjs';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\n\n\nimport { Environment } from '../core/public-api';\n\nimport { Response } from '../core/public-api';\nimport { Vocabulary, Term } from '../entities/public-api';\n\n// TODO: Poner todos los tipos de datos de retorno de Response.\n// No puede haber en ningun servicio del backend un Response<any>\n\n@Injectable()\nexport class TaxonomyService {\n\n  private prefix = 'vocabularies';\n\n  private httpOptions = {\n    headers: new HttpHeaders(\n      {\n        'Content-Type': 'application/json',\n      })\n  };\n  private token = '';\n\n  constructor(private env: Environment, private http: HttpClient, private oauthStorage: OAuthStorage) {\n    this.token = this.oauthStorage.getItem('access_token');\n  }\n\n  getVocabulary(id): Observable<Response<any>> {\n    let req = this.env.sceibaApi + this.prefix + '/vocabulary/' + id;\n    return this.http.get<Response<any>>(req);\n  }\n\n  getTermListByIDs(ids: number[]): Observable<Response<any>> {\n    let p = '';\n    ids.forEach(n => p = p + n.toString(10) + ',');\n    p = p.substring(0, p.length - 1);\n    let params = new HttpParams();\n    const options = {\n      params: params.set('ids', p)\n    };\n    const req = this.env.sceibaApi + this.prefix + '/term/inlist';\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  getTermByID(termID, level=10): Observable<Response<any>> {\n    let params = new HttpParams();\n    const options = {\n      params: params.set('level', level.toString(10))\n    };\n    const req = this.env.sceibaApi + this.prefix + '/term/id/' + termID;\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  getTermByUUID(termUUID, level=10): Observable<Response<any>> {\n    let params = new HttpParams();\n    const options = {\n      params: params.set('level', level.toString(10))\n    };\n    const req = this.env.sceibaApi + this.prefix + '/term/' + termUUID;\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  getTermsTreeByVocab(vocabId, level=10): Observable<Response<any>> {\n    let params = new HttpParams();\n    const options = {\n      params: params.set('level', level.toString(10))\n    };\n    const req = this.env.sceibaApi + this.prefix + '/term/tree/' + vocabId;\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  newVocabulary(vocab: Vocabulary): Observable<Response<any>> {\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.post<Response<any>>(\n      this.env.sceibaApi + this.prefix + '/vocabulary/new',\n      vocab.entitystringify()\n      ,\n      this.httpOptions);\n  }\n\n  editVocabulary(vocab: Vocabulary): Observable<Response<any>> {\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.post<Response<any>>(\n      this.env.sceibaApi + this.prefix + '/vocabulary/edit/' + vocab.id,\n      vocab.entitystringify()\n      ,\n      this.httpOptions);\n  }\n\n  getVocabularies(): Observable<Response<any>> {\n    return this.http.get<Response<any>>(this.env.sceibaApi + this.prefix + '/vocabulary/list');\n  }\n\n  newTerm(term: Term): Observable<Response<any>> {\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.post<Response<any>>(\n      this.env.sceibaApi + this.prefix + '/term/new',\n      term.entitystringify()\n      ,\n      this.httpOptions);\n  }\n\n  editTerm(term: Term): Observable<Response<any>> {\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.post<Response<any>>(\n      this.env.sceibaApi + this.prefix + '/term/edit/' + term.uuid,\n      term.entitystringify()\n      ,\n      this.httpOptions);\n  }\n\n  getCurrentUserPermissions(): Observable<Response<any>>{\n    const req = this.env.sceibaApi + this.prefix + '/user/permissions';\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.get<Response<any>>(req, this.httpOptions);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { HttpService, Response } from '../core/public-api';\nimport { FilterHttpMap } from '../filters/public-api';\n\nimport { Environment } from '../core/public-api';\n\n@Injectable()\nexport class CatalogService extends HttpService {\n\n    constructor(private env: Environment, protected http: HttpClient) {\n        super(http);\n    }\n\n    getJournalsPage(count: number, page: number, parameters: Array<FilterHttpMap>): Observable<Response<any>> {\n        try {\n            let params = new HttpParams();\n            if (parameters) {\n                for (let i = 0; i < parameters.length; i++) {\n                    params = params.set(parameters[i].field, parameters[i].value)\n                }\n            }\n            const options = {\n                params: params.set('size', count.toString(10)).set('page', (page).toString(10))\n            };\n            return this.http.get<Response<any>>(this.env.sceibaApi + 'source/journals', options);\n        }\n        catch (error) {\n        }\n    }\n\n    getJournalsCount(): Observable<any> {\n        try {\n            return this.http.get<Response<any>>(this.env.sceibaApi + 'source/count');\n        } catch (error) {\n\n        }\n    }\n\n    getJournalsVocab(): Observable<Response<any>> {\n        return this.http.get<Response<any>>(this.env.sceibaApi + 'taxonomy/vocabulary/list');\n    }\n    getTerminosByVocab(vocabId: string): Observable<any> {\n        try {\n            return this.http.get<any>(this.env.sceibaApi + 'taxonomy/term/list/' + vocabId);\n        } catch (error) {\n\n        }\n    }\n\n    //   getPeople():Observable<People_Response>{\n    //     return this.http.get<People_Response>(this.dominio);\n\n    //   }\n    //   getPeopleById(id: number):Observable<Person_Response>{\n    //         return this.http.get<Person_Response>(this.dominio+'/'+id);\n\n    //     }\n\n    //   getPeoplepaginator(inicio: number, cant: number):Observable<People_Response>{\n    //       return this.http.get<People_Response>(this.dominio+'/'+inicio+'/'+cant);\n\n    //   }\n    //     addPeople(body):Observable<Response>{\n    //       return this.http.post<Response>(this.dominio,body);\n    //   }\n\n    getSourceByUUID(uuid): Observable<Response<any>> {\n        const req = this.env.sceibaApi + 'source/' + uuid;\n        return this.http.get<Response<any>>(req);\n    }\n    getSourcesOrgAggregation(uuid): Observable<Response<any>> {\n      const req = this.env.sceibaApi + 'source/aggs/org/' + uuid;\n      return this.http.get<Response<any>>(req);\n    }\n}\n","\nimport { NgModule } from '@angular/core';\n\nimport { TaxonomyService } from './taxonomy.service';\nimport { CatalogService } from './catalog.service';\n\n@NgModule({\n    providers: [\n        TaxonomyService,\n        CatalogService\n    ]\n})\nexport class BackendModule\n{ }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { HttpService, Response } from '../core/public-api';\nimport { Environment } from '../core/public-api';\n\n@Injectable()\nexport class NotificationService extends HttpService {\n\n\n    constructor(private env: Environment, protected http: HttpClient) {\n        super(http);\n    }\n\n    getNotificationsList(count: number, page: number): Observable<Response<any>> {\n        return this.http.get<Response<any>>(this.env.sceibaApi + 'notification/list');\n    }\n\n\n    setNotificationViewed(id: number): Observable<Response<any>>{\n        return this.http.get<Response<any>>(this.env.sceibaApi+'notification/viewed/'+id);\n    }\n}\n","\nimport { HttpBackend, HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Environment, MessageService } from '../core/public-api';\nimport { Hit, Organization, SearchResponse } from '../entities/public-api';\n\n\n/**\n * The URL to the root api.\n */\nexport const ROOT_API: string = 'api';\n\n/**\n * The object with the URLs to the endpoint apis.\n */\nexport const ENDPOINT_APIS = {\n    organizations: ROOT_API + '/organizations',\n};\n\n/**\n * The backend service in order to communicate with a remote server over HTTP.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganizationService\n{\n    /**\n     * The `httpOptions` object that contains the headers and will be passed to every `HttpClient` save method.\n     */\n    private readonly _httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': 'my-auth-token'\n        })\n    };\n\n    public constructor(private _http: HttpClient, private _messageService: MessageService)\n    { }\n\n    /**\n     * Gets data from the server.\n     * If an error occurs, lets the app keep running by returning the specified safe `optionalResult`.\n     * @param url The endpoint api URL.\n     * @param optionalResult If an error occurs, lets the app keep running by returning a safe optional value\n     * as the observable result.\n     */\n    public get<T>(url: string, optionalResult: T): Observable<T>\n    {\n        return this._http.get<T>(url).pipe(\n            tap(_ => this.log(`fetched data from '${ url }'`)),\n        );\n    }\n\n    /**\n     * Gets data from the server that meets the specified `query`.\n     * If an error occurs, lets the app keep running by returning the specified safe `optionalResult`.\n     * @param url The endpoint api URL.\n     * @param query The query to search.\n     * @param optionalResult If an error occurs, lets the app keep running by returning a safe optional value\n     * as the observable result.\n     */\n    public search<T>(url: string, query: string, optionalResult: T): Observable<T>\n    {\n        return this._http.get<T>(`${ url }/?${ query }`).pipe(\n            tap(_ => this.log(`searched '${ query }' in '${ url }'`)),\n        );\n    }\n\n    /**\n     * Adds `data` to the server. Expects the server to generate an `id` for the new `data`.\n     * If an error occurs, lets the app keep running by returning the specified safe `optionalResult`.\n     * @param url The endpoint api URL.\n     * @param data The data to add.\n     * @param optionalResult If an error occurs, lets the app keep running by returning a safe optional value\n     * as the observable result.\n     */\n    public add<T>(url: string, data: T, optionalResult: T): Observable<T>\n    {\n        /* Expects the server to generate an `id` for the new `data`. */\n\n        return this._http.post<T>(url, data, this._httpOptions).pipe(\n            tap(_ => this.log(`added ${ data } to '${ url }'`)),\n        );\n    }\n\n    /**\n     * Updates `data` on the server. Returns an Observable of that `data` if the `data` is inserted (does\n     * not exist) on the server; otherwise, returns an Observable of null (if the `data` is only updated).\n     * If an error occurs, lets the app keep running by returning the specified safe `optionalResult`.\n     * @param url The endpoint api URL.\n     * @param data The data to update.\n     * @param optionalResult If an error occurs, lets the app keep running by returning a safe optional value\n     * as the observable result.\n     */\n    public update<T>(url: string, data: T, optionalResult: T): Observable<T>\n    {\n        return this._http.put<T>(url, data, this._httpOptions).pipe(\n            tap(_ => this.log(`updated ${ data } to '${ url }'`)),\n        );\n    }\n\n    /**\n     * Deletes data from the server.\n     * If an error occurs, lets the app keep running by returning the specified safe `optionalResult`.\n     * @param url The endpoint api URL.\n     * @param id The unique identifier that identifies the data to delete.\n     * @param optionalResult If an error occurs, lets the app keep running by returning a safe optional value\n     * as the observable result.\n     */\n    public delete<T>(url: string, id: string, optionalResult: T): Observable<T>\n    {\n        return this._http.delete<T>(`${ url }/${ id }`, this._httpOptions).pipe(\n            tap(_ => this.log(`deleted data with id = ${ id } from '${ url }'`)),\n        );\n    }\n\n    /**\n     * Logs an `OrganizationService` message with the `MessageService`.\n     * @param message The message to log.\n     */\n    private log(message: string): void\n    {\n        this._messageService.add(`${ OrganizationService.name }: ${ message }.`);\n    }\n}\n\n\n@Injectable()\nexport class OrganizationServiceNoAuth {\n\n  http: HttpClient;\n  path = 'organizations'\n  constructor(private env: Environment, private handler: HttpBackend) {\n\n    this.http = new HttpClient(handler);\n  }\n\n  getOrganizationByUUID(uuid): Observable<Hit<Organization>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    const req = this.env.sceibaApi + \"/pid/organization/\" + uuid;\n    return this.http.get<Hit<Organization>>(req);\n  }\n\n  getOrganizationRelationships(uuid, relType=null): Observable<Array<Hit<Organization>>> {\n    const req = this.env.sceibaApi + this.path + '/' + uuid + '/relationships';\n\n    if (relType != null){\n      let params = new HttpParams();\n      params = params.set('type', relType);\n      const options = {\n        params: params,\n      };\n      return this.http.get<Array<Hit<Organization>>>(req, options);\n    } else {\n      return this.http.get<Array<Hit<Organization>>>(req);\n    }\n\n  }\n\n  getOrganizationByPID(pid): Observable<Hit<Organization>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    let params = new HttpParams();\n    params = params.set('value', pid);\n\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n\n    const req = this.env.sceibaApi + this.path + '/pid';\n    return this.http.get<Hit<Organization>>(req, options);\n  }\n\n  getOrganizations(params: HttpParams): Observable<SearchResponse<Organization>> {\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    console.log(params);\n    const req = this.env.sceibaApi + 'search/' + this.path;\n    console.log(req);\n\n    return this.http.get<SearchResponse<Organization>>(req, options);\n  }\n\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { HttpBackend, HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Environment, Response } from '../core/public-api';\nimport { Organization, Record, SearchResponse, Source } from '../entities/public-api';\n\n\n@Injectable()\nexport class SearchService {\n\n  private prefix = 'search';\n\n  // private headers = new HttpHeaders(\n  //     {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'application/json',\n  //       'Access-Control-Allow-Origin': '*'\n  //     }\n  // );\n  public http: HttpClient;\n\n  public constructor(private env: Environment, private handler: HttpBackend) {\n\n    // TODO: hay una mejor manera de hacer esto, creando diferentes y propios HttpClients que\n    // tengan un comportamiento especifico (eg: sin/con autenticacion)\n    // ver: https://github.com/angular/angular/issues/20203#issuecomment-369754776\n    // otra solucion seria pasar parametros especiales como {ignore_auth = true} y que el\n    // interceptor actue en consecuencia... .\n    // https://github.com/angular/angular/issues/18155#issuecomment-382438006\n\n    this.http = new HttpClient(handler);\n  }\n\n  public getAggregation(field, size = 10): Observable<Response<any>> {\n    let params = new HttpParams();\n    const options = {\n      params: params.set('size', size.toString(10))\n    };\n    const req = this.env.sceibaApi + this.prefix + '/aggs/' + field;\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  public getRecords(params: HttpParams): Observable<SearchResponse<Record>> {\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    console.log(params)\n    const req = this.env.sceibaApi + this.prefix + '/records/';\n    return this.http.get<SearchResponse<Record>>(req, options);\n  }\n\n  public getSources(params: HttpParams): Observable<SearchResponse<Source>> {\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    console.log(params);\n    const req = this.env.sceibaApi + this.prefix + '/sources';\n    return this.http.get<SearchResponse<Source>>(req, options);\n  }\n\n  public getOrganizations(params: HttpParams): Observable<SearchResponse<Organization>> {\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    // console.log(params);\n    const req = this.env.sceibaApi + this.prefix + '/organizations/';\n    // console.log(req);\n\n    return this.http.get<SearchResponse<Organization>>(req, options);\n  }\n\n  public getOrganizationById(id: string): Observable<SearchResponse<Organization>> {\n    const req = this.env.cuorApi + 'organizations/' + id + '/';\n    // console.log(req);\n\n    return this.http.get<SearchResponse<Organization>>(req);\n  }\n  public updateOrganizations(data: Organization): Observable<Organization> {\n    //TODO: Do this method...\n    return of(null);\n  }\n\n  public getSourcesOrgAggregation(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi + 'source/aggs/org/' + uuid;\n    return this.http.get<Response<any>>(req);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport {\n  HttpBackend, HttpClient,\n  HttpHeaders,\n  HttpParams\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { OAuthStorage } from \"angular-oauth2-oidc\";\nimport { Observable } from \"rxjs\";\nimport { Environment } from \"../core/env\";\nimport { Response } from '../core/public-api';\nimport {\n  Hit, SearchResponse, Source, SourceData, SourceVersion\n} from \"../entities/public-api\";\n\n\n\n\n@Injectable()\nexport class SourceService {\n  private prefix = \"source\";\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \",\n    }),\n  };\n\n  private token = \"\";\n  httpSearch: HttpClient;\n  constructor(\n    private env: Environment,\n    private http: HttpClient,\n    private handler: HttpBackend,\n    private oauthStorage: OAuthStorage\n  ) {\n    this.token = this.oauthStorage.getItem(\"access_token\");\n\n    // TODO: hay una mejor manera de hacer esto, creando diferentes y propios HttpClients que\n    // tengan un comportamiento especifico (eg: sin/con autenticacion)\n    // ver: https://github.com/angular/angular/issues/20203#issuecomment-369754776\n    // otra solucion seria pasar parametros especiales como {ignore_auth = true} y que el\n    // interceptor actue en consecuencia... .\n    // https://github.com/angular/angular/issues/18155#issuecomment-382438006\n\n    this.httpSearch = new HttpClient(handler);\n  }\n\n  getMySources(size: number = 10, page: number = 1, role='manager'): Observable<Response<any>> {\n    let params = new HttpParams();\n    params = params.set(\"size\", size.toString(10));\n    params = params.set(\"page\", page.toString(10));\n\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    // this.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n\n    const req = this.env.sceibaApi + this.prefix + \"/me/\"+ role + \"/ALL\";\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  getMySourcesAllRoles(): Observable<Response<any>> {\n    const req = this.env.sceibaApi + this.prefix + \"/me/ALL\";\n    return this.http.get<Response<any>>(req);\n  }\n\n\n  private adhocstringgify(source: SourceVersion) {\n    let orgs: string = JSON.stringify(source.data.organizations);\n    console.log(\"-------------------\", orgs);\n\n    let all = source.entitystringify();\n    console.log(\"-------------------\", all);\n\n    let from = all.search('\"organizations\"') + 16;\n\n    let p1 = all.substr(0, from);\n    console.log(p1);\n\n    let p2 = all.substr(from);\n    console.log(p2);\n\n    let len = this.count_to_len(p2);\n    console.log(len);\n\n    let p3 = all.substr(from + len);\n    console.log(p3);\n\n    return p1 + orgs + p3;\n  }\n  private count_to_len(p2: string) {\n    if (p2[0] == \"[\") {\n      let len = 1;\n      let count = 1;\n      for (let index = 1; index < p2.length; index++) {\n        const element = p2[index];\n        len++;\n        if (p2[index] === \"[\") count++;\n        if (p2[index] === \"]\") count--;\n        if (count === 0) return len;\n      }\n    }\n  }\n  editSource(source: SourceVersion, uuid: any): Observable<Response<any>> {\n    // this.adhocstringgify(source)\n    // console.log(source)\n    // let valu = source.entitystringify();\n    // console.log(\"s: \", valu)\n\n    const req = this.env.sceibaApi + this.prefix + \"/\" + uuid + \"/edit\";\n    return this.http.post<Response<any>>(\n      req,\n      this.adhocstringgify(source),\n      this.httpOptions\n    );\n  }\n\n  makeSourceAsApproved(source: SourceVersion,uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi + this.prefix + \"/\" + uuid + \"/publish\";\n    return this.http.post<Response<any>>(\n      req,\n      this.adhocstringgify(source),\n      this.httpOptions\n    );\n  }\n\n  makeSourceAsUnApproved(source: SourceVersion,uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi + this.prefix + \"/\" + uuid + \"/unpublish\";\n    return this.http.post<Response<any>>(\n      req,\n      this.adhocstringgify(source),\n      this.httpOptions\n    );\n  }\n\n  newSource(source: SourceVersion, uuid, role): Observable<Response<any>> {\n    let params = new HttpParams();\n    params = params.set(\"pid\", uuid.toString());\n    params = params.set(\"role\", role.toString());\n\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n\n    const req = this.env.sceibaApi + this.prefix + \"/new\";\n    return this.http.post<Response<any>>(\n      req,\n      this.adhocstringgify(source),\n      options\n    );\n  }\n\n  getIssnInfo(issn): Observable<Response<any>> {\n    const req = this.env.sceibaApi + this.prefix + \"/journal/issn/\" + issn;\n    return this.http.get<Response<any>>(req);\n  }\n\n  getSourcesByTermUUID(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi + this.prefix + \"/relations/\" + uuid;\n    return this.http.get<Response<any>>(req);\n  }\n\n  getSourceVersions(uuid): Observable<Response<any>> {\n    this.httpOptions.headers = this.httpOptions.headers.set(\n      \"Authorization\",\n      \"Bearer \" + this.token\n    );\n    const req = this.env.sceibaApi + this.prefix + \"/\" + uuid + \"/versions\";\n    return this.http.get<Response<any>>(req, this.httpOptions);\n  }\n\n  countSourcesByTerm(uuid, level = 0): Observable<Response<any>> {\n    let params = new HttpParams();\n    const options = {\n      params: params.set(\"level\", level.toString(10)),\n    };\n    const req =\n      this.env.sceibaApi + this.prefix + \"/relations/\" + uuid + \"/count\";\n    return this.http.get<Response<any>>(req, options);\n  }\n\n  getSourceByUUID(uuid): Observable<Response<any>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    const req = this.env.sceibaApi  + this.prefix + '/' + uuid;\n    return this.http.get<Response<SourceData>>(req);\n  }\n\n  permissionGetSourceEditors(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/editor/' + uuid +'/users';\n    return this.http.get<Response<any>>(req);\n  }\n\n  permissionSetSourceEditor(uuid, user, allow= false): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/' + user + '/editor/' + uuid + ((allow) ? '/allow' : '/deny');\n    return this.http.post<Response<any>>(\n      req,\n      null,\n      this.httpOptions\n    );\n  }\n\n  permissionGetSourceManagers(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/manager/' + uuid +'/users';\n    return this.http.get<Response<any>>(req);\n  }\n\n  permissionSetSourceManager(uuid, user, allow= false): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/' + user + '/manager/' + uuid + ((allow) ? '/allow' : '/deny');\n    return this.http.post<Response<any>>(\n      req,\n      null,\n      this.httpOptions\n    );\n  }\n\n  permissionGetOrganizationManagers(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/organization/' + uuid +'/users';\n    return this.http.get<Response<any>>(req);\n  }\n\n  permissionSetOrganizationManager(uuid, user, allow= false): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/' + user + '/organization/' + uuid + ((allow) ? '/allow' : '/deny');\n    return this.http.post<Response<any>>(\n      req,\n      null,\n      this.httpOptions\n    );\n  }\n\n  permissionGetTermManagers(uuid): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/term/' + uuid +'/users';\n    return this.http.get<Response<any>>(req);\n  }\n\n  permissionSetTermManager(uuid, user, allow= false): Observable<Response<any>> {\n    const req = this.env.sceibaApi  + this.prefix + '/permission/' + user + '/term/' + uuid + ((allow) ? '/allow' : '/deny');\n    return this.http.post<Response<any>>(\n      req,\n      null,\n      this.httpOptions\n    );\n  }\n\n}\n\n\n@Injectable()\nexport class SourceServiceNoAuth {\n\n  http: HttpClient;\n  constructor(private env: Environment, private handler: HttpBackend) {\n\n    // TODO: hay una mejor manera de hacer esto, creando diferentes y propios HttpClients que\n    // tengan un comportamiento especifico (eg: sin/con autenticacion)\n    // ver: https://github.com/angular/angular/issues/20203#issuecomment-369754776\n    // otra solucion seria pasar parametros especiales como {ignore_auth = true} y que el\n    // interceptor actue en consecuencia... .\n    // https://github.com/angular/angular/issues/18155#issuecomment-382438006\n\n    this.http = new HttpClient(handler);\n  }\n\n  getSourceByUUID(uuid): Observable<Hit<SourceData>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    const req = this.env.sceibaApi + \"/pid/source/\" + uuid;\n    return this.http.get<Hit<SourceData>>(req);\n  }\n\n  getSourceByISSN(issn): Observable<Hit<SourceData>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    const req = this.env.sceibaApi + \"source/byissn/\" + issn;\n    return this.http.get<Hit<SourceData>>(req);\n  }\n\n  getSourceByPID(pid): Observable<Hit<SourceData>> {\n    // const req = this.env.sceibaApi + this.prefix + \"/\" + uuid;\n    let params = new HttpParams();\n    params = params.set('value', pid);\n\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n\n    const req = this.env.sceibaApi + 'source/pid';\n    return this.http.get<Hit<SourceData>>(req, options);\n  }\n\n\n  getSources(params: HttpParams): Observable<SearchResponse<Source>> {\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    console.log(params);\n    const req = this.env.sceibaApi + 'search/sources';\n    return this.http.get<SearchResponse<Source>>(req, options);\n  }\n\n  getSourcesStats(topOrgId): Observable<Response<any>> {\n    let params = new HttpParams();\n    params = params.set('org', topOrgId);\n\n    const options = {\n      params: params,\n      // headers: this.headers\n    };\n    const req = this.env.sceibaApi + 'source/stats';\n    return this.http.get<Response<any>>(req, options);\n  }\n\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Type } from '@angular/core';\n\nexport class FilterItem {\n    constructor(public component: Type<any>, public data: any)\n    { }\n}\n\nexport class FilterHttpMap{\n    field: string;\n    value: any;\n\n    constructor(field: string, value: string){\n        this.field=field;\n        this.value=value;\n    }\n}","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\n\nimport { FilterHttpMap } from './filter-item';\n\n@Injectable()\nexport class FiltersService {\n\n    params: Array<FilterHttpMap> = new Array();\n    // httpParams: HttpParams = new HttpParams();\n    autocompleteFilter: Array<AutocompleteFilter> = new Array();\n\n    @Output() paramsChanged: EventEmitter<Array<FilterHttpMap>> = new EventEmitter();\n\n    constructor()\n    { }\n\n    /**\n     * \n     * @param field el nombre del campo que se esta filtrando (title, etc...)\n     * @param value el valor del filtro\n     * @param emitEvent si se emite o no el evento de cambio de parametros, para los que estan suscritos.  \n     */\n    changeFilter(field? : string, value?: any, emitEvent:boolean = true): void{\n        if(this.params.find(x => x.field == field)){\n            this.params.find(x => x.field == field).value = value;\n        }\n        else if(field && value){\n            this.params.push(new FilterHttpMap(field, value));\n        }\n        /*\n        crear el httpParams... a partir del params... \n        */\n        // this.httpParams.set(field, value);\n        \n        if(emitEvent) \n            this.paramsChanged.emit(this.params);\n    }\n\n    deleteParameter(field:string):void{\n        var paramToDelete = this.params.find(x => x.field == field);\n        if(paramToDelete){\n            this.params.splice(this.params.indexOf(this.params.find(x => x.field == field)), 1)\n            this.paramsChanged.emit(this.params);\n        }\n    }\n\n\n    /**\n     * Especifico para el filtro de terminos.\n     * @param termValue identificador del termino por el cual se esta filtrando\n     * @param isdelete especifica si se va a eliminar o adicionar el @param termValue\n     */\n    changeAutocompleteFilter(name: string, value: string){\n        let isexist = false;\n        this.autocompleteFilter.forEach(filter =>{\n            if(filter.name == name){\n                filter.value = value\n                isexist = true;\n            }\n        });\n        if(!isexist){\n            this.autocompleteFilter.push(new AutocompleteFilter(name,value))\n        }\n        this.createAutocompleteFilterValue();\n    }\n\n    deleteAutocompleteFilter(name: string){\n        this.autocompleteFilter.splice(this.autocompleteFilter.indexOf(this.autocompleteFilter.find(x => x.name == name)), 1)\n        this.createAutocompleteFilterValue();\n    }\n    \n    createAutocompleteFilterValue(){\n        let emitValue = this.autocompleteFilter[0].value;\n        for (let index = 1; index < this.autocompleteFilter.length; index++) {\n            emitValue = emitValue + ','+ this.autocompleteFilter[index].value;\n\n        }\n\n        this.changeFilter('terms', emitValue, true);\n    }\n}\n\nexport class AutocompleteFilter\n{\n    name: string;\n    value: string;\n\n    constructor(name: string, value: string){\n        this.name = name;\n        this.value = value;\n    }\n}","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class FilterContainerService {\n\n    @Output() emitter: EventEmitter<number> = new EventEmitter();\n    \n    constructor()\n    { }\n\n    filterDeleted(filterIndex:number): void{\n        this.emitter.emit(filterIndex);\n    }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FilterComponent } from '../filter.component';\nimport { FiltersService } from '../filters.service';\nimport { FilterContainerService } from '../filter-container.service';\n\n@Component({\n    selector: 'toco-boolean-filter',\n    templateUrl: './boolean-filter.component.html',\n    styleUrls: ['./boolean-filter.component.scss']\n})\nexport class BooleanFilterComponent implements OnInit , FilterComponent {\n    @Input() data: any;\n    operator: boolean = true;\n    operator_name: string;\n    direction:string = 'column';\n    classDireccion:string;\n    constructor(private filterService : FiltersService,\n        private filterContainerService: FilterContainerService) { }\n\n    ngOnInit() {\n        this.operator = this.data.value;\n        this.operator_name = this.data.name[0];\n        if(this.data.direction){\n            this.direction = 'row';\n            this.classDireccion = '-horizontal';\n        } \n    }\n    remove_component(){\n        this.filterService.deleteParameter(this.data.field);\n        this.filterContainerService.filterDeleted(this.data.index)\n    }\n    \n    change_operator_name(){\n        this.operator ? this.operator_name = this.data.name[1] : this.operator_name = this.data.name[0];\n        let value = this.operator? 'OR' : 'AND';\n        this.filterService.changeFilter(this.data.field, value );\n    }\n    \n    changeInterruptor(){\n        this.operator = !this.operator;\n        this.change_operator_name();\n    }\n}\n","\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[toco-Filter]'\n})\nexport class FilterDirective\n{\n    constructor(public viewContainerRef : ViewContainerRef)\n    { }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { FilterComponent } from '../filter.component';\nimport { FiltersService } from '../filters.service';\nimport { FilterContainerService } from '../filter-container.service';\n\n\n@Component({\n    selector: 'toco-title-filter',\n    templateUrl: './title-filter.component.html',\n    styleUrls: ['./title-filter.component.scss']\n})\nexport class TitleFilterComponent implements OnInit, FilterComponent {\n    @Input() data: any;\n    type: string;\n    placeholder:  string;\n    text:string;\n    constructor(private filterService : FiltersService,\n                            private filterContainerService: FilterContainerService )\n    { }\n\n    ngOnInit() {\n        this.type = this.data.type;\n        this.placeholder = this.data.placeholder;\n        this.data.value='';\n    }\n\n    remove_component(){\n        this.filterService.deleteParameter(this.data.field);\n        this.filterContainerService.filterDeleted(this.data.index)\n\n    }\n    onChange(){\n        this.filterService.changeFilter(this.data.field, this.data.value);\n    }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { FilterComponent } from '../filter.component';\nimport { FiltersService } from '../filters.service';\nimport { FilterContainerService } from '../filter-container.service';\n\n@Component({\n    selector: 'toco-select-filter-old',\n    templateUrl: './select-filter.component.html',\n    styleUrls: ['./select-filter.component.scss']\n})\nexport class SelectFilterOldComponent implements OnInit, FilterComponent {\n    @Input() data: any;\n    type: string = '';\n    placeholder:  string = '';\n    text:string = '';\n    multiple = false;\n    selectValue:string\n    selectOptions: string[] = [''];\n    \n    constructor(private filterService : FiltersService,\n        private filterContainerService: FilterContainerService  )\n    { }  \n\n    ngOnInit() {\n        if(this.data.type)          this.type = this.data.type;\n        if(this.data.placeholder)   this.placeholder = this.data.placeholder;\n        if(this.multiple)           this.multiple = true;\n        if(this.data.selectOptions) this.selectOptions = this.data.selectOptions;\n        this.data.value='';\n    }\n    remove_component(){\n        this.filterService.deleteParameter(this.data.field);\n        this.filterContainerService.filterDeleted(this.data.index)\n    }\n    optionSelect(){\n        if(this.multiple){\n            //adaptar el value\n        }    \n        this.filterService.changeFilter(this.data.field, this.data.value);\n    }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\n\nimport { FilterComponent } from '../filter.component';\nimport { FiltersService } from '../filters.service';\nimport { FilterContainerService } from '../filter-container.service';\n\n@Component({\n    selector: 'toco-select-autocomplete-filter',\n    templateUrl: './select-autocomplete-filter.component.html',\n    styleUrls: ['./select-autocomplete-filter.component.scss']\n})\nexport class SelectAutocompleteFilterComponent implements OnInit, FilterComponent {\n    @Input() data: any;\n    type: string = '';\n    placeholder:  string = '';\n    text:string = '';\n    multiple = false;\n    selectValue:string\n    selectOptions: ValueInformation[] = [];\n    myControl = new FormControl();\n    filteredOptions: Observable<ValueInformation[]>;\n    chipsList: ValueInformation[] = [];\n    inputId: string;\n    \n    constructor(private filterService : FiltersService,\n        private filterContainerService: FilterContainerService  )\n    { }  \n\n    ngOnInit() {\n        if(this.data.type)          this.type = this.data.type;\n        if(this.data.placeholder)   this.placeholder = this.data.placeholder;\n        if(this.multiple)           this.multiple = true;\n        if(this.data.selectOptions) this.selectOptions = this.data.selectOptions;\n        this.data.value='';\n        this.filteredOptions = this.myControl.valueChanges.pipe<string,ValueInformation[]>(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n        this.inputId = this.placeholder.trim().toLowerCase();\n    }\n    private _filter(value: string): ValueInformation[] {\n        const filterValue = value.toLowerCase();\n        return this.selectOptions.filter(option => option.name.toLowerCase().includes(filterValue));\n    }\n    remove_component(){\n        this.filterService.deleteParameter(this.data.field);\n        this.filterContainerService.filterDeleted(this.data.index)\n        this.filterService.changeAutocompleteFilter(this.data.idVocab, 'OR');\n    }\n    optionSelect(){\n        var valueEmiter ='OR';\n        this.chipsList.forEach(chip =>{\n            valueEmiter= valueEmiter+','+chip.id;\n        });\n        this.filterService.changeAutocompleteFilter(this.data.idVocab, valueEmiter);\n    }\n    addChips(value: ValueInformation){\n        this.chipsList.unshift(value);\n        this.myControl.setValue('');\n        this.filteredOptions = this.myControl.valueChanges.pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n        document.getElementById(this.inputId).blur();\n        this.optionSelect()\n    }\n    removeChip(index: number){\n        this.chipsList.splice(index,1);\n        this.optionSelect();\n    }\n\n}\n\nexport interface ValueInformation{\n    id: string;\n    name:string;\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { FilterComponent } from '../filter.component';\nimport { FiltersService } from '../filters.service';\nimport { FilterContainerService } from '../filter-container.service';\nimport { TermNode, Term } from '../../entities/public-api';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material';\nimport { of, Observable } from 'rxjs';\nimport { SelectionModel, CollectionViewer } from '@angular/cdk/collections';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\n\nexport interface FlatTreeNodeFilter {\n  name: string;\n  level: number;\n  expandable: boolean;\n  term: Term;\n}\ninterface TreeFilterData {\n  selectOptions: TermNode[];\n  type: string;\n  placeholder: string;\n  text: string;\n  field: string;\n  index: number;\n  value: any;\n  idVocab: number;\n}\n\n@Component({\n  selector: 'toco-tree-filter',\n  templateUrl: './tree-filter.component.html',\n  styleUrls: ['./tree-filter.component.scss']\n})\nexport class TreeFilterComponent implements OnInit, FilterComponent {\n  @Input() data: TreeFilterData;\n\n  chipsList: [];\n\n  treeControl: FlatTreeControl<FlatTreeNodeFilter>;\n  treeFlattener: MatTreeFlattener<TermNode, FlatTreeNodeFilter>;\n  dataSource: MatTreeFlatDataSource<TermNode, FlatTreeNodeFilter>;\n  checklistSelection = new SelectionModel<FlatTreeNodeFilter>(true /* multiple */);\n\n  myControl = new FormControl();\n\n  inputId: string;\n\n  constructor(\n    private filterService: FiltersService,\n    private filterContainerService: FilterContainerService) {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren);\n\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  }\n\n  ngOnInit() {\n    this.data.value = '';\n    this.dataSource.data = this.data.selectOptions;\n    this.myControl.valueChanges.subscribe(\n      (value: any) => {\n        this._filter(value);\n      },\n      (error: any) => { },\n      () => {\n      }\n    );\n    this.inputId = this.data.placeholder.trim().toLowerCase();\n  }\n\n  private _filter(value: string): void {\n    const filterValue = value.toLowerCase();\n    console.log(filterValue);\n\n    const newData = this.data.selectOptions.filter(node => this._include_node(filterValue, node));\n\n    this.dataSource.data = newData;\n    this._fix_selection();\n  }\n  /** return true if any children is include, false otherwise */\n  private _include_node(filter: string, node: TermNode): boolean {\n    if (node.term.identifier.toLowerCase().includes(filter)) {\n      return true;\n    } else if (node.children) {\n      for (const child of node.children) {\n        if (this._include_node(filter, child)) {\n          return true;\n        }\n      }\n    } else {\n      return false;\n    }\n    return false;\n  }\n\n  private _fix_selection() {\n    for (const node of this.treeControl.dataNodes) {\n      console.log(node);\n    }\n\n    // if (this.checklistSelection.selected) {\n    //   const old = this.checklistSelection.selected.find(\n    //     (value: FlatTreeNode, index: number, obj: FlatTreeNode[]) => value.term.id === node.term.id\n    //   );\n    //   if (old !== undefined) {\n    //     this.checklistSelection.deselect(old);\n    //     this.checklistSelection.select(result);\n    //   }\n    // }\n  }\n  remove_component() {\n    this.filterService.deleteParameter(this.data.field);\n    this.filterContainerService.filterDeleted(this.data.index);\n\n  }\n  onChange() {\n    this.filterService.changeFilter(this.data.field, this.data.value);\n  }\n\n  emitSelection() {\n    console.log(this.checklistSelection.selected);\n    var valueEmiter = 'OR';\n    this.checklistSelection.selected.forEach(node => {\n      valueEmiter = valueEmiter + ',' + node.term.id;\n    });\n    this.filterService.changeAutocompleteFilter(this.data.idVocab.toString(10), valueEmiter);\n  }\n\n\n  /** Transform the data to something the tree can read. */\n  transformer(node: TermNode, level: number) {\n    const result = {\n      name: node.term.identifier,\n      level: level,\n      expandable: (node.children.length > 0),\n      term: node.term,\n    };\n    return result;\n  }\n\n  /** Get the level of the node */\n  getLevel(node: FlatTreeNodeFilter) {\n    return node.level;\n  }\n\n  /** Get whether the node is expanded or not. */\n  isExpandable(node: FlatTreeNodeFilter) {\n    return node.expandable;\n  }\n\n  /** Get whether the node has children or not. */\n  hasChild(index: number, node: FlatTreeNodeFilter) {\n    return node.expandable;\n  }\n\n  /** Get the children for the node. */\n  getChildren(node: TermNode) {\n    return of(node.children);\n  }\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: FlatTreeNodeFilter): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: FlatTreeNodeFilter): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Select/deselect all the descendants node */\n  itemSelectionToggle(node: FlatTreeNodeFilter): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    this.checkAllParentsSelection(node);\n    this.emitSelection();\n\n  }\n\n  /** Check all the parents to see if they changed */\n  leafItemSelectionToggle(node: FlatTreeNodeFilter): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n    this.emitSelection();\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: FlatTreeNodeFilter): void {\n    let parent: FlatTreeNodeFilter | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: FlatTreeNodeFilter): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: FlatTreeNodeFilter): FlatTreeNodeFilter | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n  removeChip(i){\n    console.log(i);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit, ComponentFactoryResolver, ViewChild, Output, EventEmitter } from '@angular/core';\n\nimport { FilterComponent } from '../filter.component';\nimport { FilterItem } from '../filter-item';\nimport { FilterDirective } from '../filter.directive';\nimport { TitleFilterComponent } from '../title-filter/title-filter.component';\nimport { BooleanFilterComponent } from '../boolean-filter/boolean-filter.component';\nimport { SelectFilterOldComponent } from '../select-filter/select-filter.component';\nimport { SelectAutocompleteFilterComponent } from '../select-autocomplete-filter/select-autocomplete-filter.component';\nimport { FilterContainerService } from '../filter-container.service';\nimport { TreeFilterComponent } from '../tree-filter/tree-filter.component';\n\n@Component({\n  selector: 'toco-filter-container',\n  templateUrl: './filter-container.component.html',\n  styleUrls: ['./filter-container.component.scss']\n})\nexport class FilterContainerComponent implements OnInit {\n\n  // current_filters: Array<FilterItem>;\n  filters_data;\n\n  @Output() filter_url: EventEmitter<string> = new EventEmitter();\n\n  @ViewChild(FilterDirective, { static: true }) adHost: FilterDirective;\n\n  constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n    protected childrenService: FilterContainerService) { }\n\n  ngOnInit() {\n    this.filters_data = [];\n    this.childrenService.emitter.subscribe(filterIndex => {\n      this.deleteFilter(filterIndex)\n    });\n\n  }\n\n  addFilter(index) {\n    let data = this.filters_data[index];\n\n    let viewContainerRef = this.adHost.viewContainerRef;\n    data.pos = viewContainerRef.length\n\n    let f = this.newFilter(data);\n    // this.current_filters.push(f);\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(f.component);\n\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<FilterComponent>componentRef.instance).data = f.data;\n    //this.delete_item_of_filters(pos);\n\n    this.filters_data[index].is_enabled = false\n  }\n\n  newFilter(data_filter): FilterItem {\n    data_filter.viewContainerRef = this.adHost.viewContainerRef;\n    let f = null;\n    switch (data_filter.type) {\n      case 'select': { f = new FilterItem(SelectFilterOldComponent, data_filter); break; }\n      case 'boolean': { f = new FilterItem(BooleanFilterComponent, data_filter); break; }\n      case 'select-autocomplete': { f = new FilterItem(SelectAutocompleteFilterComponent, data_filter); break; }\n      case 'tree': { f = new FilterItem(TreeFilterComponent, data_filter); break; }\n      default: f = new FilterItem(TitleFilterComponent, data_filter);\n    }\n    return f;\n  }\n\n  deleteFilter(index) {\n    let last_pos = this.filters_data[index].pos\n\n    this.adHost.viewContainerRef.remove(this.filters_data[index].pos);\n    this.filters_data[index].pos = -1\n    this.filters_data[index].is_enabled = true\n\n    for (let i = 0; i < this.filters_data.length; i++) {\n      if (!this.filters_data[i].is_enabled && this.filters_data[i].pos > last_pos) {\n        this.filters_data[i].pos = this.filters_data[i].pos - 1\n      }\n\n    }\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BooleanFilterComponent } from './boolean-filter/boolean-filter.component';\nimport { FilterContainerComponent } from './filter-container/filter-container.component';\nimport { SelectAutocompleteFilterComponent } from './select-autocomplete-filter/select-autocomplete-filter.component';\nimport { SelectFilterOldComponent } from './select-filter/select-filter.component';\nimport { TitleFilterComponent } from './title-filter/title-filter.component';\nimport { FilterContainerService } from './filter-container.service';\nimport { FiltersService } from './filters.service';\nimport { FilterDirective } from './filter.directive';\nimport { TreeFilterComponent } from './tree-filter/tree-filter.component';\n\n@NgModule({\n    declarations: [\n        BooleanFilterComponent,\n        FilterContainerComponent,\n        SelectAutocompleteFilterComponent,\n        SelectFilterOldComponent,\n        TitleFilterComponent,\n        FilterDirective,\n        TreeFilterComponent\n    ],\n\n    entryComponents:[\n        BooleanFilterComponent,\n        SelectAutocompleteFilterComponent,\n        SelectFilterOldComponent,\n        TitleFilterComponent,\n        TreeFilterComponent\n    ],\n\n    imports: [\n        SharedModule,\n        // InfiniteScrollModule,\n        ReactiveFormsModule\n    ],\n\n    exports: [\n        BooleanFilterComponent,\n        FilterContainerComponent,\n        SelectAutocompleteFilterComponent,\n        SelectFilterOldComponent,\n        TitleFilterComponent,\n        FilterDirective,\n        TreeFilterComponent\n    ],\n\n    providers: [\n        FiltersService,\n        FilterContainerService\n    ]\n})\nexport class FiltersModule\n{ }\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nexport interface FilterComponent\n{\n    data: any;\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Input, Type } from '@angular/core';\nimport { FormGroup, FormArray, AbstractControl, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Params } from '../core/utils/helpers';\nimport { IconService } from '../core/services/icon.service';\n\nimport { ContainerControl } from './container/container.control';\n\n/**\n * Defines a form section that represents the `FormGroup` or `FormArray` class. \n */\nexport type FormSection = FormGroup | FormArray;\n\n/**\n * A collection of key/value elements, where the key is the validator name and the value is the value \n * that the validator needs to check. \n */\n export type ValidatorArguments = Params<any>;\n\n/**\n * An enum that describes how inline contents of a block are horizontally aligned if the contents \n * do not completely fill the line box. \n */\nexport enum TextAlign\n{\n    /**\n     * The inline contents are aligned to the left edge of the line box. In vertical text, \n     * `left` aligns to the edge of the line box that would be the start edge for left-to-right text. \n     */\n    left = 'left',\n\n    /**\n     * The inline contents are centered within the line box. \n     */\n    center = 'center',\n\n    /**\n     * The inline contents are aligned to the right edge of the line box. In vertical text, \n     * `right` aligns to the edge of the line box that would be the end edge for left-to-right text. \n     */\n    right = 'right',\n\n    /**\n     * The text is justified. \n     */\n    justify = 'justify'\n}\n\n/**\n * An enum that represents the content position of an element inside of a `FormFieldControl`. \n */\nexport enum ContentPosition\n{\n    /**\n     * Adding the `prefix` option to an element will designate it as the prefix. \n     */\n    prefix = 'matPrefix',\n\n    /**\n     * Adding the `suffix` option to an element will designate it as the suffix. \n     */\n    suffix = 'matSuffix',\n\n    /**\n     * Adding the `none` option to an element will not show it. \n     */\n    none = 'none'\n}\n\n/**\n * An enum that represents the icon source type. \n */\nexport enum IconSource\n{\n    /**\n     * The icon is obtained from an internal source. In this case, it uses an icon that was copied to \n     * the 'assets' folder of the project, and it was registered using the `IconService.registerIcons` method. \n     */\n    internal = 'internal',\n\n    /**\n     * The icon is obtained from an external source. In this case, \n     * it uses a 'Material Icon' from 'https://fonts.googleapis.com/icon?family=Material+Icons'. \n     */\n    external = 'external'\n}\n\n/**\n * Data structure for holding an icon. \n */\nexport class IconValue\n{\n    /**\n     * Returns the icon source type. \n     * By default, its value is `IconSource.internal`. \n     */\n    public source: IconSource;\n\n    /**\n     * Returns the icon position type. \n     * By default, its value is `ContentPosition.prefix`. \n     */\n    public position: ContentPosition;\n\n    /**\n     * Returns the icon name. \n     * By default, its value is `IconService.defaultIconName`. \n     */\n    public name: string;\n\n    /**\n     * Creates a new instance of the `IconValue` class. \n     * @param s The icon source type. By default, its value is `IconSource.internal`. \n     * @param p The icon position type. By default, its value is `ContentPosition.prefix`. \n     * @param n The icon name. By default, its value is `IconService.defaultIconName`. \n     */\n    public constructor(\n        s: IconSource = IconSource.internal,\n        p: ContentPosition = ContentPosition.prefix,\n        n: string = IconService.defaultIconName)\n\t{\n        this.source = s;\n        this.position = p;\n        this.name = n;\n\n        this.setDefaultValueIfUndefined();\n    }\n\n    /**\n     * Sets the default value for each undefined value. \n     */\n    public setDefaultValueIfUndefined(): void\n    {\n        if (this.source == undefined) this.source = IconSource.internal;\n        if (this.position == undefined) this.position = ContentPosition.prefix;\n        if (this.name == undefined) this.name = IconService.defaultIconName;\n    }\n\n    /**\n     * Sets the default value for each undefined value, but the icon position is always set to the specified value. \n     * @param iconPosition The icon position to set. \n     */\n    public setDefaultValueIfUndefined_setPosition(iconPosition: ContentPosition): void\n    {\n        if (this.source == undefined) this.source = IconSource.internal;\n        this.position = iconPosition;\n        if (this.name == undefined) this.name = IconService.defaultIconName;\n    }\n}\n\n/**\n * An enum that represents the hint position of a `HintValue`. \n */\nexport enum HintPosition\n{\n    /**\n     * Adding the `start` option to a `HintValue` will designate it as start-aligned. \n     */\n    start = 'start',\n\n    /**\n     * Adding the `end` option to a `HintValue` will designate it as end-aligned. \n     */\n    end = 'end',\n\n    /**\n     * Adding the `none` option to a `HintValue` will not show it. \n     */\n    none = 'none'\n}\n\n/**\n * Data structure for holding a hint. \n * A hint label is additional descriptive text that appears below the control's underline. \n */\nexport class HintValue\n{\n    /**\n     * Returns the hint position type. \n     * By default, its value is `HintPosition.none`. \n     */\n    public position: HintPosition;\n\n    /**\n     * Returns the hint label. \n     * By default, its value is `''`. \n     */\n    public label: string;\n\n    /**\n     * Creates a new instance of the `HintValue` class. \n     * @param p The hint position type. By default, its value is `HintPosition.none`. \n     * @param l The hint label. By default, its value is `''`. \n     */\n    public constructor(\n        p: HintPosition = HintPosition.none,\n        l: string = '')\n\t{\n        this.position = p;\n        this.label = l;\n\n        this.setDefaultValueIfUndefined();\n    }\n\n    /**\n     * Sets the default value for each undefined value. \n     */\n    public setDefaultValueIfUndefined(): void\n    {\n        if (this.position == undefined) this.position = HintPosition.none;\n        if (this.label == undefined) this.label = '';\n    }\n\n    /**\n     * Sets the default value for each undefined value, but the hint position is always set to the specified value. \n     * @param hintPosition The hint position to set. \n     */\n    public setDefaultValueIfUndefined_setPosition(hintPosition: HintPosition): void\n    {\n        this.position = hintPosition;\n        if (this.label == undefined) this.label = '';\n    }\n}\n\n/**\n * This enum is deprecated. \n * Represents a form field type. \n */\nexport enum FormFieldType\n{\n    /** A button control. */\n    action_button = 'action_button',\n\n\n\n    /** A container control that is showed as a panel. */\n    container_panel = 'container_panel',\n\n    /** A container control that is showed very simple. */\n    container_simple = 'container_simple',\n\n\n\n    /** A container control that allows the writing of a name of something in different language. */\n    container_label_diff_lang = 'container_label_diff_lang',\n\n\n\n    /** A text control. */\n    text = 'text',\n\n    /** A textarea control. */\n    textarea = 'textarea',\n\n    /** A datapicker control. */\n    datepicker = 'datepicker',\n\n    /** A checkbox control. */\n    checkbox = 'checkbox',\n\n    /** A url control. */\n    url = 'url',\n\n    /** An email control. */\n    email = 'email',\n\n    /** An identifier control. */\n    identifier = 'identifier',\n\n    /** An issn control. */\n    issn = 'issn',\n\n    /** A rnps control. */\n    rnps = 'rnps',\n\n    /** A vocabulary control. */\n    vocabulary = 'vocabulary',\n\n    vocabulary_tree = 'toco-vocabulary-tree',\n\n    /** A term parent control. */\n    term_parent = 'term_parent',\n\n    /** A select control. */\n    select = 'select',\n\n    /** A select control. */\n    select_expr = 'select_expr',\n\n    /** A select with a filter control. */\n    select_filter = 'select_filter',\n\n    /** A select with a filter control. */\n    select_tree = 'select_tree'\n}\n\n/**\n * A base interface that represents the content of a `FormFieldControl`. \n */\nexport interface FormFieldContent\n{\n    /**\n     * Returns the parent `ContainerControl` of this control. \n     * It is always set internally. \n     * By default, its value is `undefined`. \n     */\n    parentContainerControl?: ContainerControl;\n\n\n\n    /**\n     * Returns the parent `FormSection` that represents the parent `FormGroup` or `FormArray` of this control. \n     * It is always set internally. \n     * By default, its value is `undefined`. \n     */\n    parentFormSection?: FormSection;\n\n\n\n    /**\n     * Returns the control's minimum width. \n     * The minimum width of the content area, padding area or border area (depending on `box-sizing`) \n     * of certain boxes. Allows authors to constrain content width to a centain range. \n     * By default, its value is `'15em'`. \n     */\n    minWidth?: string;\n\n    /**\n     * Returns the control's width. \n     * The width of the content area, padding area or border area (depending on `box-sizing`) of certain boxes. \n     * By default, its value is `minWidth`. \n     */\n    width?: string;\n\n\n\n    /**\n     * Returns the control's label. \n     * See the `ContainerContent` for the particular interpretation of this field. \n     * See the `ActionContent` for the particular interpretation of this field. \n     * By default, its value is `''`. Each control sets its own label. \n     */\n    label?: string;\n\n    /**\n     * Returns the control's placeholder. \n     * By default, its value is `''`. Each control sets its own placeholder. \n     */\n    placeholder?: string;\n\n\n\n    /**\n     * Returns true if the control is required; otherwise, false. \n     * See the `ContainerContent` for the particular interpretation of this field. \n     * By default, its value is `false`. \n     */\n    required?: boolean;\n\n    /**\n     * Returns the control's text align. \n     * By default, its value is `TextAlign.left`. \n     */\n    textAlign?: TextAlign;\n\n    /**\n     * Returns the control's aria-label. \n     * Defines a string value that labels the current element. \n     * By default, its value is `'Text Input'`. Each control sets its own aria-label. \n     */\n    ariaLabel?: string;\n\n    /**\n     * The control's value. \n     * By default, its value is `undefined`. \n     */\n    value?: any;\n\n\n\n    /**\n     * This `type` field is deprecated, you must use the `controlType` field. \n     * Returns the control's type that is used to create the control. \n     * Implementation notes: \n     *  - It must be specified; otherwise, an exception is thrown. \n     */\n    type?: FormFieldType;\n\n    /**\n     * Returns the control's type that is used to create the control. \n     * Implementation notes: \n     *  - It must be specified; otherwise, an exception is thrown. \n     */\n    controlType?: Type<any>;\n\n\t/**\n\t * Returns the control's name that is used to save the control's value as a name/value pair. \n     * Implementation notes: \n     *  - It can be used with a JSON string. \n     *  - It must be specified; otherwise, an exception is thrown. \n\t */\n    name?: string;\n\n    /**\n     * The control's extra content. For any other content needed by an specific `FormFieldControl`. \n     * By default, its value is `undefined`. \n     */\n    extraContent?: any;\n}\n\n/**\n * Returns a new object that represents the clone of the specified `FormControl` target. \n * @param target The `FormControl` object to clone. \n */\nexport function cloneFormControl(target: FormControl): FormControl\n{\n    return new FormControl(target.value, target.validator, target.asyncValidator);\n}\n\n/**\n * Returns a new object that represents the clone of the specified `FormSection` target. \n * @param target The `FormSection` object to clone. \n */\nexport function cloneFormSection(target: FormSection): FormSection\n{\n    if (target instanceof FormGroup)\n    {\n        /* Creates an empty `FormGroup` with its validators. */\n        let result: FormGroup = new FormGroup({ }, target.validator, target.asyncValidator);\n\n        /* Adds the controls to `FormGroup`. */\n        for(let ctr in target.controls)\n        {\n            if((target.controls[ctr]) instanceof FormControl) result.addControl(ctr, cloneFormControl((target.controls[ctr]) as FormControl));\n            else result.addControl(ctr, cloneFormSection((target.controls[ctr]) as FormSection));\n        }\n\n        return result;\n    }\n    else\n    {\n        /* Creates an empty `FormArray` with its validators. */\n        let result: FormArray = new FormArray([ ], target.validator, target.asyncValidator);\n\n        /* Adds the controls to the `FormArray`. */\n        for(let ctr of target.controls)\n        {\n            if(ctr instanceof FormControl) result.push(cloneFormControl(ctr));\n            else result.push(cloneFormSection(ctr as FormSection));\n        }\n\n        return result;\n    }\n}\n\n/**\n * Represents the base abstract class for a control that is treated as a form field. \n */\nexport abstract class FormFieldControl\n{\n    /**\n     * Represents the `ContentPosition` enum for internal use. \n     */\n    public readonly contentPosition: typeof ContentPosition;\n\n    /**\n     * Represents the `IconSource` enum for internal use. \n     */\n    public readonly iconSource: typeof IconSource;\n\n    /**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n    public content: FormFieldContent;\n\n    /**\n     * Returns the language currently used. \n     * This is a static field. \n     */\n    protected static currentLang: string = '';\n\n    /**\n     * Returns true if the translation is built by the control; otherwise, false. \n     * It is used to select the way the translation is built for the control. \n     * By default, its value is `false`. \n     * As an example of usage for this field, the `InputNumberComponent` class implements the logic when this value is `true`. \n     */\n    public isTranslationBuiltByControl: boolean;\n\n    /**\n     * Constructs a new instance of this class. \n     */\n    public constructor()\n    {\n        this.contentPosition = ContentPosition;\n        this.iconSource = IconSource;\n\n        /* It must be initialize. */\n        this.content = undefined;\n\n        this.isTranslationBuiltByControl = false;\n    }\n\n    /**\n     * Sets the new language. \n     * @param transServ The `TranslateService` instance injected. \n     */\n    protected setNewLanguage(transServ: TranslateService): void\n    {\n        /* The `FormFieldControl.currentLang != transServ.currentLang` test is NOT necessary here because it is done in the non-abstract child classes. */\n\n        FormFieldControl.currentLang = transServ.currentLang;\n    }\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     * @param placeholder The default placeholder to use. It is used if the `content.placeholder` is not specified. \n     */\n    protected init(label: string, placeholder: string = ''): void\n    {\n        /* Sets the default values. */\n\n        if (this.content == undefined)\n        {\n            throw new Error(`For the '${ FormFieldControl.name }' control, the 'content' value can not be undefined.`);\n        }\n\n        if (this.content.name == undefined)\n        {\n            throw new Error(`For the '${ FormFieldControl.name }' control, the 'content.name' value can not be undefined.`);\n        }\n\n        if (this.content.controlType == undefined)\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.controlType' value can not be undefined.`);\n        }\n\n        if (label == undefined)\n        {\n            if (this.content.label == undefined)\n            {\n                throw new Error(`For the '${ this.content.name }' control, the 'content.label' value can not be undefined. \\n\n                    You can specify: \\n\n                    - A default label value when overwriting the 'init' method in the component that represents the control. \\n\n                    - A label value when defining the content object for the control.`);\n            }\n\n            label = this.content.label;\n        }\n        else\n        {\n            if (this.content.label)\n            {\n                label = this.content.label;\n            }\n        }\n\n        /************************** `mat-form-field` properties. **************************/\n        if (this.content.minWidth == undefined) this.content.minWidth = '15em';\n        if (this.content.width == undefined) this.content.width = this.content.minWidth;\n\n        /**************************** `mat-label` properties. *****************************/\n        if (this.content.label == undefined) this.content.label = label;\n        if (this.content.placeholder == undefined) this.content.placeholder = placeholder;\n\n        /************************** Internal control properties. **************************/\n        if (this.content.textAlign == undefined) this.content.textAlign = TextAlign.left;\n        if (this.content.ariaLabel == undefined) this.content.ariaLabel = label;\n        if (this.content.value != undefined)  /* It does not set the default value here (does not call `getDefaultValue` method here) because in this way it is more consistent. */\n        {\n            /* It also checks if the specified `content.value` is correct. */\n            this.initValue();\n        }\n\n        /******************************* Other properties. ********************************/\n    }\n\n\t/**\n\t * Initializes the control's value. It uses the `content.value` and it is already different of `undefined`. \n     * It also checks if the specified `content.value` is correct. For internal use only. \n\t */\n    protected abstract initValue(): void;\n\n    /**\n     * Returns this instance. \n     */\n    public abstract get getInstance(): FormFieldControl;\n\n    /**\n     * Returns the parent `ContainerControl` of this control. \n     * It is always set internally. \n     */\n    public get parentContainerControl(): ContainerControl\n    {\n        return this.content.parentContainerControl;\n    }\n\n\t/**\n\t * Adds the specified `control`/`internalControl` as a child \n     * to the `content.containerControlChildren`/`content.parentFormSection` respectively. \n     * @param control Form control to be added (descendant from `FormFieldControl`). \n     * @param internalControl Internal form control to be added (`FormControl`, `FormGroup`, or `FormArray`). \n\t */\n\tprotected addAsChildControl(control: any, internalControl: AbstractControl): void\n\t{\n        /* Adds the specified `control` as a child to the `content.containerControlChildren`. */\n\n        this.content.parentContainerControl.content.containerControlChildren.push(control);\n\n        /* Adds the specified `internalControl` as a child to the `content.parentFormSection`. */\n\n        if(this.content.parentContainerControl.isFormArray)  /* `content.parentFormSection` is an instance of `FormArray`. */\n        {\n            /* The `internalControl`'s name is already correct, that is, \n            `content.name` equals the `content.parentFormSection`'s last position \n            (because the `internalControl` has a `FormArray` as its parent). */\n\n            (this.content.parentFormSection as FormArray).push(internalControl);\n        }\n        else  /* `content.parentFormSection` is an instance of `FormGroup`. */\n        {\n            (this.content.parentFormSection as FormGroup).addControl(this.content.name, internalControl);\n        }\n\t}\n\n    /**\n     * Returns true if the specified `IconValue` has the specified `ContentPosition` value; otherwise, false. \n     * @param icon The `IconValue` to check. \n     * @param contentPosition The `ContentPosition` value to check. \n     */\n    public iconPositionState(icon: IconValue, contentPosition: ContentPosition): boolean\n    {\n        return (icon.position == contentPosition);\n    }\n\n    /**\n     * Returns true if the specified `IconValue` has the specified `IconSource` value; otherwise, false. \n     * @param icon The `IconValue` to check. \n     * @param iconSource The `IconSource` value to check. \n     */\n    public iconSourceState(icon: IconValue, iconSource: IconSource): boolean\n    {\n        return (icon.source == iconSource);\n    }\n}\n","\nimport { Input } from '@angular/core';\n\nimport { IconValue, HintValue, FormFieldContent, FormFieldControl, ContentPosition, HintPosition } from '../form-field.control';\n\n/**\n * An enum that represents the operation action. \n */\nexport enum OperationAction\n{\n    back = 'back',\n    cancel = 'cancel',\n    reset = 'reset',\n    delete = 'delete',\n    submit = 'submit'\n}\n\n/**\n * Returns true if the control is disabled; otherwise, false. \n * This function returns false by definition, that is, the control is enabled. \n * @param sender Control that wants to know its disabled state. \n */\nexport function isDisabledDefault(sender: any): boolean\n{\n    /* This function returns false by definition, that is, the control is enabled. */\n    return false;\n}\n\n/**\n * This function does nothing by definition. \n * @param sender Control that was clicked. \n */\nexport function clickDefault(sender: any): void\n{\n    /* This function does nothing by definition. */\n}\n\n/**\n * A base interface that represents the content of an `ActionControl`. \n */\nexport interface ActionContent extends FormFieldContent\n{\n    /**\n     * Returns the control's icon. \n     * By default, its value is `undefined`. \n     */\n    icon?: IconValue;\n\n\t/**\n\t * Returns the control's tooltip. \n\t * By default, its value is `undefined`. \n\t */\n    tooltip?: HintValue;\n\n    /**\n     * Returns the function that is executed for knowing if the control is or is not disabled. \n     * By default, its value is `isDisabledDefault`. \n     */\n    isDisabled?: (sender: any) => boolean;\n\n    /**\n     * Returns the function that is executed when the user clicks the control. \n     * By default, its value is `clickDefault`. \n     */\n    click?: (sender: any) => void;\n}\n\n/**\n * Represents the base abstract class for a control that executes actions. \n */\nexport abstract class ActionControl extends FormFieldControl\n{\n    /**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n    public content: ActionContent;\n\n    /**\n     * Constructs a new instance of this class. \n     */\n    public constructor()\n    {\n        super();\n    }\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     * @param placeholder It is NOT used here. Fix that. \n     * @param alwaysHint If it is true then there is always a hint start-aligned. \n     */\n    protected init(label: string, placeholder: string = '', alwaysHint: boolean = true): void\n    {\n        /* Sets the default values. */\n\n        super.init(label, placeholder);\n\n        /***************************** `mat-icon` properties. *****************************/\n        if (this.content.icon != undefined) this.content.icon.setDefaultValueIfUndefined_setPosition(ContentPosition.prefix);\n\n        /************************** `mat-form-field` properties. **************************/\n        // if (this.content.appearance == undefined) this.content.appearance = TextInputAppearance.standard;\n\n        /**************************** `matTooltip` properties. ****************************/\n        if (alwaysHint && (this.content.tooltip == undefined))\n        {\n            this.content.tooltip = new HintValue(HintPosition.start, this.content.label);\n        }\n\n        if (this.content.isDisabled == undefined) this.content.isDisabled = isDisabledDefault;\n        if (this.content.click == undefined) this.content.click = clickDefault;\n    }\n\n\t/**\n\t * Initializes the control's value. It uses the `content.value` and it is already different of `undefined`. \n     * It also checks if the specified `content.value` is correct. For internal use only. \n\t */\n\tprotected initValue(): void\n\t{\n        /* It does not need to do something because the child controls are already initialized. */\n\n        // /* In this way, checks if the specified `content.value` is correct. */\n        // this.content.formControl.setValue(this.content.value);\n\n        // /* Marks the control as `touched`. */\n        // this.content.formControl.markAsTouched({\n        //     onlySelf: true\n        // });\n    }\n\n    /**\n     * Returns this instance. \n     */\n    public get getInstance(): ActionControl\n    {\n        return this;\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\nimport { ActionControl } from '../action.control';\n\n/**\n * Represents a control that executes actions. \n */\n@Component({\n\tselector: 'action-button',\n\ttemplateUrl: './button-action.component.html',\n\tstyleUrls: ['./button-action.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class ActionButtonComponent extends ActionControl implements OnInit\n{\n    public constructor()\n    {\n        super();\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n        this.init('', '', true);\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { FormFieldType } from '../form-field.control';\n\n/**\n * This component represents a components' factory. \n * This component is deprecated. \n */\n@Component({\n    selector: 'component-factory-depr',\n    templateUrl: './component-factory-depr.component.html',\n    styleUrls: ['./component-factory-depr.component.scss']\n})\nexport class ComponentFactory_Depr implements OnInit\n{\n    /**\n     * Represents the `FormFieldType` enum for internal use. \n     */\n    public readonly formFieldType: typeof FormFieldType;\n\n    /**\n     * Input field that represents an array of types which types inherit from `FormFieldContent` interface. \n     * This array contains the content of the components that the factory is going to create. \n     */\n    @Input()\n    public componentsContent: any[];\n\n    public constructor()\n    {\n        this.formFieldType = FormFieldType;\n\n        this.componentsContent = [];\n    }\n\n    public ngOnInit(): void\n    {\n        console.log('ComponentFactory_Depr componentsContent: ', this.componentsContent);\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Input, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\nimport { Params } from '../../core/utils/helpers';\nimport { GetViewContainerDirective } from '../../core/utils/get-view-container.directive';\n\nimport { FormSection, FormFieldContent, FormFieldControl, cloneFormControl, cloneFormSection } from '../form-field.control';\n\n/**\n * A base interface that represents the content of a `ContainerControl`. \n */\nexport interface ContainerContent extends FormFieldContent\n{\n    /**\n     * Returns an array of controls that represents the `ContainerControl`'s child controls that are \n     * stored in the `content.formSection`; that is, `content.containerControlChildren` and `content.formSection` \n     * have the same length. \n     * It is always set internally. \n     * By default, its value is `[]`. \n     */\n    containerControlChildren?: any[];\n\n\n\n\t/**\n\t * Returns the `FormSection` that tracks the value and validity state of the internal \n     * child controls that contains this control. \n     * Implementation notes: \n     *  - Represents the `FormGroup` or `FormArray` that contains the child controls. \n     *  - The `content.containerControlChildren` and `content.formSection` have the same length. \n     *  - It must be specified; otherwise, an exception is thrown. \n\t */\n    formSection?: FormSection;\n\n    /**\n     * Returns an array of contents that represents the `ContainerControl`'s child controls that are \n     * stored in the `ViewContainer`; that is, `content.formSectionContent` and container's `ViewContainer` \n     * have the same length. \n     * Implementation notes: \n     *  - It must be specified, and must have at least one element; otherwise, an exception is thrown. \n     *  - If the `content.formSection` field represents a `FormArray`, then the `name` field \n     * of all elements in the `content.formSectionContent` array represents the position \n     * in the array like string. \n     */\n    formSectionContent?: Params<any>[];\n\n\n\n    /**\n     * Returns true if the container control has a dynamic length, that is, the `content.formSection` field \n     * represents a `FormArray` and its length is not fixed; otherwise, false. \n     * This field has sense only when the `content.formSection` field represents a `FormArray`. \n     * By default, its value is `true`. \n     */\n    isDynamic?: boolean;\n\n    /**\n     * In this case, the `label?: string` field inherited from `FormFieldContent` is interpreted as: \n     * Returns the control's title. \n     * By default, its value is `''`. Each control sets its own label (title). \n     */\n\n    /**\n     * In this case, the `required?: boolean` field inherited from `FormFieldContent` is interpreted as: \n     * Returns true if the container control must have one child control at least; otherwise, false. \n     * This field has sense only when the `content.formSection` field represents a `FormArray`. \n     * By default, its value is `false`. \n     */\n}\n\n/**\n * Represents the base abstract class for a control that contains one or more controls. \n */\nexport abstract class ContainerControl extends FormFieldControl\n{\n    /**\n     * Returns a `FormGroup` by default. \n     * Its value is empty object, and does not have validators. \n     */\n    public static getFormGroupByDefault(): FormGroup\n    {\n        return new FormGroup({ }, [ ]);\n    }\n\n    /**\n     * Returns a `FormArray` by default. \n     * Its value is empty array, and does not have validators. \n     */\n    public static getFormArrayByDefault(): FormArray\n    {\n        return new FormArray([ ], [ ]);\n    }\n\n    /**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n    public content: ContainerContent;\n\n\n\n    /**\n     * Returns the helper directive to mark valid insertion point in the `ContainerControl`'s template. \n     */\n    @ViewChild(GetViewContainerDirective, { static: true })\n    protected _componentHost: GetViewContainerDirective;\n\n    /**\n     * Returns the view container of the element that will host the child components in the `ContainerControl`'s template. \n     * This field can only be assigned in the `ContainerControl` class. \n     * The `content.formSectionContent` and container's `_viewContainerRef` have the same length. \n     */\n    protected _viewContainerRef: ViewContainerRef;\n\n    /**\n     * Returns the factory for a given component type. \n     * This field can only be assigned in the `ContainerControl` class. \n     */\n    protected _componentFactoryResolver: ComponentFactoryResolver;\n\n    /**\n     * Returns the component created by a `ComponentFactory`. \n     * For only internal use by the `createChildComponent` method. \n     */\n    protected _cr: ComponentRef<any>;\n\n\n\n    /**\n     * Returns true if the container control is a `FormArray`, that is, the `content.formSection` field \n     * represents a `FormArray`; otherwise, false. \n     * By default, its value is `false`. \n     */\n    private _isFormArray: boolean;\n\n    /**\n     * If the `content.formSection` represents a `FormArray`, then this field returns \n     * a pattern content that is `content.formSectionContent` value; otherwise, returns `undefined`. \n     * It is shared among controls. \n     * It is used for adding a new element in the `content.formSectionContent`, that is, \n     * for adding a new control in the `FormArray`. \n     * By default, its value is `[]`. \n     */\n    private _formArrayPatternContent: Params<any>[];\n\n    /**\n     * If the `content.formSection` represents a `FormArray`, then this field returns \n     * a pattern value that is a copy of one value that can contain the `content.value` array, and sets all \n     * its properties/values of built-in type to `undefined`; otherwise, returns `undefined`. \n     * It is used for adding a new element in the `content.formSectionContent`, that is, \n     * for adding a new control in the `FormArray`. \n     * By default, its value is `undefined`. \n     */\n    private _formArrayPatternValue: any;\n\n    /**\n     * Returns the current `FormArray` length. \n     * This field has sense only when the `content.formSection` field represents a `FormArray`. \n     * By default, its value is `0`. \n     */\n    private _formArrayLength: number;\n\n    /**\n     * Constructs a new instance of this class. \n     */\n    public constructor()\n    {\n        super();\n\n        this._isFormArray = false;\n        this._formArrayPatternContent = [ ];\n        this._formArrayPatternValue = undefined;\n        this._formArrayLength = 0;\n    }\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     * @param placeholder It is NOT used here. Fix that. \n     */\n    protected init(label: string, placeholder: string = ''): void\n    {\n        /* Sets the default values. */\n\n        super.init(label, placeholder);\n\n        if (this.content.formSection == undefined)\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.formSection' value can not be undefined; it must be a 'FormGroup' or 'FormArray' value.`);\n        }\n\n        if ((this.content.formSectionContent == undefined) || (this.content.formSectionContent.length == 0))\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.formSectionContent' array can not be undefined, and must have at least one element.`);\n        }\n\n        this._isFormArray = this.content.formSection instanceof FormArray;\n        if (this._isFormArray)\n        {\n            if (this.content.isDynamic == undefined) this.content.isDynamic = true;  /* By default, its value is `true`. */\n            if (this.content.required == undefined) this.content.required = false;   /* By default, its value is `false`. */\n        }\n        else\n        {\n            if (this.content.isDynamic != undefined) throw new Error(`For the '${ this.content.name }' control, the 'content.isDynamic' value must not exist because the 'content.formSection' value is a 'FormGroup'.`);\n            if (this.content.required != undefined) throw new Error(`For the '${ this.content.name }' control, the 'content.required' value must not exist because the 'content.formSection' value is a 'FormGroup'.`);\n            if (this.content.value != undefined) throw new Error(`For the '${ this.content.name }' control, the 'content.value' value must not exist because the 'content.formSection' value is a 'FormGroup'.`);\n        }\n\n        this._viewContainerRef = this._componentHost.viewContainerRef;\n        this._componentFactoryResolver = this._componentHost.componentFactoryResolver;\n\n        /* Initializes the `content.containerControlChildren`. */\n        this.content.containerControlChildren = [ ];\n\n        if (this._isFormArray)\n        {\n            if (this.content.value == undefined)\n            {\n                throw new Error(`The '${ this.content.name }' control is constructed dynamically using 'FormArray'. Its 'content.value' array can not be undefined.`);\n            }\n\n            if ((this.content.value.length == 0) && (!this.content.isDynamic) && (this.content.required))\n            {\n                throw new Error(`The '${ this.content.name }' control has not sense because its 'content.value' array length is zero, and its 'content.isDynamic' value is false, and its 'content.required' value is true.`);\n            }\n\n            this.initFormSectionContentToFormArray();\n        }\n        else\n        {\n            /* Sets the parent control to its children. */\n            this.setParentToChildren();\n        }\n\n        // let temp: string = (isAbbreviation) ? this.content.label : this.content.label.toLowerCase();\n        // this.validationError_required = `The ${ temp } can not be empty.`;\n\n        /************************** `mat-form-field` properties. **************************/\n        // if (this.content.appearance == undefined) this.content.appearance = TextInputAppearance.standard;\n\n        /***************************** `mat-hint` properties. *****************************/\n        // if (alwaysHint && (this.content.startHint == undefined) && (this.content.endHint == undefined))\n        // {\n        //     this.content.startHint = new HintValue(HintPosition.start, `Write a valid ${ temp }.`);\n        // }\n        // else\n        // {\n        //     if (this.content.startHint != undefined) this.content.startHint.setDefaultValueIfUndefined_setPosition(HintPosition.start);\n        //     if (this.content.endHint != undefined) this.content.endHint.setDefaultValueIfUndefined_setPosition(HintPosition.end);\n        // }\n\n        /* Adds this control as a child to the `content.parentFormSection`. \n        It must be called at the end before calling `createChildComponents` method. */\n        if (this.content.parentFormSection != undefined)\n        {\n            this.addAsChildControl(this, this.content.formSection);\n        }\n\n        /* Creates the child components. */\n        this.createChildComponents(this.content.formSectionContent);\n    }\n\n    /**\n     * Initializes the `content.formSectionContent` array correctly depending on the `content.value`. \n     * In this case, `content.value` is an array. For each element in the `content.value`, a cloning \n     * is done to the `_formArrayPatternContent` array, and it is added in the `content.formSectionContent`; \n     * therefore one element is added in the `content.formSection` `FormArray`. \n     */\n    protected initFormSectionContentToFormArray(): void\n    {\n        /* At this point, `content.formSectionContent` has at least one element. */\n\n        /* Saves the pattern content, that is, `content.formSectionContent`. \n        It is shared among controls. */\n        this._formArrayPatternContent = this.content.formSectionContent;\n        /* The `FormArray` is empty initially. */\n        this.content.formSectionContent = [ ];\n\n        /* Saves the pattern value, that is, creates the pattern value following the `_formArrayPatternContent` structure. \n        The result value represents a copy of one value that can contain the `content.value` array, and \n        sets all its properties/values of built-in type to `undefined`. \n        It does not clone a value from the `content.value` array because the array can be empty. \n        It creates in deep until the next `FormArray`, then the next `FormArray` creates in deep until the next `FormArray`, and so on. \n        It is the first time that the `_formArrayPatternContent` is travelled, therefore the `createValueToUndefined` method does verifications. */\n        this._formArrayPatternValue = this.createValueToUndefined();\n\n        /* If the `content.required` field is true, then the container control must have one child control at least. */\n        if ((this.content.required) && (this.content.value.length == 0))\n        {\n            /* It can push the `_formArrayPatternValue` and does not push its clone because \n            both values have the same properties and there is not problem. */\n            this.content.value[0] = this._formArrayPatternValue;\n        }\n\n        /* The `FormArray` will contain one element for each element in the `content.value`. */\n        for(let val of this.content.value)\n        {\n            this._initElemFormSectionContentToFormArray(val);\n        }\n    }\n\n    /**\n     * Sets the parent control to its children. \n     */\n    protected setParentToChildren(): void\n    {\n        this.content.formSectionContent.forEach(this.setParentToChild, this);\n    }\n\n    /**\n     * Sets the parent control to one child. \n     * @param ffc The child to set the parent control. \n     */\n    protected setParentToChild(ffc: FormFieldContent): void\n    {\n        /* Sets the parent `ContainerControl` to its children. */\n        ffc.parentContainerControl = this;\n\n        /* Sets the parent `FormSection` to its children if they have got nothing. */\n        ffc.parentFormSection = this.content.formSection;\n    }\n\n    /**\n     * Returns a new value that is created following the `_formArrayPatternContent` structure. \n     * It also sets all its properties/values of built-in type to `undefined`. \n     * It creates the value smartly depending on the type of content. \n     * It creates in deep until the next `FormArray`, then the next `FormArray` creates in deep until the next `FormArray`, and so on. \n     * It is the first time that the `_formArrayPatternContent` is travelled, therefore the `createValueToUndefined` method does verifications. \n     */\n    protected createValueToUndefined(): any\n    {\n        let result: any;\n        /* The `_formArrayPatternContent` array can have one element only with the `content.formSection` field. */\n        let alreadyHasFormSection: boolean = false;\n\n        for(let content of this._formArrayPatternContent)\n        {\n            if (content.formControl)\n            {\n                if (alreadyHasFormSection) throw new Error(`For the '${ this.content.name }' control, the 'content.formSectionContent' array can have one element only with the 'content.formControl' or 'content.formSection' field.`);\n\n                alreadyHasFormSection = true;\n                result = undefined;\n            }\n            else if (content.formSection)\n            {\n                if (alreadyHasFormSection) throw new Error(`For the '${ this.content.name }' control, the 'content.formSectionContent' array can have one element only with the 'content.formControl' or 'content.formSection' field.`);\n\n                alreadyHasFormSection = true;\n                result = this._createValueToUndefined(content);\n            }\n            /* The rest of `content`s do not contain a `value` field of interest. */\n        }\n\n        if (!alreadyHasFormSection) throw new Error(`For the '${ this.content.name }' control, the 'content.formSectionContent' array must have one element only among all with the 'content.formControl' or 'content.formSection' field.`);\n        return result;\n    }\n\n    private _createValueToUndefined(target: Params<any>): any\n    {\n        if (target.formSection instanceof FormArray)\n        {\n            return [ ];\n        }\n        else\n        {\n            let result: any = { };\n\n            for(let content of target.formSectionContent)\n            {\n                if (content.formControl) result[content.name] = undefined;\n                else if (content.formSection) result[content.name] = this._createValueToUndefined(content);\n                /* The rest of `content`s do not contain a `value` field of interest. */\n            }\n\n            return result;\n        }\n    }\n\n    /**\n     * Initializes and returns a clone of the `_formArrayPatternContent` array correctly \n     * depending on the specified `value`. \n     * This clone is also added in the `content.formSectionContent` array. \n     * @param value The initial `value` field of each content representing a `FormControl`. \n     */\n    private _initElemFormSectionContentToFormArray(value: any): Params<any>[]\n    {\n        /* The content array cloned. */\n        let result: Params<any>[] = [ ];\n        let refContent: Params<any>;\n\n        for(let content of this._formArrayPatternContent)\n        {\n            /* Clones in deep until the next `FormArray`, then the next `FormArray` clones in deep until the next `FormArray`, and so on. */\n            if (content.formSection instanceof FormArray)\n            {\n                /* This `content.formSectionContent` will not be cloned because it belongs to a `FormArray` and it will be cloned when the `FormArray` is analyzed in the `ContainerControl` class. */\n                refContent = this._cloneContent(content, undefined/* It is not used in this case. */, false);\n                refContent.value = value;\n            }\n            else\n            {\n                refContent = this._cloneContent(content, value, true);\n            }\n\n            /* Sets the parent control to its child. */\n            this.setParentToChild(refContent);\n\n            /* Overwrites some properties for the content cloned. */\n            refContent.name = this._formArrayLength.toString(10);  /* The element is added in the `FormArray` after the last position. */\n            /* Overwrites some properties for the content cloned if it contains the `content.formControl` or `content.formSection` field. */\n            if ((content.formControl) || (content.formSection))\n            {\n                // refContent.label = ((refContent.label == undefined) ? (refContent.name) : (refContent.label + refContent.name));\n                // refContent.ariaLabel = refContent.label;\n            }\n\n            /* Save the content cloned. */\n            this.content.formSectionContent.push(refContent);\n            result.push(refContent);\n        }\n\n        this._formArrayLength++;\n        return result;\n    }\n\n    /**\n     * Returns a new content that represents the clone of the specified content target. \n     * It also sets the initial `value` field of each content representing a `FormControl`. \n     * It clones the content smartly depending on the type of property. \n     * It clones in deep until the next `FormArray`, then the next `FormArray` clones in deep until the next `FormArray`, and so on. \n     * @param target The content object to clone. \n     * @param value The initial `value` field of each content representing a `FormControl`. \n     * @param canClone It is true if the function can clone the `formSectionContent` field; otherwise, false. \n     */\n    private _cloneContent(target: Params<any>, value: any, canClone: boolean): any\n    {\n        /* The content cloned. */\n        let result: any = { };\n\n        for(let prop in target)\n        {\n            switch(prop)\n            {\n                /* The `formControl` property special case. */\n                case 'formControl':\n                {\n                    result[prop] = cloneFormControl(target.formControl);\n\n                    /* If this content (`result`) represents a `FormControl`, then the `value` field is initialized. */\n                    result['value'] = value;\n\n                    break;\n                }\n\n                /* The `formSection` property special case. */\n                case 'formSection':\n                {\n                    result[prop] = cloneFormSection(target.formSection);\n\n                    break;\n                }\n\n                /* The `formSectionContent` property special case. */\n                case 'formSectionContent':\n                {\n                    if (canClone)  /* Clones the `target.formSectionContent`. */\n                    {\n                        result[prop] = [ ];\n\n                        for(let content of target.formSectionContent)\n                        {\n                            if (content.formSection instanceof FormArray)\n                            {\n                                content.value = value[content.name];\n                                /* This `content.formSectionContent` will not be cloned because it belongs to a `FormArray` and it will be cloned when the `FormArray` is analyzed in the `ContainerControl` class. */\n                                result[prop].push(this._cloneContent(content, undefined/* It is not used in this case. */, false));\n                                content.value = undefined;\n                            }\n                            else\n                            {\n                                result[prop].push(this._cloneContent(content, value[content.name], canClone));\n                            }\n                        }\n                    }\n                    else  /* Takes the same `target.formSectionContent` reference because `target` is a `FormArray` and its `formSectionContent` will be taken like a pattern. */\n                    {\n                        result[prop] = target.formSectionContent;\n                    }\n\n                    break;\n                }\n\n                /* Copies the property without problem. */\n                default:\n                {\n                    result[prop] = target[prop];\n\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates the child components. \n     * @param componentsContent Components content array for creating the components. \n     */\n    protected createChildComponents(componentsContent: Params<any>[]): void\n    {\n        for (let componentContent of componentsContent)\n        {\n            /* Creates a child component. */\n            this.createChildComponent(componentContent);\n        }\n    }\n\n    /**\n     * Creates a child component. \n     * @param componentContent Component content for creating the component. \n     */\n    protected createChildComponent(componentContent: Params<any>): void\n    {\n        this._cr = this._viewContainerRef.createComponent(\n            this._componentFactoryResolver.resolveComponentFactory(componentContent.controlType)\n        );\n        (this._cr.instance as FormFieldControl).content = componentContent;\n    }\n\n\t/**\n\t * Initializes the control's value. It uses the `content.value` and it is already different of `undefined`. \n     * It also checks if the specified `content.value` is correct. For internal use only. \n\t */\n\tprotected initValue(): void\n\t{\n        /* It does not need to do something because the child controls are already initialized. */\n\n        // /* In this way, checks if the specified `content.value` is correct. */\n        // this.content.formControl.setValue(this.content.value);\n\n        // /* Marks the control as `touched`. */\n        // this.content.formControl.markAsTouched({\n        //     onlySelf: true\n        // });\n    }\n\n    /**\n     * Returns this instance. \n     */\n    public get getInstance(): ContainerControl\n    {\n        return this;\n    }\n\n    /**\n     * Returns an array of controls that represents the `ContainerControl`'s child controls. \n     * It is always set internally. \n     */\n    public get containerControlChildren(): any[]\n    {\n        return this.content.containerControlChildren;\n    }\n\n    /**\n     * If the `content.formSection` represents a `FormArray`, then this field returns \n     * a pattern content that is `content.formSectionContent[0]` value; otherwise, returns `undefined`. \n     * It is shared among controls. \n     * It is used for adding a new element in the `content.formSectionContent`, that is, \n     * for adding a new control in the `FormArray`. \n     * By default, its value is `undefined`. \n     */\n    public get formArrayPatternContent(): any\n    {\n        return this._formArrayPatternContent;\n    }\n\n    /**\n     * If the `content.formSection` represents a `FormArray`, then this field returns \n     * a pattern value that is a clone of the `content.value[0]` value, and sets all \n     * its properties/values of built-in type to `undefined`; otherwise, returns `undefined`. \n     * It is used for adding a new element in the `content.formSectionContent`. \n     * By default, its value is `undefined`. \n     */\n    public get formArrayPatternValue(): any\n    {\n        return this._formArrayPatternValue;\n    }\n\n    /**\n     * Returns true if the container control has a dynamic length, that is, the `content.formSection` field \n     * represents a `FormArray` and its length is not fixed; otherwise, false. \n     * This property has sense only when the `content.formSection` field represents a `FormArray`. \n     */\n    public get isDynamic(): boolean\n    {\n        return this.content.isDynamic;\n    }\n\n    /**\n     * Returns true if the container control is a `FormArray`, that is, the `content.formSection` field \n     * represents a `FormArray`; otherwise, false. \n     */\n    public get isFormArray(): boolean\n    {\n        return this._isFormArray;\n    }\n\n\t/**\n\t * Returns true if this container is empty; otherwise, false. \n\t */\n\tpublic get isEmpty(): boolean\n\t{\n\t\treturn (this.content.formSectionContent.length == 0);\n    }\n\n\t/**\n\t * Returns true if an element can be removed from the `content.formSection`; otherwise, false. \n     * Use along with `removeFromFormArray` and `clearFormArray` methods. \n     * The `content.formSection` must be an instance of `FormArray`. \n\t */\n\tpublic get canRemoveFromFormArray(): boolean\n\t{\n        /* The method uses the `_formArrayLength` instead of `content.formSection` because \n        the first one field is updated first and it has the answer more accurate than the second one field. */\n\n        if (this.content.required)\n        {\n            return (this._formArrayLength > 1);\n        }\n        else\n        {\n            return (this._formArrayLength != 0);\n        }\n    }\n\n    /**\n     * Adds an empty element at the end of the `content.formSectionContent`; therefore one element \n     * is added at the end of the `content.formSection` `FormArray`. \n     * The `content.formSection` must be an instance of `FormArray`. \n     */\n\tpublic addToFormArray(): void\n\t{\n        console.log('addToFormArray');\n\n        if (this._isFormArray)\n        {\n            this.createChildComponents(\n                this._initElemFormSectionContentToFormArray(this._formArrayPatternValue)\n            );\n        }\n        else\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.formSection' value must be an instance of 'FormArray'.`);\n        }\n\t}\n\n    /**\n     * Removes the element at the given `index` in the `content.formSectionContent`; therefore \n     * the element at the given `index` is removed in the `content.formSection` `FormArray`. \n     * The `content.formSection` must be an instance of `FormArray`. \n     * @param index Index in the array to remove the element. \n     */\n\tpublic removeFromFormArray(index: number): void\n\t{\n        console.log('removeFromFormArray', index);\n\n        if (this._isFormArray)\n        {\n            //TODO: la variable `formArrayPatternContentLength` podría ser un campo de la clase. \n            let formArrayPatternContentLength: number = this._formArrayPatternContent.length;\n            let i: number, j: number, k: number;\n\n            this.content.containerControlChildren.splice(index, 1);\n            this.content.formSectionContent.splice((index * formArrayPatternContentLength), formArrayPatternContentLength);\n            (this.content.formSection as FormArray).removeAt(index);\n            for (i = formArrayPatternContentLength, j = index * formArrayPatternContentLength; i != 0; i--)\n            { this._viewContainerRef.remove(j); }\n            this._formArrayLength--;\n\n            /* Updates the elements' index in the `content.formSectionContent` array from \n            the specified `index` onwards. */\n            for (k = (i = index * formArrayPatternContentLength) + formArrayPatternContentLength, j = this.content.formSectionContent.length; i < j; i++)\n            {\n                if (i == k) { index++; k += formArrayPatternContentLength; }\n                this.content.formSectionContent[i].name = index.toString(10);\n            }\n        }\n        else\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.formSection' value must be an instance of 'FormArray'.`);\n        }\n    }\n\n    /**\n     * Removes all elements in the `content.formSectionContent`; therefore \n     * all elements are removed in the `content.formSection` `FormArray`. \n     * The `content.formSection` must be an instance of `FormArray`. \n     */\n\tpublic clearFormArray(): void\n\t{\n        console.log('clearFormArray');\n\n        if (this._isFormArray)\n        {\n            this.content.containerControlChildren = [ ];\n            this.content.formSectionContent = [ ];\n            (this.content.formSection as FormArray).clear();\n            this._viewContainerRef.clear();\n            this._formArrayLength = 0;\n\n            if (this.content.required)\n            {\n                /* The `FormArray` always has one element at least. */\n                this.addToFormArray();\n            }\n        }\n        else\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.formSection' value must be an instance of 'FormArray'.`);\n        }\n    }\n}\n","\nimport { Component, OnInit, Input, OnChanges } from \"@angular/core\";\n\nimport { ContainerContent, ContainerControl } from \"../container.control\";\n\n/**\n * This interface is deprecated. \n */\nexport interface FormContainerAction {\n  doit(data: any): void;\n}\n\n/**\n * This interface is deprecated. \n * An interface that represents the content of an expansion control.\n */\nexport interface PanelContent_Depr extends ContainerContent {\n  /**\n   * Returns the panel's title.\n   */\n  title: string;\n\n  /**\n   * Returns the panel's description.\n   */\n  description: string;\n\n  /**\n   * Returns the panel's icon name.\n   */\n  iconName: string;\n\n  /**\n   * Returns the action and action labels for each panel.\n   */\n  action?: FormContainerAction;\n  actionLabel?: string;\n\n  /**\n   * Returns true is the panel is open; otherwise, false.\n   */\n  open?: boolean;\n}\n\n/**\n * This component is deprecated. \n * Represents a control that contains a list of panels and sends that information to the server.\n */\n@Component({\n  selector: \"toco-form-container\",\n  templateUrl: \"./form-container.component.html\",\n  styleUrls: [\"./form-container.component.scss\"],\n})\nexport class FormContainerComponent extends ContainerControl\n  implements OnInit, OnChanges {\n  /**\n   * Input field that contains the content of this class. The array of panels to show.\n   */\n  @Input()\n  public panelsContent: PanelContent_Depr[];\n\n  @Input()\n  public useAccordion: boolean = true;\n\n  @Input()\n  public useContainer: boolean = true;\n\n  @Input()\n  public actionButtonIsStepperNext: boolean = false;\n\n  @Input()\n  public action: FormContainerAction;\n\n  /**\n   * An string that represents the action label of the last panel.\n   */\n  @Input()\n  public actionLabel: string;\n\n  @Input()\n  public deleteValuesAfterAction: boolean = true;\n\n  /**\n   * The current expanded panel position.\n   */\n  public step: number;\n\n  public constructor() {\n    super();\n\n    /* By default, the first panel is expanded. */\n    this.step = 0;\n  }\n\n  private setFormGroupToPanels(): void {\n    this.panelsContent.forEach((panel) => {\n      panel.formSection = panel.formSection;\n    });\n  }\n\n  public ngOnInit(): void {\n    console.log(\"on INIT call\", this.panelsContent);\n\n    /* Sets the default values. */\n    if (this.panelsContent.length > 0) {\n      this.content = {\n        formSection: this.panelsContent[0].formSection,\n        name: \"FormContainerComponent\",\n        label: \"FormContainerComponent_Label\",\n        type: undefined,\n        value: \"FormContainerComponent\",\n        //            'width': '100%',\n        ariaLabel: \"FormContainerComponent\",\n        formSectionContent: this.panelsContent[0].formSectionContent,\n      };\n    }\n\n    this.init(undefined);\n\n    // if actionLabel is undefined, means that there is no actionLabel, the user must decide!!!\n    // if (this.actionLabel == undefined) this.actionLabel = 'Adicionar';\n    this.setFormGroupToPanels();\n  }\n\n  public ngOnChanges(): void {\n    console.log(\"on CHANGES call\", this.panelsContent);\n    this.ngOnInit();\n\n    // this.init(this.content.label, false, false);\n    // this.setFormGroupToPanels();\n  }\n\n  /**\n   * Sets the new expanded panel position.\n   * @param newStep The new position.\n   */\n  public setStep(newStep: number): void {\n    this.step = newStep;\n  }\n\n  /**\n   * Sets the expanded panel position to the next position.\n   */\n  public nextStep(): void {\n    this.step++;\n  }\n\n  /**\n   * Sets the expanded panel position to the previous position.\n   */\n  public prevStep(): void {\n    this.step--;\n  }\n\n  /**\n   * Sends data to the server. Collects all added information from the component.\n   * Creates a JSON object based on `form.name` and `form.value` fields.\n   */\n  public doAction(): void {\n    //TODO: poner este method in `ContainerControl`.\n\n    /* Prepares all data. */\n\n    const data = {};\n\n    this.panelsContent.forEach((panel) => {\n      panel.formSectionContent.forEach((controlContent) => {\n        data[controlContent.name] = controlContent.value;\n      });\n    });\n\n    if (this.action) {\n      this.action.doit(data);\n    }\n\n    if (this.deleteValuesAfterAction) {\n      this.panelsContent.forEach((panel) => {\n        panel.formSectionContent.forEach((controlContent) => {\n          controlContent.value = undefined;\n        });\n      });\n    }\n  }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { ContainerContent, ContainerControl } from '../container.control';\n\n/**\n * An interface that represents the content of a panel control. \n */\nexport interface PanelContent extends ContainerContent\n{\n    /**\n     * In this case, the `label?: string` field inherited from `FormFieldContent` is interpreted as: \n     * Returns the control's title. \n     * By default, its value is `''`. Each control sets its own label (title). \n     */\n\n    /**\n     * Returns the panel's description. \n     * By default, its value is `undefined`. \n     */\n    description?: string;\n\n    /**\n     * Returns the panel's icon name. \n     * By default, its value is `undefined`. \n     */\n    iconName?: string;\n}\n\n/**\n * Represents a container control that is showed as a panel. \n * Usage notes: \n *  - It can be used as: \n * <container-panel [content]=\"panelContent\"></container-panel> \n * Where `content.formSection` is created, for example, as this: \n * this.content.formSection = new FormGroup({ }, [ ]); \n */\n@Component({\n\tselector: 'container-panel',\n\ttemplateUrl: './panel-container.component.html',\n\tstyleUrls: ['./panel-container.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class ContainerPanelComponent extends ContainerControl implements OnInit\n{\n    /**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n\tpublic content: PanelContent;\n\n\tpublic constructor()\n\t{\n        super();\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t/* Sets the default values. */\n        this.init('');\n    }\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     */\n    protected init(label: string): void\n    {\n        /* Sets the default values. */\n\n        super.init(label);\n\n        /* The `content.description`, and `content.iconName` fields \n        have the `undefined` value by default. */\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\nimport { ContainerControl } from '../container.control';\n\n/**\n * Represents a container control that is showed very simple. \n * Usage notes: \n *  - It can be used as: \n * <container-simple [content]=\"simpleContent\"></container-simple> \n * Where `content.formSection` is created, for example, as this: \n * this.content.formSection = new FormGroup({ }, [ ]); \n */\n@Component({\n\tselector: 'container-simple',\n\ttemplateUrl: './simple-container.component.html',\n\tstyleUrls: ['./simple-container.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class ContainerSimpleComponent extends ContainerControl implements OnInit\n{\n\tpublic constructor()\n\t{\n        super();\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t/* Sets the default values. */\n        this.init('');\n\t}\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     */\n    protected init(label: string): void\n    {\n        /* Sets the default values. */\n\n        super.init(label);\n    }\n}\n","\nimport { Component, OnInit, OnDestroy, ViewChild, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatSort, MatPaginator, Sort, PageEvent } from '@angular/material';\nimport { Observable, Subscription, Subject, combineLatest } from 'rxjs';\nimport { startWith, switchMap, finalize, debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { SortDirection, FilterControls, FilterValues, Page, Params, BackendDataSourceFunction } from '../../../core/public-api';\n\n/**\n * A collection of CSS styles. \n */\nexport type CssStyles = Params<string>;\n\n/**\n * An enum that represents how to wrap the content of a table cell. \n */\nexport enum CellContentWrap\n{\n    /**\n     * The `break` wrap breaks the content when reaching the end of a line. \n     */\n    break,\n\n    /**\n     * The `ellipsis` wrap clips the remaining content and renders an ellipsis (\"...\") \n     * to represent the clipped content. \n     */\n    ellipsis,\n\n    /**\n     * The `responsible` wrap is the default style. It only applies the responsible styles \n     * that are defined in the table. \n     */\n    responsible\n}\n\nexport interface TableAction {\n    icon: string;\n    route: string;\n    tooltip: string;\n}\n\n/**\n * A interface that represents the content of a table control. \n * The generic parameter T always refers to the type of data that it is dealing with. \n */\nexport interface TableContent<T>\n{\n    /**\n     * Returns the array of strings that indicates the object property name of the columns. \n     * By default, its value is `[]`. \n     */\n    columnsObjectProperty?: string[];\n\n    /**\n     * Returns the array of strings that indicates the header text of the columns. \n     * By default, its value is `[]`. \n     */\n    columnsHeaderText?: string[];\n\n    /**\n     * Returns the array of strings that indicates the width of the columns. \n     * By default, its value is `[]`. \n     */\n    columnsWidth?: string[];\n\n    /**\n     * Returns the array of `CellContentWrap` that indicates how to wrap the content of the columns. \n     * By default, its value is `[]`. \n     */\n    columnContentWrap?: CellContentWrap[];\n\n    /**\n     * Returns a function that creates the list of CSS classes to apply to the table rows. \n     * In order to take effect these classes, the table CSS file must have defined these classes. \n     * By default, its value is `undefined`. \n     * @param rowData The data that is contained in the row. \n     */\n    createCssClassesForRow?: (rowData: any) => { [className: string]: boolean; };\n\n\n\n    /**\n     * Returns the property name of the data contained in `page` that is used to identify that data. \n     * By default, its value is `''`. \n     */\n    propertyNameToIdentify?: string;\n\n\n\n    /**\n     * The current filter state. \n     * By default, its value is `{}`. \n     */\n    filter?: FilterControls;\n\n    /**\n     * The current sort state. \n     * By default, its value is `{ 'active': propertyNameToIdentify, 'direction': SortDirection.asc }`. \n     */\n    sort?: Sort;\n\n    /**\n     * Returns the length of the total number of items that are being paginated. \n     * By default, its value is `0`. \n     */\n    length?: number;\n\n    /**\n     * Returns the zero-based page index of the displayed list of items. \n     * By default, its value is `0`. \n     */\n    pageIndex?: number;\n\n    /**\n     * Returns the number of items to display on a page. \n     * By default, its value is `50`. \n     */\n    pageSize?: number;\n\n    /**\n     * Returns the set of provided page size options to display to the user. \n     * By default, its value is `[10, 20, 50]`. \n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Returns true if it hides the page size selection UI from the user; otherwise, false. \n     * By default, its value is `false`. \n     */\n    hidePageSize?: boolean;\n\n    /**\n     * Returns true if it shows the first/last buttons UI to the user; otherwise, false. \n     * By default, its value is `false`. \n     */\n    showFirstLastButtons?: boolean;\n\n\n\n    /**\n     * Returns the function that is used to get the data source from backend. \n     * The generic parameter T always refers to the type of data that it is dealing with. \n     * By default, its value is `undefined`. \n     */\n    endpoint?: BackendDataSourceFunction<T>;\n\n    actions?: TableAction[];\n}\n\n/**\n * Returns a new object that represents the default `TableContent`. \n */\nexport function defaultTableContent(): TableContent<any>\n{\n    return {\n        'columnsObjectProperty': [],\n        'columnsHeaderText': [],\n        'columnsWidth': [],\n        'columnContentWrap': [],\n        'createCssClassesForRow': undefined,\n\n        'propertyNameToIdentify': '',\n\n        'filter': {},\n        'sort': {\n            'active': this._content.propertyNameToIdentify,\n            'direction': SortDirection.asc\n        },\n        'length': 0,\n        'pageIndex': 0,\n        'pageSize': 50,\n        'pageSizeOptions': [10, 20, 50],\n        'hidePageSize': false,\n        'showFirstLastButtons': false,\n\n        'endpoint': undefined\n    };\n}\n\n/**\n * @description\n * Represents a table control. \n */\n@Component({\n    selector: 'toco-table',\n    templateUrl: './table.component.html',\n    styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit, OnDestroy\n{\n    /**\n     * Returns the amount of backend subscriptions. \n     * When its value is different of 0, means the component is loading the data source. \n     * In this way, it shows/hides the loading progress control. \n     * By default, its value is `0`. \n     */\n    private _countBackendSubscriptions: number;\n\n    private _content: TableContent<any>;\n\n    /**\n     * Returns the stream that emits the page that should be rendered by the table, \n     * when there is a change in the filtering, sorting, or pagination of the data. Each object \n     * in the `data` field represents one row. This is made for someone that wants to know it. \n     */\n    private readonly _page: Subject<Page<any>>;  \n    private _pageAsObservable: Observable<Page<any>>;\n    private _dataSource: MatTableDataSource<any>;\n    /* Returns a data source with only one empty element. */\n    private static readonly _defaultDataSource: MatTableDataSource<any> = new MatTableDataSource([ { } ]);\n    private _selectedRow: number;  /* Represents the selected row. */\n\n    /**\n     * Stream that emits when a new filter is set on the data source. \n     * Because of the behavior and appearance of the component, it is necessary to use \n     * `Subject` instead of `BehaviorSubject` to represent the `_filterValuesChange`. \n     */\n    private readonly _filterValuesChange: Subject<FilterValues>;\n    /* The current filter values. */\n    private _filterValues: FilterValues;\n    /* The current subscriptions for observing the changes in the filter controls value. It has the same properties than `_filterValues` */\n    private _filterValuesSubscription: Params<Subscription>;\n\n    @ViewChild(MatSort, { static: true })\n    private _sort: MatSort;\n\n    @ViewChild(MatPaginator, { static: true })\n    private _paginator: MatPaginator;\n\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such \n     * as filtering, sorting, or pagination. \n     */\n    private _renderChangesSubscription: Subscription;\n\n    public constructor(private _router: Router, private _activatedRoute: ActivatedRoute)\n    {\n        /* By default, its value is `0`, means the component is NOT loading the data source. */\n        this._countBackendSubscriptions = 0;\n\n        this._page = new Subject<Page<any>>();\n        this._pageAsObservable = this._page.asObservable();\n\n        this._dataSource = new MatTableDataSource();\n\n        this._selectedRow = undefined;\n\n        this._filterValuesChange = new Subject<FilterValues>();\n        this._filterValues = {};\n        this._filterValuesSubscription = {};\n\n        this._renderChangesSubscription = Subscription.EMPTY;\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values only if the `_content` has not been set yet. */\n        if (this._content == undefined)\n        {\n            this.init();\n        }\n    }\n\n    public ngOnDestroy(): void\n    {\n        /* Disposes the resources held by the subscription. */\n        Object.keys(this._filterValuesSubscription).forEach((name: string) => {\n            this._filterValuesSubscription[name].unsubscribe();\n        });\n\n        /* Disposes the resources held by the subscription. */\n        this._renderChangesSubscription.unsubscribe();\n    }\n\n    /**\n     * Returns true if the data source is empty; otherwise, false. \n     */\n    public get isEmpty(): boolean\n    {\n        return (this._dataSource.data.length == 0);\n    }\n\n    /**\n     * Initializes the component. \n     */\n    protected init(): void\n    {\n        this._initContent();\n\n        this._updateChangeSubscription();\n    }\n\n    /**\n     * Initializes the `content` input property. \n     */\n    private _initContent(): void\n    {\n        /* Sets the default values. */\n\n        if (this._content == undefined) this._content = { };  /* This code line must be here. */\n\n        /**************************** `mat-cell` properties. ******************************/\n        if (this._content.columnsObjectProperty == undefined) this._content.columnsObjectProperty = [];\n        if (this._content.columnsHeaderText == undefined) this._content.columnsHeaderText = [];\n        if (this._content.columnsWidth == undefined) this._content.columnsWidth = [];\n        if (this._content.columnContentWrap == undefined) this._content.columnContentWrap = [];\n        if (this._content.createCssClassesForRow == undefined) this._content.createCssClassesForRow = this.defaultCreateCssClassesForRow.bind(this);\n\n        /**************************** `mat-row` properties. *******************************/\n        if (this._content.propertyNameToIdentify == undefined) this._content.propertyNameToIdentify = '';\n\n        /**************************** `filter` properties. ********************************/\n        if (this._content.filter == undefined) this._content.filter = {};\n\n        /***************************** `sort` properties. *********************************/\n        if (this._content.sort == undefined) this._content.sort = {\n            'active': this._content.propertyNameToIdentify,\n            'direction': SortDirection.asc\n        };\n\n        /************************* `mat-paginator` properties. ****************************/\n        if (this._content.length == undefined) this._content.length = 0;\n        if (this._content.pageIndex == undefined) this._content.pageIndex = 0;\n        if (this._content.pageSize == undefined) this._content.pageSize = 50;\n        if (this._content.pageSizeOptions == undefined) this._content.pageSizeOptions = [10, 20, 50];\n        if (this._content.hidePageSize == undefined) this._content.hidePageSize = false;\n        if (this._content.showFirstLastButtons == undefined) this._content.showFirstLastButtons = false;\n\n        /************************** Internal control properties. **************************/\n\n        /******************************* Other properties. ********************************/\n        /* The `_content.endpoint` field is `undefined` by default. */\n\n        /************************ Must be the last initialization. ************************/\n        this.checkColumn();\n    }\n\n    /**\n     * Updates the fields related to the filter component. \n     */\n    private _updateFilter(): void\n    {\n        /* For each filter property. */\n        Object.keys(this._content.filter).forEach((filterName: string) => {\n            /* Saves the initial values. */\n            this._filterValues[filterName] = this._content.filter[filterName].content.formControl.value;\n\n            /* Disposes the resources held by the subscription. */\n            if (this._filterValuesSubscription[filterName] != undefined) this._filterValuesSubscription[filterName].unsubscribe();\n\n            /* Subscribes to observe the changes in the control value when there is an external change. */\n            this._filterValuesSubscription[filterName] = this._content.filter[filterName].content.formControl.valueChanges.pipe(\n                /* Waits 500ms after each keystroke before considering the term. */\n                debounceTime(500),\n                /* Ignores new term if same as previous term. */\n                distinctUntilChanged()\n            )\n            .subscribe((value: any) => {\n                this.applyFilter(filterName, value);\n            });\n        });\n    }\n\n    /**\n     * Updates the fields related to sorting. \n     * @param sortEvent The new sorting to set. \n     */\n    private _updateSort(sortEvent: Sort): void\n    {\n        /* In this case, `_content` is updated with the new values; the `MatSort` already has them. */\n        this._content.sort.active = sortEvent.active;\n        this._content.sort.direction = sortEvent.direction;\n    }\n\n    /**\n     * Sets the `MatSort` initial values. \n     * The filter component and `MatPaginator` are initialized in a different way. \n     */\n    private _setMatSortInitialValue(): void\n    {\n        /* Saves the initial values. */\n        this._sort.active = this._content.sort.active;\n        this._sort.direction = this._content.sort.direction;\n    }\n\n    /**\n     * Updates the fields related to pagination. \n     * @param newPage The new page to set. Its type is `Page<any>` or `PageEvent`. \n     */\n    private _updatePaginator(newPage: any): void\n    {\n        /* In this case, `_content` is updated with the new values, then the `MatPaginator` \n         * takes the values via property binding from `_content` (through the template). */\n        this._content.length = (newPage.totalData || newPage.length);\n        this._content.pageIndex = newPage.pageIndex;\n        this._content.pageSize = newPage.pageSize;\n    }\n\n    /**\n     * Sets the `MatSort` and `MatPaginator` disabled or not. \n     * @param disabled Whether the `MatSort` and `MatPaginator` are disabled. \n     */\n    private _disabledSortPaginator(disabled: boolean): void\n    {\n        this._sort.disabled = disabled;\n        this._paginator.disabled = disabled;\n    }\n\n    /**\n     * Subscribes to changes that should trigger an update to the table's rendered rows. When the \n     * changes occur, process the current state of the filter, sort, and pagination along with \n     * the provided base data and send it to the table for rendering. \n     */\n    private _updateChangeSubscription(): void\n    {\n        if (this._content.endpoint == undefined) return;\n\n        /* Disposes the resources held by the subscription. */\n        this._renderChangesSubscription.unsubscribe();\n\n        /* Updates the fields related to the filter component; the `MatSort` and `MatPaginator` are updated later. */\n        this._updateFilter();\n        /* Sets the `MatSort` initial values; the filter component and `MatPaginator` are initialized in a different way. */\n        this._setMatSortInitialValue();\n\n        /* The `_filterValuesChange` is always present; although the user decides if it is used or not. \n         * Also, `MatSort` and `MatPaginator` are always present because they are managed by the component completely. \n         * Subscribes to get the values when there is a change in the filtering, sorting, or pagination of the data. */\n        this._renderChangesSubscription = combineLatest([\n            this._filterValuesChange.pipe(\n                /* Emits the first value. Filters using the initial values. The operators must be called in this order. */\n                startWith(this._filterValues)\n            ),\n            this._sort.sortChange.pipe(\n                /* Emits the first value. Sorts using the initial values. The operators must be called in this order. */\n                startWith(this._content.sort)\n            ),\n            this._paginator.page.pipe(\n                /* Emits the first value. Paginates using the initial values. */\n                startWith({\n                    'pageIndex': this._content.pageIndex,\n                    'pageSize': this._content.pageSize,\n                    'length': 0  /* In the first value, it is not important. */\n                })\n            )\n        ]).pipe(\n            /* Switches to new search observable each time the term changes. */\n            switchMap(([filterEvent, sortEvent, pageEvent]): Observable<Page<any>> => {\n\n                /* Adds the new backend subscription. It begins/continues the loading of the data. \n                 * In this way, it shows the loading progress control. */\n                this._countBackendSubscriptions++;\n                console.log('Call _countBackendSubscriptions: ', this._countBackendSubscriptions);\n\n                /* Erases the data from the table. */\n                this._setDataBeforeCallEndpoint(sortEvent, pageEvent);\n\n                return this._content.endpoint({\n                    'filter': filterEvent,\n                    'sort': sortEvent,\n                    'paginator': pageEvent\n                }).pipe(\n                    finalize(() => {\n                        /* Removes the last backend subscription. In this way, when its value is `0`, \n                         * means the component is NOT loading the data source; it then hides the loading progress control. */\n                        this._countBackendSubscriptions--;\n                    })\n                );\n            })\n        ).subscribe((response: Page<any>): void => {\n            //console.log('Endpoint Response: ', response);\n\n            /* Sets the new data on the table. */\n            this._setDataAfterCallEndpoint(response);\n\n            /* Emits the new page for someone that wants to know it. */\n            this._page.next(response);\n        });\n    }\n\n    /**\n     * Returns the list of CSS classes to apply to the table rows. This method must be only overwrite, \n     * but must never be called for performance reason; it is called in the correct places internally. \n     * In order to take effect these classes, the table CSS file must have defined these classes. \n     * @param rowData The data that is contained in the row. \n     */\n    protected defaultCreateCssClassesForRow(rowData: any): { [className: string]: boolean; }\n    {\n        return {\n            'selected-row': (rowData[this._content.propertyNameToIdentify]) == this._selectedRow\n        };\n    }\n\n    /**\n     * Returns the list of CSS styles to apply to the table headers. This method must never be called \n     * because it is for internal use only; it is called in the correct places internally. \n     * @param pos The column position. \n     */\n    public _createCssStylesForHeader(pos: number): CssStyles\n    {\n        let result: CssStyles = {};\n\n        this._addCssStyles_CellWidth(result, pos);\n\n        return result;\n    }\n\n    /**\n     * Returns the list of CSS styles to apply to the table cells. This method must never be called \n     * because it is for internal use only; it is called in the correct places internally. \n     * @param pos The column position. \n     */\n    public _createCssStylesForCell(pos: number): CssStyles\n    {\n        let result: CssStyles = {};\n\n        this._addCssStyles_CellWidth(result, pos);\n        this._addCssStyles_CellContentWrap(result, pos);\n\n        return result;\n    }\n\n    private _addCssStyles_CellWidth(cssStyles: CssStyles, pos: number): void\n    {\n        cssStyles['flex'] = '0 0 ' + this._content.columnsWidth[pos];\n        cssStyles['width'] = this._content.columnsWidth[pos];\n    }\n\n    private _addCssStyles_CellContentWrap(cssStyles: CssStyles, pos: number): void\n    {\n        switch(this._content.columnContentWrap[pos])\n        {\n            case CellContentWrap.break:\n            {\n                cssStyles['word-wrap'] = 'break-word' /*!important*/;\n                cssStyles['white-space'] = 'unset' /*!important*/;\n                cssStyles['overflow-wrap'] = 'break-word';\n                cssStyles['word-break'] = 'break-word';\n                \n                cssStyles['-ms-hyphens'] = 'auto';\n                cssStyles['-moz-hyphens'] = 'auto';\n                cssStyles['-webkit-hyphens'] = 'auto';\n                cssStyles['hyphens'] = 'auto';\n\n                break;\n            }\n            case CellContentWrap.ellipsis:\n            {\n                cssStyles['overflow'] = 'hidden';\n                cssStyles['text-overflow'] = 'ellipsis';\n                cssStyles['white-space'] = 'nowrap';\n\n                break;\n            }\n            default: /* CellContentWrap.responsible */\n            {\n                /* The `responsible` wrap is the default style. It only applies the responsible styles \n                 * that are defined in the table. */\n\n                break;\n            }\n        }\n    }\n\n    /**\n     * Returns true if it is loading the data source; otherwise, false. \n     */\n    public get isLoading(): boolean\n    {\n        /* When the `_countBackendSubscriptions` value is different of 0, \n         * means the component is loading the data source. */\n        return (this._countBackendSubscriptions != 0);\n    }\n\n    /**\n     * Returns the selected row. \n     */\n    public get selectedRow(): number\n    {\n        return this._selectedRow;\n    }\n\n    /**\n     * Returns the input field that contains the content of this class (the table control content to show). \n     */\n    @Input()\n    public get content(): TableContent<any>\n    {\n        return this._content;\n    }\n\n\t/**\n\t * Sets the input field that contains the content of this class (the table control content to show). \n     * In this way, the component is updated correctly. \n     * @param newContent The new content to set. \n     * If the value is null, sets to `defaultTableContent`. \n\t */\n    public set content(newContent: TableContent<any> | null)\n    {\n        this._content = newContent;\n        this.init();\n    }\n\n    /**\n     * Returns the stream that emits the page that should be rendered by the table, \n     * when there is a change in the filtering, sorting, or pagination of the data. Each object \n     * in the `data` field represents one row. This is made for someone that wants to know it. \n     */\n    public get page(): Observable<Page<any>>\n    {\n        return this._pageAsObservable;\n    }\n\n\t/**\n\t * Sets the page that should be rendered by the table, it erases the data. For internal use only. \n     * @param sortEvent The current sort state. \n     * @param pageEvent The current paginator state. \n\t */\n    private _setDataBeforeCallEndpoint(sortEvent: Sort, pageEvent: PageEvent): void\n    {\n        /* Erases the data from the table. */\n        this._dataSource.data = [];\n\n        /* Updates the fields related to sorting and pagination; the filter component is updated in a different way. */\n        this._updateSort(sortEvent);\n        this._updatePaginator(pageEvent);\n\n        /* The `MatSort` and `MatPaginator` are always enabled. */\n        this._disabledSortPaginator(false);\n    }\n\n\t/**\n\t * Sets the page that should be rendered by the table, where each object in the `newPage.data` \n     * represents one row. For internal use only. \n     * @param newPage The new page to set. \n\t */\n    private _setDataAfterCallEndpoint(newPage: Page<any>): void\n    {\n        /* In `_dataSource`, needs to update the data only. */\n        this._dataSource.data = newPage.data;\n\n        /* Updates the fields related to pagination; the filter component and sorting do not need to update. */\n        this._updatePaginator(newPage);\n\n        /* The `MatSort` and `MatPaginator` are disabled if the table is empty. */\n        this._disabledSortPaginator(this.isEmpty);\n    }\n\n    /**\n     * Returns the data source to render. If the data source is empty, then returns the default data source \n     * that contains only one empty element (it is used to show one row that contains the empty \n     * table information). For internal use only. \n     */\n    public get _getDataSource(): MatTableDataSource<any>\n    {\n        if (this.isEmpty) return TableComponent._defaultDataSource;\n\n        return this._dataSource;\n    }\n\n    /**\n     * Checks column. Logs a warn to the console is the array of columns is empty. \n     */\n    public checkColumn(): void\n    {\n        const len: number = this._content.columnsObjectProperty.length;\n\n        if ((len == 0)\n            || (len != this._content.columnsHeaderText.length)\n            || (len != this._content.columnsWidth.length)\n            || (len != this._content.columnContentWrap.length))\n        {\n            console.warn(\"The 'columnsObjectProperty', 'columnsHeaderText', 'columnsWidth' and 'columnContentWrap' arrays must be different of empty, and must have the same amount of elements.\");\n        }\n    }\n\n    /**\n     * Navigates to the view that shows information about the specified `rowData`. \n     * @param relativeUrl The relative URL to navigate. \n     * @param rowData The data that is contained in the row. \n     */\n    public navigateTo(relativeUrl: string, rowData: any): void\n    {\n        /* Selects the specified row. */\n        this.selectRow(rowData);\n\n        /* Navigates to the specified view. */\n        this._router.navigate([ rowData[this._content.propertyNameToIdentify], relativeUrl ], { relativeTo: this._activatedRoute });\n    }\n\n    /**\n     * Selects the specified row. \n     * @param rowData The data that is contained in the row. \n     */\n    public selectRow(rowData: any): void\n    {\n        /* Saves the selected row. */\n        this._selectedRow = rowData[this._content.propertyNameToIdentify];\n    }\n\n    /**\n     * Applies the filter model that should be used to filter out objects from the data source. \n     * Assumes that the backend will call the `trim()` method over its properties. \n     * This method is accepting a partial representation of the filter model. \n     * It combines the specified filter with the last one. This way old filter properties \n     * won't be overridden when only one property is updated. \n     * @param filter The partial representation of the filter model to combine. \n     */\n    public applyFilters(filter: Partial<FilterValues>): void\n    {\n        /* This method is accepting a partial representation of the filter model. \n         * It combines the specified filter with the last one by merging both filters \n         * via the spread operator. This way old filter properties won't be overridden \n         * when only one property is updated. \n         * It is not necessary to call the `trim()` method over its properties because it is called \n         * in the backend internally. */\n\n        this._filterValues = { ...this._filterValues, ...filter };\n\n        this._filterValuesChange.next(this._filterValues);\n    }\n\n    /**\n     * Applies the filter model that should be used to filter out objects from the data source. \n     * Assumes that the backend will call the `trim()` method over its properties. \n     * It combines the specified filter property with the last one. This way old filter properties \n     * won't be overridden when only one property is updated. \n     * @param name The filter name. \n     * @param value The filter value. \n     */\n    public applyFilter(name: string, value: any): void\n    {\n        /* It combines the specified filter property with the last one by merging both filters \n         * via the spread operator. This way old filter properties won't be overridden \n         * when only one property is updated. \n         * It is not necessary to call the `trim()` method over its properties because it is called \n         * in the backend internally. */\n\n        this._filterValues = { ...this._filterValues };\n        this._filterValues[name] = value;\n\n        this._filterValuesChange.next(this._filterValues);\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\nimport { ContainerControl } from '../../container/container.control';\n\n/**\n * Represents a container control that allows the writing of a name of something in different language. \n */\n@Component({\n\tselector: 'container-label-diff-lang',\n\ttemplateUrl: './label-diff-lang-container.component.html',\n\tstyleUrls: ['./label-diff-lang-container.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class ContainerLabelDiffLangComponent extends ContainerControl implements OnInit\n{\n\tpublic constructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t/* Sets the default values. */\n        this.init(undefined);\n\t}\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The label to set. If the value is `undefined`, sets the label to `content.label`. \n     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false. \n     * @param alwaysHint If it is true then there is always at leat one hint start-aligned. \n     */\n    protected init(label: string | undefined): void\n    {\n        /* Sets the default values. */\n\n        super.init(label);\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Input, ViewChild } from '@angular/core';\nimport { Validators, ValidationErrors, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { isNullOrUndefined } from 'util';\n\nimport { ContentPosition, IconValue, HintPosition, HintValue,\n    FormFieldContent, FormFieldControl, ValidatorArguments } from '../form-field.control';\n\n/**\n * An enum that represents the appearance style of an `InputControl`. \n */\nexport enum TextInputAppearance\n{\n    /**\n     * The `standard` appearance is the default style. It shows the input box with an underline underneath it. \n     */\n    standard = 'standard',\n\n    /**\n     * The `fill` appearance displays the form field with a filled background box in addition to the underline. \n     */\n    fill = 'fill',\n\n    /**\n     * The `outline` appearance shows the form field with a border all the way around, not just an underline. \n     */\n    outline = 'outline'\n}\n\n/**\n * A base interface that represents the content of an `InputControl`. \n */\nexport interface InputContent extends FormFieldContent\n{\n    /**\n\t * Returns the `FormControl` that tracks the value and validity state of the internal control that contains the text input. \n     * Implementation notes: There are two cases: \n     *  - You only have the `content.formControl` field as the `InputEmailComponent` class. \n     *  - You have the `content.formControl` and `InputControl.internalComponent` fields as the `InputIssnComponent` class. \n     *  - It must be specified; otherwise, an exception is thrown. \n\t */\n    formControl?: FormControl;\n\n\n\n    /**\n     * Returns the control's appearance. \n     * By default, its value is `TextInputAppearance.standard`. \n     */\n    appearance?: TextInputAppearance;\n\n\n\n    /**\n     * Returns the control's prefix icon. \n     * By default, its value is `undefined`. \n     */\n    prefixIcon?: IconValue;\n\n    /**\n     * Returns the control's suffix icon. \n     * By default, its value is `undefined`. \n     */\n    suffixIcon?: IconValue;\n\n\n\n    /**\n     * Returns the control's prefix text. \n     * By default, its value is `undefined`. \n     */\n    prefixText?: string;\n\n    /**\n     * Returns the control's suffix text. \n     * By default, its value is `undefined`. \n     */\n    suffixText?: string;\n\n\n\n\t/**\n\t * Returns the control's start hint. \n\t * By default, its value is `undefined`. \n\t */\n    startHint?: HintValue;\n\n\t/**\n\t * Returns the control's end hint. \n\t * By default, its value is `undefined`. \n\t */\n    endHint?: HintValue;\n}\n\n/**\n * An interface which allows to manipulate the internal component that contains the text input. \n * This interface is implemented when it is created a custom `MatFormFieldControl`. \n */\nexport interface IInternalComponent\n{\n\t/**\n\t * Tracks the value and validity state of the internal control that contains the text input. \n\t */\n    readonly formControl: FormControl;\n\n\t/**\n\t * Returns or sets the value of the control. \n\t */\n    value: any | undefined;\n\n\t/**\n\t * Returns true if the control is empty; otherwise, false. \n     * A control is empty if its value is `undefined` or empty string. \n\t */\n\treadonly empty: boolean;\n\n    /**\n     * Returns true if the control is in an error state; otherwise, false. \n     */\n    readonly errorState: boolean;\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    getErrorMessage(): string;\n}\n\n/**\n * Represents the base abstract class for a control that allows the writing/selection of a text. \n */\nexport abstract class InputControl extends FormFieldControl\n{\n    /**\n     * Returns a `FormControl` by default. \n     * Its value is empty, and does not have validators. \n     * @param validatorArguments A collection of key/value elements, where the key is the validator name \n     * and the value is the value that the validator needs to check. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl('', [ ]);\n    }\n\n    /**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n    public content: InputContent;\n\n    /**\n\t * Tracks the value and validity state of the internal component that contains the text input. \n     * Implementation notes: There are two cases: \n     *  - You only have the `content.formControl` field as the `InputEmailComponent` class. \n     *  - You have the `content.formControl` and `internalComponent` fields as the `InputIssnComponent` class. \n\t */\n\t@ViewChild('internalComponent', { static: true })\n    protected readonly internalComponent: IInternalComponent;\n\n    protected static toco_ng_Error_Msg_Requerido: string = '';\n\n    /**\n     * Represents the validation error of required. Its default value can be overwritten. \n     */\n    protected validationError_required: string;\n\n    /**\n     * Constructs a new instance of this class. \n     */\n    public constructor()\n    {\n        super();\n\n        this.validationError_required = '';\n    }\n\n    /**\n     * Sets the new language. \n     * @param transServ The `TranslateService` instance injected. \n     */\n    protected setNewLanguage(transServ: TranslateService): void\n    {\n        /* The `InputControl.currentLang != transServ.currentLang` test is NOT necessary here because it is done in the non-abstract child classes. */\n\n        super.setNewLanguage(transServ);\n\n        /* The `InputControl.currentLang` value is updated correctly in the parent class. */\n\n        transServ.get('TOCO_NG_ERROR_MSG_REQUERIDO').subscribe((res: string) => {\n            InputControl.toco_ng_Error_Msg_Requerido = res;\n        });\n    }\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n     * @param placeholder The default placeholder to use. It is used if the `content.placeholder` is not specified. \n     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false. \n     * @param alwaysHint If it is true then there is always at leat one hint start-aligned. \n     */\n    protected init(label: string, placeholder: string = '', isAbbreviation: boolean = false, alwaysHint: boolean = true): void\n    {\n        /* Sets the default values. */\n\n        super.init(label, placeholder);\n\n        if (this.content.formControl == undefined)\n        {\n            if (this.internalComponent == undefined) throw new Error(`For the '${ this.content.name }' control, the 'content.formControl' value can not be undefined; it must be a 'FormControl' value.`);\n\n            this.content.formControl = this.internalComponent.formControl;\n        }\n\n        // let temp: string = (isAbbreviation) ? this.content.label : this.content.label.toLowerCase();\n        this.validationError_required = 'TOCO_NG_ERROR_MSG_REQUERIDO';\n\n        /************************** Internal control properties. **************************/\n        if (this.content.required == undefined) this.content.required = false;\n\n        /************************** `mat-form-field` properties. **************************/\n        if (this.content.appearance == undefined) this.content.appearance = TextInputAppearance.standard;\n\n        /***************************** `mat-icon` properties. *****************************/\n        if (this.content.prefixIcon != undefined) this.content.prefixIcon.setDefaultValueIfUndefined_setPosition(ContentPosition.prefix);\n        if (this.content.suffixIcon != undefined) this.content.suffixIcon.setDefaultValueIfUndefined_setPosition(ContentPosition.suffix);\n\n        /***************************** `mat-hint` properties. *****************************/\n        if (alwaysHint && (this.content.startHint == undefined) && (this.content.endHint == undefined))\n        {\n            this.content.startHint = new HintValue(HintPosition.start, 'TOCO_NG_HINT_TEXTO_POR_DEFECTO');\n        }\n        else\n        {\n            if (this.content.startHint != undefined) this.content.startHint.setDefaultValueIfUndefined_setPosition(HintPosition.start);\n            if (this.content.endHint != undefined) this.content.endHint.setDefaultValueIfUndefined_setPosition(HintPosition.end);\n        }\n\n        /* Adds this control as a child to the `content.parentFormSection`. \n        It must be called at the end. */\n        if (this.content.parentFormSection != undefined)\n        {\n            console.log('addAsChildControl(this.content.formControl)');\n\n            this.addAsChildControl(this, this.content.formControl);\n        }\n    }\n\n\t/**\n\t * Initializes the control's value. It uses the `content.value` and it is already different of `undefined`. \n     * It also checks if the specified `content.value` is correct. For internal use only. \n\t */\n\tprotected initValue(): void\n\t{\n        /* In this way, checks if the specified `content.value` is correct. */\n        this.content.formControl.setValue(this.content.value);\n\n        /* Marks the control as `touched`. */\n        this.content.formControl.markAsTouched({\n            onlySelf: true\n        });\n    }\n\n    /**\n     * Returns this instance. \n     */\n    public get getInstance(): InputControl\n    {\n        return this;\n    }\n\n\t/**\n\t * Returns true if the control is empty; otherwise, false. \n     * A control is empty if its value is `undefined` or empty string. \n\t */\n\tpublic get empty(): boolean\n\t{\n        if (this.internalComponent == undefined) return ((isNullOrUndefined(this.content.formControl.value)) || (this.content.formControl.value === ''));\n        return this.internalComponent.empty;\n    }\n\n    /**\n     * Returns true if the control is in a hint state; otherwise, false. \n     */\n    public get hintState(): boolean\n    {\n        return this.empty;\n    }\n\n    /**\n     * Returns true if the control is in an error state; otherwise, false. \n     */\n    public get errorState(): boolean\n    {\n        /* The control does not display errors before the user has a \n         * chance to edit the form. The checks for dirty and touched prevent errors \n         * from showing until the user does one of two things: changes the value, \n         * turning the control dirty; or blurs the form control element, setting the \n         * control to touched. \n         * Thus, it reveals an error message only if the control is invalid and \n         * the control is either dirty or touched. */\n        if (this.internalComponent == undefined) return ((this.content.formControl.invalid) && (this.content.formControl.dirty || this.content.formControl.touched));\n        return this.internalComponent.errorState;\n    }\n\n\t/**\n\t * Handler method that is called when the control's value changes in the UI. For internal use only. \n     * If a derived class wants to do some specific handling then it must overwrite \n     * the `handleSpecificInput` method. \n\t */\n\tpublic handleInput(): void\n\t{\n        /* Calls the specific handling of the input that the derived class wants to do. */\n        this.handleSpecificInput();\n\n        // TODO: hacer la salva del valor del control para `this.content.value` de una mejor forma \n        // porque hacerlo aquí genera inconsistencias. Una mejor forma sería proporcionar un method que \n        // haga la función de salvar el valor y entonces es llamado cuando haga falta. \n        /* If the control does not have error ... */\n        if (!this.errorState)\n        {\n            /* ... sets the new value of the control in the `content`. */\n            this.content.value = this.content.formControl.value;\n        }\n\n        /* If the control is not marked as `touched` ... */\n        if (this.content.formControl.untouched)\n        {\n            /* ... marks the control as `touched`. */\n            this.content.formControl.markAsTouched({\n                onlySelf: true\n           });\n        }\n    }\n\n\t/**\n\t * Returns the control's default value. \n     * This function can be overwrite in the derived class. \n\t */\n    public get getDefaultValue(): any\n    {\n        /* By default, its implementation is returning the empty string. */\n\n        return '';\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     * This function can be overwrite in the derived class. \n     */\n    public getErrorMessage(): string\n\t{\n        /* By default, its implementation is returning the error of the `internalComponent.getErrorMessage` \n         * method or returning the text errors. */\n\n        if (this.internalComponent != undefined) return this.internalComponent.getErrorMessage();\n\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the text errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return ((this.isTranslationBuiltByControl) ? InputControl.toco_ng_Error_Msg_Requerido : this.validationError_required);\n            }\n        }\n\n        return '';\n\t}\n    \n\t/**\n\t * Handler method that is called by the internal logic when the control's value changes in the UI. \n     * This method contains the specific handling of the input that the derived class wants to do. \n     * This function can be overwrite in the derived class. \n\t */\n    public handleSpecificInput(): void\n\t{\n        /* By default, its implementation has nothing to do. */\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { isBoolean, isNullOrUndefined } from 'util';\n\nimport { InputControl } from '../input.control';\nimport { HintPosition, HintValue } from '../../form-field.control';\n\n/**\n * Represents a control that allows to select true or false value. \n */\n@Component({\n\tselector: 'input-bool',\n\ttemplateUrl: './bool-input.component.html',\n\tstyleUrls: ['./bool-input.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class InputBoolComponent extends InputControl implements OnInit\n{\n\tpublic constructor()\n\t{\n        super();\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n        /* Sets the default values. */\n\t\tthis.init('', '', false, true);\n\n\t\tthis.onSelectionChange();\n\t}\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n\t * @param placeholder The default placeholder to use. It is used if the `content.placeholder` is not specified. \n     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false. \n     * @param alwaysHint If it is true then there is always at leat one hint start-aligned. \n     */\n\t protected init(label: string, placeholder: string = '', isAbbreviation: boolean, alwaysHint: boolean): void\n\t {\n\t\t/* Sets the default values. */\n\n\t\tsuper.init(label, placeholder, isAbbreviation, alwaysHint);\n\n\t\tif (!isBoolean(this.content.value) && !isNullOrUndefined(this.content.value)) throw new Error(`For the '${ this.content.name }' control, the 'content.value' value must have a boolean type.`);\n\n\t\tif (this.content.startHint != undefined)\n\t\t{\n\t\t\tif (this.content.startHint.label == 'TOCO_NG_HINT_TEXTO_POR_DEFECTO') this.content.startHint.label = 'TOCO_NG_HINT_TEXTO_SELECC_POR_DEFECTO';\n\t\t}\n\t\telse this.content.startHint = new HintValue(HintPosition.start, 'TOCO_NG_HINT_TEXTO_SELECC_POR_DEFECTO');\n\t }\n\n\tpublic onSelectionChange(): void\n\t{\n\t\tif ((this.content.extraContent) && (this.content.extraContent.selectionChange))\n\t\t{\n\t\t\tthis.content.extraContent.selectionChange(this.content.formControl.value);\n\t\t}\n\n\t\t// console.log('Select value: ', this.content.formControl.value);\n\t}\n}\n","\n/**\n * Data structure for holding an email. \n */\nexport class EmailValue\n{\n\t/**\n\t * Represents the email label. \n\t */\n\tpublic static readonly email_Label: string = 'Email';\n\n\t/**\n\t * Represents the email placeholder.\n\t */\n\tpublic static readonly email_Placeholder: string = 'nick@gmail.com';\n\n\t/**\n\t * The email value.\n\t */\n\tpublic email: string;\n\n\tpublic constructor(e: string)\n\t{\n\t\tthis.email = e;\n\t}\n\n    /**\n     * Returns a string representation of this `EmailValue` object. \n     */\n\t public toString(): string\n\t {\n\t\treturn EmailValue.email_Label + ' ' + this.email;\n\t }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\nimport { EmailValue } from './email-value';\n\n/**\n * Represents a control that allows the writing of an email. \n * It uses the `EmailValue.email_Label` as a label if the `content.label` is not specified. \n * It uses the `EmailValue.email_Placeholder` as a placeholder if the `content.placeholder` is not specified. \n */\n@Component({\n    selector: 'input-email',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputEmailComponent extends InputControl implements OnInit\n{\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputEmailComponent`'s `content.formControl` value by default. \n     * In this case, the `validatorArguments` argument is always `undefined`. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl('', [\n            Validators.email\n        ]);\n    }\n\n    public constructor()\n    {\n        super();\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n        this.init(EmailValue.email_Label, EmailValue.email_Placeholder, false, true);\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the email errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return this.validationError_required;\n            }\n            else\n            {\n                /* It is `validationErrors[Validators.email.name]`. */\n                return 'TOCO_NG_ERROR_MSG_CORREO_INVAL';\n            }\n        }\n\n        return '';\n    }\n}\n","\n/**\n * Data structure for holding an identifier. \n */\nexport class IdentifierValue\n{\n\t/**\n\t * Represents the identifier label. \n\t */\n\tpublic static readonly identifier_Label: string = 'TOCO_NG_ID';\n\n\t/**\n\t * The identifier value.\n\t */\n\tpublic identifier: string;\n\n\tpublic constructor(id: string)\n\t{\n\t\tthis.identifier = id;\n\t}\n\n    /**\n     * Returns a string representation of this `IdentifierValue` object. \n     */\n\t public toString(): string\n\t {\n\t\treturn IdentifierValue.identifier_Label + ' ' + this.identifier;\n\t }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\nimport { IdentifierValue } from './identifier-value';\n\n/**\n * Represents a control that allows the writing of an identifier. \n * It uses the `IdentifierValue.identifier_Label` as a label if the `content.label` is not specified. \n */\n@Component({\n    selector: 'input-identifier',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputIdentifierComponent extends InputControl implements OnInit\n{\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputIdentifierComponent`'s `content.formControl` value by default. \n     * @param validatorArguments An object that has only one field of `pattern` name and its value is a string. \n     * The `pattern` name is the validator name and the value is the value that the validator needs to check. \n     * For example, you can call the `getFormControlByDefault` method in this way: \n     * InputIdentifierComponent.getFormControlByDefault({ 'pattern': '^[a-zA-Z\\_][a-zA-Z\\-\\_0-9]*$' });\n     * If this argument is not specified, by default its value is { 'pattern': '^[a-zA-Z\\-\\_]*$' }. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl('', [\n            (((validatorArguments) && (validatorArguments.pattern)) ? Validators.pattern(validatorArguments.pattern) : Validators.pattern('^[a-zA-Z\\-\\_]*$'))\n            // Validators.pattern(/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/i)\n        ]);\n    }\n\n    public constructor()\n    {\n        super();\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n        this.init(IdentifierValue.identifier_Label, '', false, true);\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the identifier errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return this.validationError_required;\n            }\n            else\n            {\n                /* It is `validationErrors[Validators.pattern.name]`. */\n                return 'TOCO_NG_ERROR_MSG_ID_INVAL';\n            }\n        }\n\n        return '';\n    }\n}\n","\n/**\n * Represents the abbreviation for an ISSN type. \n */\nexport enum IssnType_Abbreviation\n{\n\t/**\n\t * The ISSN abbreviation by default. \n\t */\n\tISSN = 'ISSN',\n\n\t/**\n\t * The ISSN abbreviation for the print media (paper) version of a serial. \n\t * Usually it is the \"default media\", so the \"default ISSN\". \n\t */\n\tp_ISSN = 'p-ISSN',\n\n\t/**\n\t * The ISSN abbreviation for the electronic media (online) version of a serial. \n\t */\n\te_ISSN = 'e-ISSN',\n\n\t/**\n\t * The ISSN abbreviation for the linking ISSN. \n\t * It is a specific ISSN that groups the different media of the same serial publication. \n\t * A single ISSN-L is designated for all media of a serial publication, irrespective of how many there are. \n\t * A serial publication is associated with a single ISSN-L. \n\t */\n\tISSN_L = 'ISSN-L'\n}\n\n/**\n * Represents the label for an ISSN type. \n */\nexport enum IssnType_Label\n{\n\t/**\n\t * The ISSN label. \n\t */\n\tISSN = 'TOCO_NG_ISSN',\n\n\t/**\n\t * The ISSN label for the print ISSN. \n\t */\n\tp_ISSN = 'TOCO_NG_P_ISSN',\n\n\t/**\n\t * The ISSN label for the electronic ISSN. \n\t */\n\te_ISSN = 'TOCO_NG_E_ISSN',\n\n\t/**\n\t * The ISSN label for the linking ISSN. \n\t */\n\tISSN_L = 'TOCO_NG_ISSN_L'\n}\n\n/**\n * Data structure for holding an ISSN. \n * An ISSN (International Standard Serial Number) is an 8-digit code. \n * This control stores the code as a string of length 11, with the form 'XXXX – XXXX'. \n * It is used to identify newspapers, journals, magazines and periodicals \n * of all kinds and on all media–print and electronic. For more information \n * follow the link: https://www.issn.org/understanding-the-issn/what-is-an-issn/. \n */\nexport class IssnValue\n{\n\t/**\n\t * Represents the ISSN placeholder.\n\t */\n\tpublic static readonly issn_Placeholder: string = 'XXXX – XXXX';\n\n\t/**\n\t * The amount of characters in the code. \n\t */\n\tpublic static readonly codeLength: number = 11;\n\n\t/**\n\t * The amount of characters in the code as string value. \n\t */\n\tpublic static readonly codeLengthAsString: string = IssnValue.codeLength.toString(10);\n\n\t/**\n\t * The character that represents the code group separator. \n\t */\n\tpublic static readonly codeGroupSeparator: string = '–';\n\n\t/**\n\t * The string that represents the code group separator with space. \n\t */\n\tpublic static readonly codeGroupSeparatorWithSpace: string = ' ' + IssnValue.codeGroupSeparator + ' ';\n\n\t/**\n\t * The regular expression that matches an ISSN code as a string of length 11, with the form 'XXXX – XXXX'. \n\t */\n\tpublic static readonly regExpIssnWithLength_11: string = '^[0-9]{4} ' + IssnValue.codeGroupSeparator + ' [0-9]{3}[0-9xX]$';\n\n\t/**\n\t * The regular expression that matches an ISSN code as a string of length 9, with the form 'XXXX–XXXX'. \n\t */\n\tpublic static readonly regExpIssnWithLength_9: string = '^[0-9]{4}' + IssnValue.codeGroupSeparator + '[0-9]{3}[0-9xX]$';\n\n\t/**\n\t * The regular expression that matches an ISSN code as a string of length 8, with the form 'XXXXXXXX'. \n\t */\n\tpublic static readonly regExpIssnWithLength_8: string = '^[0-9]{7}[0-9xX]$';\n\n\t/**\n\t * General purpose method. \n\t * Converts the specified ISSN code to a code with length 11 with the form 'XXXX – XXXX'. \n\t * @param code The code to convert. \n\t */\n\tpublic static convertIssnToLength_11(code: string): string\n\t{\n\t\tlet fg: string;\n\t\tlet sg: string;\n\n\t\tif (code.length == 8)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(4, 7);\n\n\t\t\treturn (fg + ' ' + IssnValue.codeGroupSeparator + ' ' + sg + ((code[7] == 'x') ? 'X' : code[7]));\n\t\t}\n\t\telse if (code.length == 9)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(5, 8);\n\n\t\t\treturn (fg + ' ' + IssnValue.codeGroupSeparator + ' ' + sg + ((code[8] == 'x') ? 'X' : code[8]));\n\t\t}\n\t\telse  /* The code length is 11. */\n\t\t{\n\t\t\tfg = code.slice(0, 5);\n\t\t\tsg = code.slice(6, 10);\n\n\t\t\treturn (fg + IssnValue.codeGroupSeparator + sg + ((code[10] == 'x') ? 'X' : code[10]));\n\t\t}\n\t}\n\n\t/**\n\t * General purpose method. \n\t * Converts the specified ISSN code to a code with length 9 with the form 'XXXX–XXXX'. \n\t * @param code The code to convert. \n\t */\n\tpublic static convertIssnToLength_9(code: string): string\n\t{\n\t\tlet fg: string;\n\t\tlet sg: string;\n\n\t\tif (code.length == 8)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(4, 7);\n\n\t\t\treturn (fg + IssnValue.codeGroupSeparator + sg + ((code[7] == 'x') ? 'X' : code[7]));\n\t\t}\n\t\telse if (code.length == 9)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(5, 8);\n\n\t\t\treturn (fg + IssnValue.codeGroupSeparator + sg + ((code[8] == 'x') ? 'X' : code[8]));\n\t\t}\n\t\telse  /* The code length is 11. */\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(7, 10);\n\n\t\t\treturn (fg + IssnValue.codeGroupSeparator + sg + ((code[10] == 'x') ? 'X' : code[10]));\n\t\t}\n\t}\n\n\t/**\n\t * General purpose method. \n\t * Converts the specified ISSN code to a code with length 8 with the form 'XXXXXXXX'. \n\t * @param code The code to convert. \n\t */\n\tpublic static convertIssnToLength_8(code: string): string\n\t{\n\t\tlet fg: string;\n\t\tlet sg: string;\n\n\t\tif (code.length == 9)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(5, 8);\n\n\t\t\treturn (fg + sg + ((code[8] == 'x') ? 'X' : code[8]));\n\t\t}\n\t\tif (code.length == 11)\n\t\t{\n\t\t\tfg = code.slice(0, 4);\n\t\t\tsg = code.slice(7, 10);\n\n\t\t\treturn (fg + sg + ((code[10] == 'x') ? 'X' : code[10]));\n\t\t}\n\t\telse  /* The code length is 8. */\n\t\t{\n\t\t\treturn code;\n\t\t}\n\t}\n\n\t/**\n\t * The code of `IssnValue.codeLength` characters. \n\t */\n\tpublic code: string;\n\n\tpublic constructor(c: string)\n\t{\n\t\tthis.code = IssnValue.convertIssnToLength_11(c);\n\t}\n\n\t/**\n\t * Returns true if the ISSN is complete; otherwise, false. \n\t * It is complete if the code of characters has the correct length. It does not check if the ISSN has \n\t * the correct digits. \n\t */\n\tpublic isComplete(): boolean\n\t{\n\t\treturn (this.code.length == IssnValue.codeLength);\n\t}\n\n\t/**\n\t * Returns a string representation of this `IssnValue` object. \n\t * @param acronym The acronym to use. \n\t */\n\tpublic toString(acronym: IssnType_Abbreviation | IssnType_Label): string\n\t{\n\t\treturn acronym + ' ' + this.code;\n\t}\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { ExtraValidators } from '../../../core/utils/validator';\n\nimport { IssnType_Abbreviation, IssnValue } from './issn-value';\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\n\n/**\n * Represents a control that allows the writing of an ISSN. \n * An ISSN (International Standard Serial Number) is an 8-digit code. \n * This control stores the code as a string of length 11, with the form 'XXXX – XXXX'. \n * It is used to identify newspapers, journals, magazines and periodicals \n * of all kinds and on all media–print and electronic. For more information \n * follow the link: https://www.issn.org/understanding-the-issn/what-is-an-issn/. \n * It uses the `IssnType_Abbreviation.ISSN` as a label if the `content.label` is not specified. \n * It uses the `IssnValue.issn_Placeholder` as a placeholder if the `content.placeholder` is not specified. \n */\n@Component({\n    selector: 'input-issn',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputIssnComponent extends InputControl implements OnInit\n{\n    /* Note: Before, this control worked well with a 'width' = '310px' or '285px'. */\n\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputIssnComponent`'s `content.formControl` value by default. \n     * In this case, the `validatorArguments` argument is always `undefined`. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        let res: FormControl = new FormControl('', [\n            ExtraValidators.equalLength(IssnValue.codeLength),\n            Validators.pattern(IssnValue.regExpIssnWithLength_11),\n            ExtraValidators.issnConfirmCheckDigitOneField(IssnValue.codeLength)\n        ]);\n\n        return res;\n    }\n\n\t/**\n\t * It is used by `handleSpecificInput` method. \n\t */\n    private _codeOldValue: string;\n\n    public constructor()\n    {\n        super();\n\n        this._codeOldValue = undefined;\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n\n        this.init(IssnType_Abbreviation.ISSN, IssnValue.issn_Placeholder, true, true);\n\n        if ((typeof this.content.value !== 'string') && (typeof this.content.value !== 'undefined'))\n        {\n            throw new Error(`For the '${ this.content.name }' control, the 'content.value' value must be of string type.`);\n        }\n\n        /* The '_codeOldValue' must be set after the 'content.formControl.value' is set. */\n        this.handleSpecificInput();\n    }\n\n   /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let result: string = '';\n        let result_alreadyHaveErrorInfo: boolean = false;\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the code errors. */\n\n        if (validationErrors)\n        {\n            if ((validationErrors[ExtraValidators.equalLength.name]) || (validationErrors[Validators.required.name]))\n            {\n                result = 'TOCO_NG_ERROR_MSG_ISSN_LONG_INVAL';\n                result_alreadyHaveErrorInfo = true;\n            }\n\n            if (validationErrors[Validators.pattern.name])\n            {\n                if (result_alreadyHaveErrorInfo)\n                {\n                    result = 'TOCO_NG_ERROR_MSG_ISSN_LONG_Y_DIG_INVAL';\n                }\n                else\n                {\n                    result = 'TOCO_NG_ERROR_MSG_ISSN_DIG_INVAL';\n                }\n\n                result_alreadyHaveErrorInfo = true;\n            }\n        }\n\n\t\t/* Only shows the `issnConfirmCheckDigitOneField` error if there isn't any previous error. */\n\t\tif (!result_alreadyHaveErrorInfo)\n\t\t{\n            if (validationErrors)\n\t\t\t{\n\t\t\t\tif (validationErrors[ExtraValidators.issnConfirmCheckDigitOneField.name])\n\t\t\t\t{\n\t\t\t\t\tresult = 'TOCO_NG_ERROR_MSG_ISSN_DIG_CHEQUEO_INVAL';\n\t\t\t\t\tresult_alreadyHaveErrorInfo = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        return result;\n    }\n\n\t/**\n\t * Handler method that is called by the internal logic when the control's value changes in the UI. \n     * This method contains the specific handling of the input that the derived class wants to do. \n\t */\n\tpublic handleSpecificInput(): void\n\t{\n        /* Forma de entrada del código ISSN por parte del usuario: \n         * El control ISSN permite copiar códigos ISSN con el separador de menos (-) o con \n         * el separador de raya (–), y son copiados correctamente para un código ISSN \n         * con el separador de raya (–); es decir, los siguientes ejemplos muestran \n         * el resultado de copiar una forma de código en particular. \n         *  - Si se copia 01234560, entonces se muestra 0123 – 4560\n         *  - Si se copia 0123-4560, entonces se muestra 0123 – 4560\n         *  - Si se copia 0123 - 4560, entonces se muestra 0123 – 4560\n         *  - Si se copia 0123–4560, entonces se muestra 0123 – 4560\n         *  - Si se copia 0123 – 4560, entonces se muestra 0123 – 4560\n         *  - Si se copia 0123 – 45601, entonces se muestra 0123 – 4560\n         *  - Si se copia un código ISSN con más de 8 dígitos en la forma que sea, \n         *    entonces no se copia y se sigue mostrando el código anterior. \n         * Recuerde que el caracter 'x' or 'X' puede aparecer solamente en la última \n         * posición del código ISSN. Además, aunque los dos caracteres significan lo mismo, \n         * siempre se trata de mostrar el caracter 'X' en mayúscula. \n         */\n\n        let tempCode: string = this.content.formControl.value;\n        let len: number = tempCode.length;\n\n        /* Checks that the code length can not be longer than `IssnValue.codeLength`. */\n\t\tif (len > IssnValue.codeLength)  /* This case is used for code with length 11. */\n\t\t{\n\t\t\t/* Sets the old value. */\n            this.content.formControl.setValue(this._codeOldValue);\n            return;\n        }\n\n        let i: number;\n        let newCode: string = '';\n        let alreadyHasSpace: boolean = false;\n        let count: number = 0;\n\n        for (i = 0; i < len; i++)\n        {\n            switch(tempCode[i])\n            {\n                case '0': case '1': case '2': case '3': case '4':\n                case '5': case '6': case '7': case '8': case '9':\n                {\n                    if (((++count) == 4) && (!alreadyHasSpace))\n                    {\n                        alreadyHasSpace = true;\n                        newCode += tempCode[i] + IssnValue.codeGroupSeparatorWithSpace;\n                    }\n                    else\n                    {\n                        newCode += tempCode[i];\n                    }\n                    break;\n                }\n\n                case 'x': case 'X':\n                {\n                    if ((i + 1) == len)  /* The 'x' or 'X' character can only appear in the last position. */\n                    {\n                        count++;\n                        newCode += 'X';\n                    }\n                    break;\n                }\n\n                case ' ':\n                {\n                    if (!alreadyHasSpace)\n                    {\n                        alreadyHasSpace = true;\n                        newCode += IssnValue.codeGroupSeparatorWithSpace;\n                    }\n                    break;\n                }\n            }\n        }\n\n        /* Checks that the code length can not be longer than `IssnValue.codeLength`. */\n        if (count > 8)  /* This case is used for code with length 8 and 9. */\n\t\t{\n\t\t\t/* Sets the old value. */\n            this.content.formControl.setValue(this._codeOldValue);\n        }\n        else\n        {\n            /* Sets the new value, and updates the old value. */\n            this.content.formControl.setValue((this._codeOldValue = newCode));\n        }\n    }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\n\nimport { ValidatorArguments } from '../../form-field.control';\n\nimport { InputControl } from '../input.control';\n\n/**\n * Represents a control that allows the writing of a number. \n */\n@Component({\n    selector: 'input-number',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputNumberComponent extends InputControl implements OnInit\n{\n    // TODO: Puedo hacer que este control sea más general, que permita la entrada de valores \n    // enteros y doubles haciendo las siguientes modificaciones: \n    //  * Inicializar el `Validators.pattern('----')` con un patrón para double values según valor que recibe en \n    //    `validatorArguments` que dice si integer o double. \n    //  * Hacer tratamiento de error correctamente em método `getErrorMessage()`. \n\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputNumberComponent`'s `content.formControl` value by default. \n     * @param validatorArguments A collection of key/value elements, where the key is the validator name \n     * and the value is the value that the validator needs to check. \n     * In the `validatorArguments` argument, you can specify an object with the minimum and maximum possible \n     * values for the number that holds the control. \n     * For example: If the minimum possible value is 0 and maximum is 50, you can call the `getFormControlByDefault` \n     * method in this way: \n     * InputNumberComponent.getFormControlByDefault({ 'min': 0, 'max': 50 });\n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl(0, [\n            Validators.pattern('^-?[0-9]+$'),\n            Validators.min(((validatorArguments) && (validatorArguments.min != undefined)) ? validatorArguments.min : Number.MIN_SAFE_INTEGER),\n            Validators.max(((validatorArguments) && (validatorArguments.max != undefined)) ? validatorArguments.max : Number.MAX_SAFE_INTEGER),\n        ]);\n    }\n\n    protected static toco_ng_Error_Msg_Num_Inval: string = '';\n    protected static toco_ng_Error_Msg_Num_Minimo: string = '';\n    protected static toco_ng_Error_Msg_Num_Maximo: string = '';\n\n    public constructor(private _transServ: TranslateService)\n    {\n        super();\n\n        /* The translation is built by the control. */\n        this.isTranslationBuiltByControl = true;\n    }\n\n    public ngOnInit(): void\n    {\n        /* This needs to be called at first. */\n        this.setNewLanguage(this._transServ);\n\n        /* Sets the default values. */\n        this.init('', '', false, false);\n\n\t\t/* Changes the translation when the language changes. */\n\t\tthis._transServ.onLangChange.subscribe((params: LangChangeEvent) => {\n\t\t\tthis.setNewLanguage(this._transServ);\n\t\t});\n    }\n\n    /**\n     * Sets the new language. \n     * @param transServ The `TranslateService` instance injected. \n     */\n    protected setNewLanguage(transServ: TranslateService): void\n    {\n        /* First, do this test for optimization. */\n        if (InputNumberComponent.currentLang != transServ.currentLang)\n        {\n            super.setNewLanguage(transServ);\n\n            /* The `InputNumberComponent.currentLang` value is updated correctly in the parent class. */\n\n            transServ.get(['TOCO_NG_ERROR_MSG_NUM_INVAL', 'TOCO_NG_ERROR_MSG_NUM_MINIMO', 'TOCO_NG_ERROR_MSG_NUM_MAXIMO']).subscribe((res: any) => {\n                InputNumberComponent.toco_ng_Error_Msg_Num_Inval = res.TOCO_NG_ERROR_MSG_NUM_INVAL;\n                InputNumberComponent.toco_ng_Error_Msg_Num_Minimo = res.TOCO_NG_ERROR_MSG_NUM_MINIMO;\n                InputNumberComponent.toco_ng_Error_Msg_Num_Maximo = res.TOCO_NG_ERROR_MSG_NUM_MAXIMO;\n            });\n        }\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the code errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return InputNumberComponent.toco_ng_Error_Msg_Requerido;\n            }\n\n            if (validationErrors[Validators.pattern.name])\n            {\n                return InputNumberComponent.toco_ng_Error_Msg_Num_Inval;\n            }\n\n            if (validationErrors[Validators.min.name])\n            {\n                return InputNumberComponent.toco_ng_Error_Msg_Num_Minimo + validationErrors[Validators.min.name].min + '.';\n            }\n\n            if (validationErrors[Validators.max.name])\n            {\n                return InputNumberComponent.toco_ng_Error_Msg_Num_Maximo + validationErrors[Validators.max.name].max + '.';\n            }\n        }\n\n        return '';\n    }\n}\n","\n/**\n * Data structure for holding an RNPS. \n * An RNPS (Registro Nacional de Publicaciones Seriadas) is an 4-digit code used to control \n * las publicaciones seriadas autorizadas a editarse, imprimirse y circular en Cuba. \n * For more information follow the link: http://www.seriadas.cult.cu/. \n */\nexport class RnpsValue\n{\n\t/**\n\t * Represents the RNPS placeholder.\n\t */\n\tpublic static readonly rnps_Placeholder: string = 'XXXX';\n\n\t/**\n\t * The amount of digits in the code. \n\t */\n\tpublic static readonly codeLength: number = 4;\n\n\t/**\n\t * The amount of digits in the code as string value. \n\t */\n\tpublic static readonly codeLengthAsString: string = RnpsValue.codeLength.toString(10);\n\n\t/**\n\t * Represents the RNPS abbreviation. \n\t */\n\tpublic static readonly rnps_Abbreviation: string = 'RNPS';\n\n\t/**\n\t * Represents the RNPS label. \n\t */\n\tpublic static readonly rnps_Label: string = 'TOCO_NG_RNPS';\n\n\t/**\n\t * The code of `RnpsValue.codeLength` digits.\n\t */\n\tpublic code: string;\n\n\tpublic constructor(c: string)\n\t{\n\t\tthis.code = c;\n\t}\n\n\t/**\n\t * Returns true if the RNPS is complete; otherwise, false. \n\t * It is complete if the code of digits has the correct length. It does not check if the RNPS has \n\t * the correct digits. \n\t */\n\tpublic isComplete(): boolean\n\t{\n\t\treturn (this.code.length == RnpsValue.codeLength);\n\t}\n\n    /**\n     * Returns a string representation of this `RnpsValue` object. \n     */\n\t public toString(): string\n\t {\n\t\treturn RnpsValue.rnps_Abbreviation + ' ' + this.code;\n\t }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { ExtraValidators } from '../../../core/utils/validator';\n\nimport { RnpsValue } from './rnps-value';\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\n\n/**\n * Represents a control that allows the writing of an RNPS. \n * An RNPS (Registro Nacional de Publicaciones Seriadas) is an 4-digit code used to control \n * the serial publications authorized to be edited, printed and circulated in Cuba. \n * For more information follow the link: http://www.seriadas.cult.cu/. \n * It uses the `RnpsValue.rnps_Abbreviation` as a label if the `content.label` is not specified. \n * It uses the `RnpsValue.rnps_Placeholder` as a placeholder if the `content.placeholder` is not specified. \n */\n@Component({\n    selector: 'input-rnps',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputRnpsComponent extends InputControl implements OnInit\n{\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputRnpsComponent`'s `content.formControl` value by default. \n     * In this case, the `validatorArguments` argument is always `undefined`. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl('', [\n            ExtraValidators.equalLength(RnpsValue.codeLength),\n            Validators.pattern('^[0-9]*$')\n        ]);\n    }\n\n\t/**\n\t * It is used by `handleSpecificInput` method. \n\t */\n    private _codeOldValue: string;\n\n    public constructor()\n    {\n        super();\n\n        this._codeOldValue = undefined;\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n\n        this.init(RnpsValue.rnps_Abbreviation, RnpsValue.rnps_Placeholder, true, true);\n\n        /* The '_codeOldValue' must be set after the 'content.formControl.value' is set. */\n        this.handleSpecificInput();\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let result: string = '';\n        let result_alreadyHaveErrorInfo: boolean = false;\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the code errors. */\n        if (validationErrors)\n        {\n            if ((validationErrors[ExtraValidators.equalLength.name]) || (validationErrors[Validators.required.name]))\n            {\n                result = 'TOCO_NG_ERROR_MSG_RNPS_LONG_INVAL';\n                result_alreadyHaveErrorInfo = true;\n            }\n\n            if (validationErrors[Validators.pattern.name])\n            {\n                if (result_alreadyHaveErrorInfo)\n                {\n                    result = 'TOCO_NG_ERROR_MSG_RNPS_LONG_Y_DIG_INVAL';\n                }\n                else\n                {\n                    result = 'TOCO_NG_ERROR_MSG_RNPS_DIG_INVAL';\n                }\n\n                result_alreadyHaveErrorInfo = true;\n            }\n        }\n\n        return result;\n    }\n\n\t/**\n\t * Handler method that is called by the internal logic when the control's value changes in the UI. \n     * This method contains the specific handling of the input that the derived class wants to do. \n\t */\n\tpublic handleSpecificInput(): void\n\t{\n\t\tif (this.content.formControl.value.length > RnpsValue.codeLength)\n\t\t{\n\t\t\t/* Sets the old value. */\n\t\t\tthis.content.formControl.setValue(this._codeOldValue);\n        }\n        else\n        {\n            /* Updates the old values. */\n            this._codeOldValue = this.content.formControl.value;\n        }\n    }\n}\n","\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { TooltipPosition } from '@angular/material/tooltip';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { isArray } from 'util';\n\nimport { InputControl, InputContent } from '../input.control';\nimport { HintPosition, HintValue } from '../../form-field.control';\n\n/**\n * An interface that represents a selectable option. \n */\nexport interface SelectOption\n{\n\t/**\n\t * Returns the label that is showed. \n\t */\n\tlabel: string;\n\n\t/**\n\t * Returns the value that is stored internally. \n\t */\n\tvalue: any;\n\n\t/**\n\t * Returns true if this option is selected; otherwise, false. \n\t */\n\t// selected?: boolean;\n}\n\n/**\n * An interface that represents the content of a select control. \n */\nexport interface SelectContent extends InputContent\n{\n\t/**\n\t * Returns the options list that can be selected. \n\t * This field can be set using three ways: \n\t *  - Its value is `undefined`, then it takes the options from the `content.value` field. \n\t *  - Its value is a `SelectOption[]`, then it already contains the options. \n\t *  - Its value is an `Observable<SelectOption[]>`, then it takes the options when the observable emits values. \n\t * By default, its value is `[]`. \n\t */\n\tselectOptions?: SelectOption[] | Observable<SelectOption[]>;\n\n\t/**\n\t * Returns true if the selection can be multiple; otherwise, false. \n\t * By default, its value is `false`. \n\t */\n\tmultiple?: boolean;\n\n\t/**\n\t * Returns true if the tooltip is showed; otherwise, false. \n\t * By default, its value is `false`. \n\t */\n\tshowTooltip?: boolean;\n\n\t/**\n\t * Returns a value that allows the user to define the position of the tooltip for the select control. \n\t * It is used if the `showTooltip` field value is `true`. \n\t * By default, its value is `'below'`. \n\t * Its value can be one of these values: 'left', 'right', 'above', 'below', 'after', 'before' \n\t */\n\tselectTooltipPosition?: TooltipPosition;\n\n\t/**\n\t * Returns a value that allows the user to define the position of the tooltip for the select control's options. \n\t * It is used if the `showTooltip` field value is `true`. \n\t * By default, its value is `'right'`. \n\t * Its value can be one of these values: 'left', 'right', 'above', 'below', 'after', 'before' \n\t */\n\toptionsTooltipPosition?: TooltipPosition;\n}\n\n/**\n * Represents a control that allows to select one value or multiple values. \n * Implementation notes: \n * The `extraContent` recibe una funcion llamada getOptions() que se encarga de contruir un SelectOption[]. \n * Si es multiple, entonces el `value` es un array de valores. \n */\n@Component({\n\tselector: 'input-select',\n\ttemplateUrl: './select-input.component.html',\n\tstyleUrls: ['./select-input.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class InputSelectComponent extends InputControl implements OnInit, OnDestroy\n{\n\t/**\n     * Input field that contains the content of this class. \n     */\n    @Input()\n\tpublic content: SelectContent;\n\n\t/**\n\t * Returns the current selected option tooltip. \n\t * If nothing is selected, then its value is `''`. \n\t */\n\tpublic selectTooltip: string;\n\n\tprivate _selectOptionsSubscription: Subscription = null;\n\n\tpublic constructor(private _transServ: TranslateService)\n\t{\n        super();\n\n\t\tthis.selectTooltip = '';\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n        /* Sets the default values. */\n\t\tthis.init('', '', false, true);\n\n\t\t/* The `selectTooltip` value is set in `onSelectionChange` method when happening initialization or selection change. */\n\t\tthis.onSelectionChange();\n\t}\n\n\tpublic ngOnDestroy(): void\n\t{\n\t\t/* Disposes the resources held by the subscription. */\n\t\tthis._selectOptions_Unsubscription();\n\t}\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n\t * @param placeholder The default placeholder to use. It is used if the `content.placeholder` is not specified. \n     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false. \n     * @param alwaysHint If it is true then there is always at leat one hint start-aligned. \n     */\n    protected init(label: string, placeholder: string = '', isAbbreviation: boolean, alwaysHint: boolean): void\n    {\n\t\t/* Changes the translation when the language changes. */\n\t\tthis._transServ.onLangChange.subscribe((params: LangChangeEvent) => {\n\t\t\tthis._setSelectTooltip();\n\t\t});\n\n        /* Sets the default values. */\n\n\t\tsuper.init(label, placeholder, isAbbreviation, alwaysHint);\n\n\t\tif (this.content.startHint != undefined)\n\t\t{\n\t\t\tif (this.content.startHint.label == 'TOCO_NG_HINT_TEXTO_POR_DEFECTO') this.content.startHint.label = 'TOCO_NG_HINT_TEXTO_SELECC_POR_DEFECTO';\n\t\t}\n\t\telse this.content.startHint = new HintValue(HintPosition.start, 'TOCO_NG_HINT_TEXTO_SELECC_POR_DEFECTO');\n\n\t\tif (this.content.multiple == undefined) this.content.multiple = false;\n\t\tif (this.content.showTooltip == undefined) this.content.showTooltip = false;\n\t\tif (this.content.selectTooltipPosition == undefined) this.content.selectTooltipPosition = 'below';\n\t\tif (this.content.optionsTooltipPosition == undefined) this.content.optionsTooltipPosition = 'right';\n\n\t\tif (this.content.selectOptions == undefined)\n\t\t{\n\t\t\tif (this.content.value == undefined)\n\t\t\t{\n\t\t\t\tthis.content.selectOptions = [ ];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Gets the `content.selectOptions` from the `content.value` field. */\n\n\t\t\t\tif (isArray(this.content.value))\n\t\t\t\t{\n\t\t\t\t\tthis.content.multiple = true;  /* The control must be multiple. */\n\t\t\t\t\tthis.content.selectOptions = [ ];\n\n\t\t\t\t\tthis.content.value.forEach(\n\t\t\t\t\t\t(option: string): void => {\n\t\t\t\t\t\t\t(this.content.selectOptions as SelectOption[]).push({\n\t\t\t\t\t\t\t\t'label': option,\n\t\t\t\t\t\t\t\t'value': option.toUpperCase()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.content.selectOptions = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': this.content.value,\n\t\t\t\t\t\t\t'value': this.content.value.toUpperCase()\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (isArray(this.content.selectOptions))\n\t\t{\n\t\t\t/* Nothing to do here, but this case must be here. */\n\t\t}\n\t\telse if (this.content.selectOptions instanceof Observable)\n\t\t{\n\t\t\t/* Gets the `content.selectOptions` from an `Observable` when it emits values. */\n\n\t\t\tthis._selectOptions_Unsubscription();\n\n\t\t\tthis._selectOptionsSubscription = this.content.selectOptions.subscribe(\n\t\t\t\t(selectOptions: SelectOption[]): void => {\n\t\t\t\t\tthis.content.selectOptions = selectOptions;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error(`For the '${ InputSelectComponent.name }' control, the 'content.selectOptions' type value has a configuration error because the programme does not know what to do with it!`);\n\t\t}\n\n\t\t/* The `selectTooltip` value is set in `onSelectionChange` method when happening initialization or selection change. */\n\t}\n\t\n\tprivate _selectOptions_Unsubscription(): void\n\t{\n\t\t/* Disposes the resources held by the subscription. */\n\t\tif (this._selectOptionsSubscription)\n\t\t{\n\t\t\tthis._selectOptionsSubscription.unsubscribe();\n\t\t}\n\t}\n\n\tpublic onSelectionChange(): void\n\t{\n\t\t// console.log('Call `onSelectionChange` - ', 'Select value: ', this.content.formControl.value);\n\n\t\tthis._setSelectTooltip();\n\n\t\tif ((this.content.extraContent) && (this.content.extraContent.selectionChange))\n\t\t{\n\t\t\tthis.content.extraContent.selectionChange(this.content.formControl.value);\n\t\t}\n\t}\n\n\t/**\n\t * Does the translation for a key (or an array of keys). \n\t * @param key The key (or an array of keys) to translate. \n\t */\n\tprivate _doTranslation(key: string | Array<string>): void\n\t{\n\t\tif (key.length == 0)\n\t\t{\n\t\t\tthis.selectTooltip = '';\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transServ.get(key).subscribe((res: any) => {\n\t\t\t// console.log(key, ' --> ', res);\n\n\t\t\tif (this.content.multiple)\n\t\t\t{\n\t\t\t\t/* `res` is an object of translated keys. */\n\n\t\t\t\tlet translationKeys: string[] = Object.keys(res);\n\t\t\t\tlet len: number = translationKeys.length;\n\n\t\t\t\tlet translationRes: string = res[translationKeys[0]];\n\n\t\t\t\tfor (let i = 1; i < len; ++i)\n\t\t\t\t{\n\t\t\t\t\ttranslationRes += '\\n' + res[translationKeys[i]];\n\t\t\t\t}\n\n\t\t\t\tthis.selectTooltip = translationRes;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* `res` is a translated key. */\n\n\t\t\t\tthis.selectTooltip = res;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds the label for a value (or an array of values). \n\t * @param value The value (or an array of values) to find the label. \n\t * @returns Returns a label (or an array of labels). \n\t */\n\tprivate _findLabel(value: string | Array<string>): string | Array<string>\n\t{\n\t\tif (this.content.multiple)\n\t\t{\n\t\t\tlet label: Array<string> = [ ];\n\n\t\t\tfor (let val of value)\n\t\t\t{\n\t\t\t\tfor (let opt of (this.content.selectOptions as SelectOption[]))\n\t\t\t\t{\n\t\t\t\t\tif (opt.value == val)\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel.push(opt.label);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn label;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet label: string = '';\n\n\t\t\tfor (let opt of (this.content.selectOptions as SelectOption[]))\n\t\t\t{\n\t\t\t\tif (opt.value == value)\n\t\t\t\t{\n\t\t\t\t\tlabel = opt.label;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn label;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the `selectTooltip` field value. \n\t */\n\tprivate _setSelectTooltip(): void\n\t{\n\t\tif (this.content.formControl.value != undefined)\n\t\t{\n\t\t\tthis._doTranslation(this._findLabel(this.content.formControl.value));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectTooltip = '';\n\t\t}\n\t}\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\n\n/**\n * Represents a control that allows the writing of a text. \n */\n@Component({\n    selector: 'input-text',\n    templateUrl: './text-input.component.html',\n    styleUrls: ['./text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputTextComponent extends InputControl implements OnInit\n{\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputTextComponent`'s `content.formControl` value by default. \n     * @param validatorArguments An object that has only one field of `pattern` name and its value is a string. \n     * The `pattern` name is the validator name and the value is the value that the validator needs to check. \n     * For example, you can call the `getFormControlByDefault` method in this way: \n     * InputTextComponent.getFormControlByDefault({ 'pattern': '^[a-zA-Z][a-zA-Z\\-\\_\\ 0-9]*$' });\n     * If this argument is not specified, by default its value is `undefined`. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        return new FormControl('', (((validatorArguments) && (validatorArguments.pattern)) ? [Validators.pattern(validatorArguments.pattern)] : [ ]));\n    }\n\n    public constructor()\n    {\n        super();\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n        this.init('', '', false, true);\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string. \n     */\n    public getErrorMessage(): string\n    {\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the identifier errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return this.validationError_required;\n            }\n            else\n            {\n                /* It is `validationErrors[Validators.pattern.name]`. */\n                return 'TOCO_NG_ERROR_MSG_TEXTO_INVAL';\n            }\n        }\n\n        return '';\n    }\n}\n","\n/**\n * Data structure for holding an url. \n */\nexport class UrlValue\n{\n\t/**\n\t * Represents the url label. \n\t */\n\tpublic static readonly url_Label: string = 'Url';\n\n\t/**\n\t * Represents the url placeholder.\n\t */\n\tpublic static readonly url_Placeholder: string = 'https://www.google.com/';\n\n\t/**\n\t * The url value.\n\t */\n\tpublic url: string;\n\n\tpublic constructor(u: string)\n\t{\n\t\tthis.url = u;\n\t}\n\n    /**\n     * Returns a string representation of this `UrlValue` object. \n     */\n\t public toString(): string\n\t {\n\t\treturn UrlValue.url_Label + ' ' + this.url;\n\t }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, ValidationErrors } from '@angular/forms';\n\nimport { UrlValue } from './url-value';\nimport { InputControl } from '../input.control';\nimport { ValidatorArguments } from '../../form-field.control';\n\n/**\n * Represents a control that allows the writing of a url.\n * It uses the `UrlValue.url_Label` as a label if the `content.label` is not specified. \n * It uses the `UrlValue.url_Placeholder` as a placeholder if the `content.placeholder` is not specified. \n */\n@Component({\n    selector: 'input-url',\n    templateUrl: '../text/text-input.component.html',\n    styleUrls: ['../text/text-input.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class InputUrlComponent extends InputControl implements OnInit\n{\n    /**\n     * Returns a `FormControl` by default. \n     * It is used to initialized the `InputUrlComponent`'s `content.formControl` value by default. \n     * In this case, the `validatorArguments` argument is always `undefined`. \n     */\n    public static getFormControlByDefault(validatorArguments: ValidatorArguments = undefined): FormControl\n    {\n        // const reg = '/(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)/gi';\n        // const reg2 = '[a-z.]*';\n        const reg3 = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n        return new FormControl('', [\n            Validators.pattern(reg3)\n            // Validators.pattern('/(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)/i')\n            // Validators.pattern(/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/i)\n        ]);\n    }\n\n    public constructor()\n    {\n        super();\n    }\n\n    public ngOnInit(): void\n    {\n        /* Sets the default values. */\n        this.init(UrlValue.url_Label, UrlValue.url_Placeholder, false, true);\n    }\n\n    /**\n     * Returns an error string if the control is in an error state; otherwise, empty string.\n     */\n    public getErrorMessage(): string\n    {\n        let validationErrors: ValidationErrors = this.content.formControl.errors;\n\n        /* Shows the url errors. */\n        if (validationErrors)\n        {\n            if (validationErrors[Validators.required.name])\n            {\n                return this.validationError_required;\n            }\n            else\n            {\n                /* It is `validationErrors[Validators.pattern.name]`. */\n                return 'TOCO_NG_ERROR_MSG_URL_INVAL';\n            }\n        }\n\n        return '';\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  AbstractControl,\n  ValidationErrors,\n  FormGroup\n} from \"@angular/forms\";\nimport { Observable, PartialObserver } from \"rxjs\";\nimport { startWith, map } from \"rxjs/operators\";\nimport { TaxonomyService } from '../../../backend/public-api';\nimport { VocabulariesInmutableNames, TermNode, Term } from '../../../entities/public-api';\n\nimport { InputControl } from '../../input/input.control';\n\nimport { Response } from '../../../core/public-api';\n\ninterface VocabularyComponentExtraContent{\n  multiple: boolean;\n  selectedTermsIds: [];\n  excludeTermsIds: [];\n\n  level: number;\n\n  vocab: VocabulariesInmutableNames;\n}\n\n/**\n * A control to select a term or terms in a vocabulary.\n */\n@Component({\n  selector: \"toco-vocabulary\",\n  templateUrl: \"./vocabulary.component.html\",\n  styleUrls: [\"./vocabulary.component.scss\"],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\"\n  }\n})\nexport class VocabularyComponent extends InputControl\n  implements OnInit {\n\n  // internalControl = new FormControl();\n\n  //this control is used by the chips,not necessary to expose it\n  chipsFormControl = new FormControl();\n  inputId: string;\n  filteredOptions: Observable<TermNode[]>;\n  chipsList: TermNode[] = [];\n  selectOptions: TermNode[] = [];\n\n  terms: TermNode[] = [];\n\n  loading = true;\n\n  extraContent: VocabularyComponentExtraContent;\n\n  // selectedTermsIds = [];\n\n  searchText = \"Seleccione las opciones\";\n\n  private termsTreeObserver: PartialObserver<Response<any>> = {\n    next: (response: Response<any>) => {\n      console.log(\"VOCABULARY COMPONENT RESPONSE \",response)\n      console.log(response.data.tree);\n\n      this.terms = response.data.tree.term_node;\n\n      this.terms.forEach(element => {\n        this.selectOptions = this.selectOptions.concat(\n          this._get_terms(element)\n        );\n      });\n\n    },\n\n    error: (err: any) => {\n      console.log(\"The observable got an error notification: \" + err + \".\");\n    },\n\n    complete: () => {\n      console.log(\"The observable got a complete notification.\");\n      this.loading = !this.loading;\n    }\n  };\n\n  constructor(private service: TaxonomyService)\n  {\n    super();\n  }\n\n  ngOnInit()\n  {\n    this.init('', '', false, true);\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.internalControl\n    // );\n\n    if (this.content.required) {\n      this.content.formControl.setValidators(\n        (control: AbstractControl): ValidationErrors | null => {\n          return !this.content.value || this.content.value.length == 0\n            ? { requiredTerms: \"No Terms Selected\" }\n            : null;\n        }\n      );\n    }\n\n    this.inputId = this.content.label.trim().toLowerCase();\n    if (this.content.extraContent) {\n      this.extraContent = this.content.extraContent;\n\n      // if (this.extraContent.multiple !== null) {\n      //   this.multiple = this.extraContent.multiple;\n      // }\n      // if (this.extraContent.selectedTermsIds) {\n      //   this.content.value = this.extraContent.selectedTermsIds;\n      // } else {\n      //   this.content.value = [];\n      // }\n\n      // already selected terms\n      if (!this.extraContent.selectedTermsIds) {\n        this.extraContent.selectedTermsIds = [];\n      }\n\n      // terms ids to exclude of the possible options.\n      if (!this.extraContent.excludeTermsIds) {\n        this.extraContent.excludeTermsIds = [];\n      }\n      this.content.value = [];\n\n      if (this.extraContent.level == undefined) {\n        this.extraContent.level = 10;\n      }\n      if (this.extraContent.vocab) {\n        // this.vocab = this.extraContent.vocab;\n        this.service\n          .getTermsTreeByVocab(this.extraContent.vocab, this.extraContent.level)\n          .subscribe(this.termsTreeObserver);\n      }\n    //   else if(this.extraContent.termID){\n    //     this.service.getTermByUUID(this.extraContent.termID, this.extraContent.level)\n    //     .subscribe(this.termsTreeObserver);\n    // }\n      this._updateFilteredOptions();\n    }\n  }\n\n  private setValidation() {\n    if (this.content.formControl.valid) {\n      this.chipsFormControl.setErrors(null);\n    } else {\n      this.chipsFormControl.setErrors({ requiered: true });\n    }\n  }\n  private addTermToValue(term: Term) {\n    if (this.extraContent.multiple) {\n      this.content.value.unshift(term);\n    } else {\n      this.content.value = [term];\n    }\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n  }\n\n  private removeTermFromValue(term: Term) {\n    this.content.value = (this.content.value as []).filter(\n      (e: Term) => e.id !== term.id\n    );\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n  }\n\n  private _updateFilteredOptions() {\n    this.filteredOptions = this.chipsFormControl.valueChanges.pipe<\n      string,\n      TermNode[]\n    >(\n      startWith(\"\"),\n      map(value => {\n        const filterValue = value ? value.toLowerCase() : \"\";\n        console.log('************************************')\n        console.log(this.selectOptions);\n        console.log('************************************')\n\n        return this.selectOptions.filter(option =>\n          option.term.identifier.toLowerCase().includes(filterValue)\n        );\n      })\n    );\n  }\n\n  private _get_terms(node: TermNode, parent: TermNode = null): TermNode[] {\n    let result: TermNode[] = [];\n    node.parent = parent;\n    // if is in selected terms ids list, then is part of the value\n    if (\n      (this.extraContent.selectedTermsIds as []).some(\n        id => id === node.term.uuid\n      )\n    ) {\n      this.addTermToValue(node.term);\n      this.chipsList.push(node);\n    } else {\n      // if is not in any of the exclude term ids, then push\n      if (\n        !(this.extraContent.excludeTermsIds as []).some(\n          id => id === node.term.uuid\n        )\n      ) {\n        result.push(node);\n      }\n    }\n    if(node.children){\n      node.children.forEach(child => {\n        result = result.concat(this._get_terms(child, node));\n      });\n    }\n\n\n    return result;\n  }\n\n  addChips(value: TermNode) {\n    if (this.extraContent.multiple) {\n      this.chipsList.unshift(value);\n    } else {\n      // if not is multiple, then the element in the chipsList goes back to the options\n      if (this.chipsList.length > 0) {\n        this.selectOptions.push(this.chipsList[0]);\n      }\n      this.chipsList = [value];\n    }\n    this.addTermToValue(value.term);\n    this.selectOptions = this.selectOptions.filter(\n      option => option.term.id !== value.term.id\n    );\n\n    this.chipsFormControl.setValue(\"\");\n    // document.getElementById(this.inputId).blur();\n    this._updateFilteredOptions();\n  }\n\n  removeChip(index: number) {\n    this.selectOptions.push(this.chipsList[index]);\n    this.removeTermFromValue(this.chipsList[index].term);\n    this.chipsList.splice(index, 1);\n    this._updateFilteredOptions();\n  }\n\n  getTermNameInATree(node: TermNode) {\n    if (node.parent != null) {\n      return this.getTermNameInATree(node.parent) + \" / \" + node.term.description;\n    } else {\n      return node.term.description;\n    }\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  AbstractControl,\n  ValidationErrors,\n  FormGroup,\n} from \"@angular/forms\";\nimport { Observable, PartialObserver } from \"rxjs\";\nimport { startWith, map } from \"rxjs/operators\";\nimport { TaxonomyService } from '../../../backend/public-api';\nimport { VocabulariesInmutableNames, TermNode, Term } from '../../../entities/public-api';\n\nimport { InputControl } from '../../input/input.control';\n\nimport { Response } from '../../../core/public-api';\n\n\ninterface VocabularyComponentExtraContent {\n  multiple: boolean;\n  selectedTermsIds: [];\n  excludeTermsIds: [];\n\n  level: number;\n\n  vocab: VocabulariesInmutableNames;\n}\n\n/**\n * A control to select a term or terms in a vocabulary.\n */\n@Component({\n  selector: \"toco-vocabulary-tree\",\n  templateUrl: \"./vocabulary-tree.component.html\",\n  styleUrls: [\"./vocabulary-tree.component.scss\"],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\",\n  },\n})\nexport class VocabularyTreeComponent extends InputControl\n  implements OnInit {\n  // internalControl = new FormControl();\n\n  //this control is used by the chips,not necessary to expose it\n  chipsFormControl = new FormControl();\n\n  levelsOptions: Array<TermNode[]> = null;\n  levelsSelection: Array<Term> = new Array<Term>();\n\n  lastLevelTerm: Term = null;\n\n  inputId: string;\n  filteredOptions: Observable<TermNode[]>;\n  chipsList: TermNode[] = [];\n  leafsOptions: TermNode[] = null;\n\n  terms: TermNode[] = [];\n\n  loading = true;\n\n  extraContent: VocabularyComponentExtraContent;\n\n  // selectedTermsIds = [];\n\n  searchText = \"Seleccione las opciones\";\n\n  constructor(private service: TaxonomyService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.init('', '', false, true);\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.content.formControl\n    // );\n    if (this.content.required) {\n      this.content.formControl.setValidators(\n        (control: AbstractControl): ValidationErrors | null => {\n          return !this.content.value || this.content.value.length == 0\n            ? { requiredTerms: \"No Terms Selected\" }\n            : null;\n        }\n      );\n    }\n\n    this.inputId = this.content.label.trim().toLowerCase();\n    if (this.content.extraContent) {\n      this.extraContent = this.content.extraContent;\n\n      // already selected terms\n      if (!this.extraContent.selectedTermsIds) {\n        this.extraContent.selectedTermsIds = [];\n      }\n\n      // terms ids to exclude of the possible options.\n      if (!this.extraContent.excludeTermsIds) {\n        this.extraContent.excludeTermsIds = [];\n      }\n      this.content.value = [];\n      this.content.formControl.setValue(this.content.value);\n\n      if (this.extraContent.level == undefined) {\n        this.extraContent.level = 10;\n      }\n      if (this.extraContent.vocab) {\n        this.loading = true;\n        this.service.getTermsTreeByVocab(this.extraContent.vocab, 0).subscribe(\n          (response: Response<any>) => {\n            this.loading = false;\n            const nextLevel = response.data.tree.term_node;\n            if (this.extraContent.level > 0) {\n              this.levelsOptions = new Array<TermNode[]>();\n              // this.levelsSelection = new Array<TermNode>();\n              this._setLevelsOptions(nextLevel, 0);\n            } else {\n              this.leafsOptions = this._get_terms(nextLevel);\n              this._updateFilteredOptions();\n            }\n          },\n\n          (err: any) => {\n            console.log(\n              \"The observable got an error notification: \" + err + \".\"\n            );\n          },\n\n          () => {\n            console.log(\"The observable got a complete notification.\");\n            this.loading = !this.loading;\n          }\n        );\n      }\n      //   else if(this.extraContent.termID){\n      //     this.service.getTermByUUID(this.extraContent.termID, this.extraContent.level)\n      //     .subscribe(this.termsTreeObserver);\n      // }\n    }\n  }\n  private _setLevelsOptions(nextLevel: TermNode[], level: number) {\n    console.log('VOCABULARY TREE *****')\n    console.log(this.extraContent.selectedTermsIds, nextLevel)\n    let result: TermNode[] = [];\n    nextLevel.forEach((node) => {\n      if (\n        !(this.extraContent.excludeTermsIds as []).some(\n          (id) => id === node.term.uuid\n        )\n      ) {\n        result.push(node);\n      }\n\n      if (\n        (this.extraContent.selectedTermsIds as []).some(\n          (id) => id === node.term.uuid\n\n        )\n      ) {\n        this.onSelectionChange(level, node.term)\n        // this.addTermToValue(node.term);\n        // this.levelsSelection[level] = node.term;\n      }\n\n\n    });\n    this.levelsOptions.push(result);\n  }\n  onSelectionChange(level, item: Term) {\n    console.log(level, item);\n    this.leafsOptions = null;\n    this.chipsList = [];\n    this.loading = true;\n    this.lastLevelTerm = item;\n    this.levelsOptions = this.levelsOptions.slice(0, level+1);\n\n    // this.removeTermFromValue(this.levelsSelection[level]);\n    // this.levelsSelection[level] = item;\n    // this.addTermToValue(this.levelsSelection[level]);\n\n    this.content.value = [];\n\n    this.levelsSelection = this.levelsSelection.slice(0, level);\n    this.levelsSelection.push(item);\n    this.levelsSelection.forEach(element => {\n      this.addTermToValue(element, false);\n    });\n\n    this.service.getTermByUUID(item.uuid, 1).subscribe(\n      (response: Response<any>) => {\n        console.log(response);\n        this.loading = false;\n        const nextLevel = response.data.term_node.children;\n        if (this.extraContent.level > level + 1) {\n          this._setLevelsOptions(nextLevel, level);\n        } else {\n          this.leafsOptions = this._get_terms(nextLevel);\n          this._updateFilteredOptions();\n        }\n      },\n\n      (err: any) => {\n        console.log(\"The observable got an error notification: \" + err + \".\");\n      },\n\n      () => {\n        console.log(\"The observable got a complete notification.\");\n        this.loading = !this.loading;\n      }\n    );\n  }\n\n  private setValidation() {\n    if (this.content.formControl.valid) {\n      this.chipsFormControl.setErrors(null);\n    } else {\n      this.chipsFormControl.setErrors({ requiered: true });\n    }\n  }\n\n\n  private addTermToValue(term: Term, isLeaf=true) {\n    if (this.extraContent.multiple) {\n      this.content.value.unshift(term);\n    } else {\n      this.content.value = [];\n      this.levelsSelection.forEach(element => {\n        this.content.value.unshift(element);\n      });\n      this.content.value.unshift(term);\n    }\n    console.log(this.content.value)\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n    console.log(this.content.formControl);\n\n  }\n\n  private removeTermFromValue(term: Term) {\n    this.content.value = (this.content.value as []).filter(\n      (e: Term) => e.id !== term.id\n    );\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n    console.log(this.content.formControl);\n  }\n\n  private _updateFilteredOptions() {\n    this.filteredOptions = this.chipsFormControl.valueChanges.pipe<\n      string,\n      TermNode[]\n    >(\n      startWith(\"\"),\n      map((value) => {\n        const filterValue = value ? value.toLowerCase() : \"\";\n        return this.leafsOptions.filter((option) =>\n          option.term.description.toLowerCase().includes(filterValue)\n        );\n      })\n    );\n  }\n\n  private _get_terms(nodes: TermNode[]): TermNode[] {\n    this.chipsList = [];\n    let result: TermNode[] = [];\n    nodes.forEach((node) => {\n      if (\n        (this.extraContent.selectedTermsIds as []).some(\n          (id) => id === node.term.uuid\n        )\n      ) {\n        this.addTermToValue(node.term);\n        this.chipsList.push(node);\n      } else {\n        // if is not in any of the exclude term ids, then push\n        if (\n          !(this.extraContent.excludeTermsIds as []).some(\n            (id) => id === node.term.uuid\n          )\n        ) {\n          result.push(node);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  addChips(value: TermNode) {\n    if (this.extraContent.multiple) {\n      this.chipsList.unshift(value);\n    } else {\n      // if not is multiple, then the element in the chipsList goes back to the options\n      if (this.chipsList.length > 0) {\n        this.leafsOptions.push(this.chipsList[0]);\n      }\n      this.chipsList = [value];\n    }\n    console.log(value, this.chipsList);\n    this.addTermToValue(value.term);\n    this.leafsOptions = this.leafsOptions.filter(\n      (option) => option.term.id !== value.term.id\n    );\n\n    this.chipsFormControl.setValue(\"\");\n    // document.getElementById(this.inputId).blur();\n    this._updateFilteredOptions();\n  }\n\n  removeChip(index: number) {\n    this.leafsOptions.push(this.chipsList[index]);\n    this.removeTermFromValue(this.chipsList[index].term);\n    this.chipsList.splice(index, 1);\n    this._updateFilteredOptions();\n  }\n\n  getTermNameInATree(node: TermNode) {\n    if (node.parent != null) {\n      return (\n        this.getTermNameInATree(node.parent) + \" / \" + node.term.description\n      );\n    } else {\n      return node.term.description;\n    }\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\n\n\nimport { FormFieldControl_Experimental } from '../form-field.control.experimental';\nimport { InputControl } from '../../input/input.control';\nimport { Term, TermNode } from '../../../entities/public-api';\n\n@Component({\n    selector: 'toco-term-parent',\n    templateUrl: './term-parent.component.html',\n    styleUrls: ['./term-parent.component.scss'],\n    host: {\n        '[style.minWidth]': 'content.minWidth',\n        '[style.width]': 'content.width'\n    }\n})\nexport class TermParentComponent extends InputControl implements OnInit {\n\n    // internalControl = new FormControl();\n\n\n    formControl = new FormControl();\n    inputId: string;\n    filteredOptions: Observable<Term[]>;\n    selectOptions: Term[] = [];\n    currentTerm: Term = null;\n    parentTerm: Term = null;\n\n    constructor()\n    {\n        super();\n    }\n\n    ngOnInit() {\n\n      this.init('', '', false, true);\n        // (this.content.parentFormSection as FormGroup).addControl(\n        //     this.content.name,\n        //     this.internalControl\n        //   );\n\n        console.log(this.content.value)\n        console.log(this.content.required);\n\n        console.log(this.content.required && (this.content.value == 0 || this.content.value == null || this.content.value == undefined));\n\n        if (this.content.required) {\n            this.content.formControl.setValidators((control: AbstractControl): ValidationErrors | null => {\n                return (control.value == 0 || control.value == null || control.value == undefined)\n                    ? { 'requiredTerms': 'No Terms Selected' }\n                    : null;\n            });\n        }\n        this.setValueToInternalControl();\n\n\n        this.inputId = this.content.label.trim().toLowerCase();\n        if (this.content.extraContent && this.content.extraContent.terms) {\n\n            if (this.content.extraContent.currentTerm) {\n                this.currentTerm = this.content.extraContent.currentTerm;\n            }\n\n            (this.content.extraContent.terms as TermNode[]).forEach(element => {\n                this.selectOptions = this.selectOptions.concat(this._get_terms(element));\n            });\n\n            this._updateFilteredOptions();\n        }\n    }\n\n    private _updateFilteredOptions() {\n        this.filteredOptions = this.formControl.valueChanges.pipe<string, Term[]>(\n            startWith(''),\n            map(value => {\n                const filterValue = value.toLowerCase();\n                return this.selectOptions.filter(option => option.identifier.toLowerCase().includes(filterValue));\n            }));\n    }\n\n    private _get_terms(node: TermNode): Term[] {\n        let result: Term[] = [];\n        if (!this.currentTerm) {\n            result.push(node.term);\n        } else {\n            if (this.currentTerm.id !== node.term.id) {\n                if (this.currentTerm.parent_id && this.currentTerm.parent_id === node.term.id) {\n                    this.parentTerm = node.term;\n                } else {\n                    result.push(node.term);\n                }\n            }\n        }\n\n        node.children.forEach(child => {\n            result = result.concat(this._get_terms(child));\n        });\n\n        return result;\n    }\n\n    addParent(value: Term) {\n\n        this.parentTerm = value;\n        this.selectOptions = this.selectOptions.filter(option => option.id !== value.id);\n\n        this.formControl.setValue('');\n        this._updateFilteredOptions();\n        // document.getElementById(this.inputId).blur();\n\n        (this.currentTerm) ? this.currentTerm.parent_id = this.parentTerm.id : this.parentTerm.id;\n        this.setValueToInternalControl();\n    }\n\n    removeParent() {\n        this.selectOptions.push(this.parentTerm);\n        this._updateFilteredOptions();\n        this.parentTerm = null;\n        this.setValueToInternalControl();\n    }\n\n    private setValueToInternalControl(){\n        if( this.parentTerm == null){\n            this.content.value = null;\n            this.content.formControl.setValue(null);\n        }else{\n            this.content.value = this.parentTerm.id;\n            this.content.formControl.setValue(this.content.value);\n        }\n\n        if (this.content.formControl.valid){\n            this.formControl.setErrors(null);\n        }else{\n            this.formControl.setErrors({requiered:true});\n        }\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { InputControl } from '../../input/input.control';\n\n/**\n * This interface is deprecated. \n * An interface that represents a selectable option. \n */\ninterface SelectOption\n{\n\t/**\n\t * Returns the label that is showed. \n\t */\n\tlabel: string;\n\n\t/**\n\t * Returns the value that is stored internally. \n\t */\n\tvalue: any;\n\n\t/**\n\t * Returns true if this option is selected; otherwise, false. \n\t */\n\t// selected?: boolean;\n}\n\n/**\n * This component is deprecated. \n * The `extraContent` recibe una funcion llamada getOptions() que se encarga de contruir un SelectOption[]. \n * Si es multiple, entonces el `value` es un array de valores. \n */\n@Component({\n\tselector: 'toco-select',\n\ttemplateUrl: './select.component.html',\n\tstyleUrls: ['./select.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class SelectComponent extends InputControl/*FormFieldControl_Experimental*/ implements OnInit\n{\n\t/**\n\t * Returns the options list that can be selected. \n\t * By default, its value is `[]`. \n\t */\n\tpublic selectOptions: SelectOption[];\n\n\t/**\n\t * Returns true if the selection can be multiple; otherwise, false. \n\t * By default, its value is `false`. \n\t */\n\tpublic multiple: boolean;\n\n\tpublic constructor()\n\t{\n        super();\n\n\t\tthis.selectOptions = [ ];\n\t\tthis.multiple = false;\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\tconsole.log('SelectComponent OnInit');\n\n        /* Sets the default values. */\n\t\tthis.init('', '', false, false);\n\n\t\tthis.onSelectionChange();\n\t}\n\n    /**\n     * Initializes the `content` input property. \n     * @param label The default label to use. It is used if the `content.label` is not specified. \n\t * @param placeholder The default placeholder to use. It is used if the `content.placeholder` is not specified. \n     * @param isAbbreviation If it is true then the `label` argument represents an abbreviation; otherwise, false. \n     * @param alwaysHint If it is true then there is always at leat one hint start-aligned. \n     */\n    protected init(label: string | undefined, placeholder: string = '', isAbbreviation: boolean, alwaysHint: boolean): void\n    {\n        /* Sets the default values. */\n\n\t\tsuper.init(label, placeholder, isAbbreviation, alwaysHint);\n\n//\t\tif (this.content.appearance == undefined) this.content.appearance = false;\n\t\tthis.multiple = this.content.extraContent['multiple'] ? this.content.extraContent['multiple'] : false;\n\n\t\tif (this.content.extraContent.observable)\n\t\t{\n\t\t\tthis.content.extraContent.observable.subscribe(\n\n\t\t\t\t// next\n\t\t\t\t(response: any) => {\n\t\t\t\t\tthis.selectOptions = this.content.extraContent.getOptions(response);\n\t\t\t\t},\n\n\t\t\t\t// error\n\t\t\t\t(error: any) => { console.log(error); }\n\t\t\t\t,\n\n\t\t\t\t// complete\n\t\t\t\t() => { }\n\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectOptions = this.content.extraContent.getOptions();\n\t\t}\n    }\n\n\tpublic onSelectionChange(): void\n\t{\n\t\tif ((this.content.extraContent) && (this.content.extraContent.selectionChange))\n\t\t{\n\t\t\tthis.content.extraContent.selectionChange(this.content.value);\n\t\t}\n\n\t\tconsole.log('Select value: ', this.content.formControl.value);\n\t}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormFieldControl_Experimental } from \"../form-field.control.experimental\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { InputControl } from '../../input/input.control';\n\n@Component({\n  selector: \"toco-textarea\",\n  templateUrl: \"./textarea.component.html\",\n  styleUrls: [\"./textarea.component.scss\"],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\",\n  },\n})\nexport class TextareaComponent extends InputControl\n  implements OnInit {\n  // internalControl = new FormControl();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.init('', '', false, true);\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.internalControl\n    // );\n    // console.log(this.content);\n    // this.content.formControl.setValue(this.content.value);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, FormControl, ValidationErrors } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { isArray } from \"util\";\nimport { InputControl } from '../../input/input.control';\nimport { SelectOption } from \"../../input/select/select-input.component\";\n\n\n\ninterface SelectFilterComponentExtraContent{\n  multiple: boolean;\n  selectedTermsIds: [];\n  excludeTermsIds: [];\n\n}\n\n\n\n@Component({\n  selector: \"toco-select-filter\",\n  templateUrl: \"./select-filter.component.html\",\n  styleUrls: [\"./select-filter.component.scss\"],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\",\n  },\n})\nexport class SelectFilterComponent extends InputControl\n  implements OnInit {\n  //   internalControl = new FormControl();\n\n  // internalControl = new FormControl();\n\n  //this control is used by the chips,not necessary to expose it\n  chipsFormControl = new FormControl();\n  inputId: string;\n  filteredOptions: Observable<SelectOption[]>;\n  chipsList: SelectOption[] = [];\n  selectOptions: SelectOption[] = [];\n\n  terms: SelectOption[] = [];\n\n  loading = true;\n\n  extraContent: SelectFilterComponentExtraContent;\n\n  // selectedTermsIds = [];\n\n  searchText = \"Seleccione las opciones\";\n\n\n  constructor()\n  {\n    super();\n  }\n\n  ngOnInit()\n  {\n    this.init('', '', false, true);\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.internalControl\n    // );\n\n    if (this.content.required) {\n      this.content.formControl.setValidators(\n        (control: AbstractControl): ValidationErrors | null => {\n          return !this.content.value || this.content.value.length == 0\n            ? { requiredTerms: \"No Terms Selected\" }\n            : null;\n        }\n      );\n    }\n\n    this.inputId = this.content.label.trim().toLowerCase();\n    if (this.content.extraContent) {\n      this.extraContent = this.content.extraContent;\n\n      // if (this.extraContent.multiple !== null) {\n      //   this.multiple = this.extraContent.multiple;\n      // }\n      // if (this.extraContent.selectedTermsIds) {\n      //   this.content.value = this.extraContent.selectedTermsIds;\n      // } else {\n      //   this.content.value = [];\n      // }\n\n      // already selected terms\n      if (!this.extraContent.selectedTermsIds) {\n        this.extraContent.selectedTermsIds = [];\n      }\n\n      // terms ids to exclude of the possible options.\n      if (!this.extraContent.excludeTermsIds) {\n        this.extraContent.excludeTermsIds = [];\n      }\n      this.content.value = [];\n\n      if (this.content.extraContent.observable) {\n        this.content.extraContent.observable.subscribe(\n          // next\n          (response: any) => {\n            this.selectOptions = this.content.extraContent.getOptions(response);\n            this.selectOptionsLoaded();\n          },\n\n          // error\n          (error: any) => {\n            console.log(error);\n          },\n          // complete\n          () => {}\n        );\n      } else {\n        this.selectOptions = this.content.extraContent.getOptions();\n        this.selectOptionsLoaded();\n      }\n    //   else if(this.extraContent.termID){\n    //     this.service.getTermByUUID(this.extraContent.termID, this.extraContent.level)\n    //     .subscribe(this.termsTreeObserver);\n    // }\n      // this._updateFilteredOptions();\n    }\n  }\n\n\n  private selectOptionsLoaded() {\n    this.selectOptions.forEach((option) => {\n      if (\n        (this.extraContent.selectedTermsIds as []).some(\n          val => val === option.value\n        )\n      ){\n        this.addChips(option);\n      }\n\n      // if (this.extraContent.multiple) {\n      //   try {\n      //     const index = this.content.value.indexOf(option.value);\n      //     if (index >= 0) {\n      //       this.addChips(option);\n      //     }\n      //   } catch (error) {}\n      // } else {\n      //   if (option.value == this.content.value) {\n      //     this.addChips(option);\n      //   }\n      // }\n    });\n    if (\n      this.extraContent.multiple &&\n      (this.content.value == null ||\n        this.content.value == undefined ||\n        !isArray(this.content.value))\n    ) {\n      this.content.value = [];\n    }\n\n    this._updateFilteredOptions();\n    this.loading = false;\n  }\n\n  private setValidation() {\n    if (this.content.formControl.valid) {\n      this.chipsFormControl.setErrors(null);\n    } else {\n      this.chipsFormControl.setErrors({ requiered: true });\n    }\n  }\n  private addTermToValue(term: SelectOption) {\n    if (this.extraContent.multiple) {\n      this.content.value.unshift(term);\n    } else {\n      this.content.value = [term];\n    }\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n  }\n\n  private removeTermFromValue(term: SelectOption) {\n    this.content.value = (this.content.value as []).filter(\n      (e: SelectOption) => e.value !== term.value\n    );\n    this.content.formControl.setValue(this.content.value);\n    this.setValidation();\n  }\n\n  private _updateFilteredOptions() {\n    this.filteredOptions = this.chipsFormControl.valueChanges.pipe<\n      string,\n      SelectOption[]\n    >(\n      startWith(\"\"),\n      map(value => {\n        const filterValue = value ? value.toLowerCase() : \"\";\n        console.log('************************************')\n        console.log(this.selectOptions);\n        console.log('************************************')\n\n        return this.selectOptions.filter(option =>\n          option.label.toLowerCase().includes(filterValue)\n        );\n      })\n    );\n  }\n\n\n\n  addChips(value: SelectOption) {\n    if (this.extraContent.multiple) {\n      this.chipsList.unshift(value);\n    } else {\n      // if not is multiple, then the element in the chipsList goes back to the options\n      if (this.chipsList.length > 0) {\n        this.selectOptions.push(this.chipsList[0]);\n      }\n      this.chipsList = [value];\n    }\n    this.addTermToValue(value);\n    // console.log(this.selectOptions);\n    this.selectOptions = this.selectOptions.filter(\n      option => option.value !== value.value\n    );\n    // console.log(this.selectOptions);\n\n    this.chipsFormControl.setValue(\"\");\n    // document.getElementById(this.inputId).blur();\n    this._updateFilteredOptions();\n  }\n\n  removeChip(index: number) {\n    // console.log(this.selectOptions);\n\n    this.selectOptions.push(this.chipsList[index]);\n    // console.log(this.selectOptions);\n    this.removeTermFromValue(this.chipsList[index]);\n    this.chipsList.splice(index, 1);\n    this._updateFilteredOptions();\n  }\n\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { FlatTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeFlattener, MatTreeFlatDataSource } from \"@angular/material\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { of } from \"rxjs\";\n\nimport { FormFieldControl_Experimental } from \"../form-field.control.experimental\";\nimport { SelectOption } from '../../input/select/select-input.component';\nimport { InputControl } from '../../input/input.control';\n\nexport interface SelectOptionNode {\n  element: SelectOption;\n  parent?: SelectOptionNode;\n  children?: SelectOptionNode[];\n}\n\nexport interface FlatTreeNode {\n  name: string;\n  level: number;\n  expandable: boolean;\n  element: SelectOption;\n}\ninterface TreeFilterData {\n  selectOptions: SelectOptionNode[];\n  type: string;\n  placeholder: string;\n  text: string;\n  field: string;\n  index: number;\n  value: any;\n  idVocab: number;\n}\n\n@Component({\n  selector: \"toco-select-tree\",\n  templateUrl: \"./select-tree.component.html\",\n  styleUrls: [\"./select-tree.component.scss\"]\n})\nexport class SelectTreeComponent extends InputControl\n  implements OnInit {\n  data: SelectOptionNode[];\n\n  // internalControl = new FormControl();\n\n  treeControl: FlatTreeControl<FlatTreeNode>;\n  treeFlattener: MatTreeFlattener<SelectOptionNode, FlatTreeNode>;\n  dataSource: MatTreeFlatDataSource<SelectOptionNode, FlatTreeNode>;\n  checklistSelection = new SelectionModel<FlatTreeNode>(true /* multiple */);\n\n  constructor() {\n    super();\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren\n    );\n\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(\n      this.treeControl,\n      this.treeFlattener\n    );\n  }\n\n  ngOnInit() {\n\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.internalControl\n    // );\n\n    this.init('', '', false, true);\n    if (this.content.extraContent){\n      if (this.content.extraContent.observable) {\n        this.content.extraContent.observable.subscribe(\n          // next\n          (response: any) => {\n            console.log(response);\n\n            this.data = this.content.extraContent.getOptions(response);\n            console.log(this.data);\n            this.dataSource.data = this.data;\n            console.log(this.dataSource);\n            this.content.extraContent.selectedTermsIds.forEach((uuid:string) => {\n              console.log(uuid);\n\n              this.treeControl.dataNodes.forEach(node => {\n\n\n                if (node.element.value == uuid){\n                  console.log(node);\n\n                  if(node.expandable){\n                    this.itemSelectionToggle(node);\n                  } else {\n                    this.leafItemSelectionToggle(node);\n                  }\n                }\n              })\n            });\n          },\n\n          // error\n          (error: any) => {\n            console.log(error);\n          },\n          // complete\n          () => {}\n        );\n      } else {\n        this.data = this.content.extraContent.getOptions();\n        this.dataSource.data = this.data;\n      }\n      if (!this.content.extraContent.selectedTermsIds) {\n        this.content.extraContent.selectedTermsIds = [];\n      }\n    }\n\n\n    this.content.value = \"\";\n  }\n\n  remove_component() {}\n\n  onChange() {\n    console.log(\"ttree change\");\n  }\n\n  emitSelection() {\n    this.content.formControl.setValue(this.checklistSelection.selected);\n\n    // this.content.extraContent.selectionChange(this.checklistSelection.selected)\n    // var valueEmiter = \"OR\";\n    // this.checklistSelection.selected.forEach(node => {\n    //   valueEmiter = valueEmiter + \",\" + node.element.value;\n    // });\n\n    // if (this.content.extraContent.selectionChange) {\n    //   this.content.extraContent.selectionChange(this.content.value);\n    // }\n  }\n\n  /** Transform the data to something the tree can read. */\n  transformer(node: SelectOptionNode, level: number) {\n    const result = {\n      name: node.element.label,\n      level: level,\n      expandable: node.children.length > 0,\n      element: node.element\n    };\n    return result;\n  }\n\n  /** Get the level of the node */\n  getLevel(node: FlatTreeNode) {\n    return node.level;\n  }\n\n  /** Get whether the node is expanded or not. */\n  isExpandable(node: FlatTreeNode) {\n    return node.expandable;\n  }\n\n  /** Get whether the node has children or not. */\n  hasChild(index: number, node: FlatTreeNode) {\n    return node.expandable;\n  }\n\n  /** Get the children for the node. */\n  getChildren(node: SelectOptionNode) {\n    return of(node.children);\n  }\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: FlatTreeNode): boolean {\n    if (this.treeControl.dataNodes != undefined) {\n      const descendants = this.treeControl.getDescendants(node);\n      const descAllSelected = descendants.every(child =>\n        this.checklistSelection.isSelected(child)\n      );\n      return descAllSelected;\n    }\n    return false;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: FlatTreeNode): boolean {\n    if (this.treeControl.dataNodes != undefined) {\n      const descendants = this.treeControl.getDescendants(node);\n      const result = descendants.some(child =>\n        this.checklistSelection.isSelected(child)\n      );\n      return result && !this.descendantsAllSelected(node);\n    }\n    return false;\n  }\n\n  /** Select/deselect all the descendants node */\n  itemSelectionToggle(node: FlatTreeNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.every(child => this.checklistSelection.isSelected(child));\n    this.checkAllParentsSelection(node);\n    this.emitSelection();\n  }\n\n  /** Check all the parents to see if they changed */\n  leafItemSelectionToggle(node: FlatTreeNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n    this.emitSelection();\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: FlatTreeNode): void {\n    let parent: FlatTreeNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: FlatTreeNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: FlatTreeNode): FlatTreeNode | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormFieldControl_Experimental } from \"../form-field.control.experimental\";\nimport { FormGroup } from \"@angular/forms\";\nimport { InputControl } from '../../input/input.control';\n\n@Component({\n  selector: \"toco-datepicker\",\n  templateUrl: \"./datepicker.component.html\",\n  styleUrls: [\"./datepicker.component.scss\"],\n})\nexport class DatepickerComponent extends InputControl\n  implements OnInit {\n\n        // TODO: for datepicker, !!!! use https://stackblitz.com/edit/angular-material2-year-picker-7z9k4t?file=app%2Fcustom-datepicker%2Fyear-picker-component%2Fyear-picker.component.html\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.init('', '', false, true);\n    // (this.content.parentFormSection as FormGroup).addControl(\n    //   this.content.name,\n    //   this.internalControl\n    // );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormFieldControl_Experimental } from '../form-field.control.experimental';\nimport { FormGroup } from '@angular/forms';\nimport { InputControl } from '../../input/input.control';\n\n@Component({\n  selector: 'toco-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends InputControl\nimplements OnInit {\n\nconstructor() {\n  super();\n}\n\nngOnInit() {\n  this.init('', '', false, true);\n  // (this.content.parentFormSection as FormGroup).addControl(\n  //   this.content.name,\n  //   this.internalControl\n  // );\n}\n\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { ContainerContent, ContainerControl } from '../container.control';\n\n\n\nexport interface PanelAction {\n  doit(data: any): void;\n}\n\n\n\n/**\n * An interface that represents the content of a panel control.\n */\nexport interface PanelActionContent extends ContainerContent\n{\n    /**\n     * In this case, the `label?: string` field inherited from `FormFieldContent` is interpreted as:\n     * Returns the control's title.\n     * By default, its value is `''`. Each control sets its own label (title).\n     */\n\n    /**\n     * Returns the panel's description.\n     * By default, its value is `undefined`.\n     */\n    description?: string;\n\n    /**\n     * Returns the panel's icon name.\n     * By default, its value is `undefined`.\n     */\n    iconName?: string;\n\n      /**\n     * Returns the action and action labels for each panel.\n     */\n    action?: PanelAction;\n    actionLabel?: string;\n}\n\n/**\n * Represents a container control that is showed as a panel.\n * Usage notes:\n *  - It can be used as:\n * <container-panel [content]=\"panelContent\"></container-panel>\n * Where `content.formSection` is created, for example, as this:\n * this.content.formSection = new FormGroup({ }, [ ]);\n */\n@Component({\n\tselector: 'container-panel-action',\n\ttemplateUrl: './panel-action-container.component.html',\n\tstyleUrls: ['./panel-action-container.component.scss'],\n\thost: {\n\t\t'[style.minWidth]': 'content.minWidth',\n\t\t'[style.width]': 'content.width'\n\t}\n})\nexport class ContainerPanelActionComponent extends ContainerControl implements OnInit\n{\n    /**\n     * Input field that contains the content of this class.\n     */\n    @Input()\n\tpublic content: PanelActionContent;\n\n\tpublic constructor()\n\t{\n        super();\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t/* Sets the default values. */\n        this.init('');\n    }\n\n    /**\n     * Initializes the `content` input property.\n     * @param label The default label to use. It is used if the `content.label` is not specified.\n     */\n    protected init(label: string): void\n    {\n        /* Sets the default values. */\n\n        super.init(label);\n\n        /* The `content.description`, and `content.iconName` fields\n        have the `undefined` value by default. */\n    }\n    public doAction(): void {\n\n      // const data = {};\n      // this.content..formSectionContent.forEach(element => {\n      //   element\n      // });\n      // this.panelsContent.forEach((panel) => {\n      //   panel.formSectionContent.forEach((controlContent) => {\n      //     data[controlContent.name] = controlContent.value;\n      //   });\n      // });\n\n      if (this.content.action) {\n        this.content.action.doit(this.content.value);\n      }\n\n\n    }\n}\n\n","import { InputControl } from '../../input/input.control';\n\nimport { Component, Input, forwardRef, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDatepicker } from '@angular/material';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\n\nimport moment from 'moment';\nimport { defaultFormat as _rollupMoment, Moment } from 'moment';\n// const moment = _rollupMoment || _moment;\n\n\nexport const YEAR_MODE_FORMATS = {\n  parse: {\n    dateInput: 'YYYY',\n  },\n  display: {\n    dateInput: 'YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'toco-datepicker-year',\n  templateUrl: './datepicker-year.component.html',\n  styleUrls: ['./datepicker-year.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: YEAR_MODE_FORMATS },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatepickerYearComponent),\n      multi: true,\n    },\n  ],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\",\n  },\n})\nexport class DatepickerYearComponent  extends InputControl implements OnInit, ControlValueAccessor {\n\n  /** Component label */\n  @Input() label = '';\n\n  _max: Moment;\n  @Input() get max(): number | Date {\n    return this._max ? this._max.year() : undefined;\n  }\n  set max(max: number | Date) {\n    if (max) {\n      const momentDate = typeof max === 'number' ? moment([max, 0, 1]) : moment(max);\n      this._max = momentDate.isValid() ? momentDate : undefined;\n    }\n  }\n\n  _min: Moment;\n  @Input() get min(): number | Date {\n    return this._min ? this._min.year() : undefined;\n  }\n  set min(min: number | Date) {\n    if (min) {\n      const momentDate = typeof min === 'number' ? moment([min, 0, 1]) : moment(min);\n      this._min = momentDate.isValid() ? momentDate : undefined;\n    }\n  }\n\n  @Input() touchUi = false;\n\n  @ViewChild(MatDatepicker, { static: true }) _picker: MatDatepicker<Moment>;\n\n  // _inputCtrl: FormControl = new FormControl();\n\n  // Function to call when the date changes.\n  onChange = (year: Date) => { };\n\n  // Function to call when the input is touched (when a star is clicked).\n  onTouched = () => { };\n\n\n  ngOnInit() {\n    this.init('', '', false, true);\n    // this.value = moment(this.value.toString()).format(\"YYYY\")\n    if (this.label == '') {\n      this.label = this.content.label;\n    }\n\n    this.min = this.content.extraContent.minYear;\n    this.max = this.content.extraContent.maxYear;\n    console.log(this.content.extraContent, 'DATEPICKER YEAR EXTRA CONTENT....', this._min, this._max)\n\n    this.writeValue(new Date(this.content.value));\n   }\n   constructor() { super(); }\n\n\n  writeValue(date: Date): void {\n    if (date && this._isYearEnabled(date.getFullYear())) {\n      const momentDate = moment(date);\n      if (momentDate.isValid()) {\n        this.content.formControl.setValue(moment(date), { emitEvent: false });\n        this.content.value = moment(date).year;\n        // this.content.formControl.setValue(this.content.value);\n\n      }\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  // Allows Angular to disable the input.\n  setDisabledState(isDisabled: boolean): void {\n    isDisabled ? this._picker.disabled = true : this._picker.disabled = false;\n\n    isDisabled ? this.content.formControl.disable() : this.content.formControl.enable();\n  }\n\n  _yearSelectedHandler(chosenDate: Moment, datepicker: MatDatepicker<Moment>) {\n    if (!this._isYearEnabled(chosenDate.year())) {\n      datepicker.close();\n      return;\n    }\n\n    this.content.formControl.setValue(chosenDate, { emitEvent: false });\n    this.content.value = chosenDate.year;\n    // this.content.formControl.setValue(this.content.value);\n    this.onChange(chosenDate.toDate());\n    this.onTouched();\n    datepicker.close();\n  }\n\n  _openDatepickerOnClick(datepicker: MatDatepicker<Moment>) {\n    if (!datepicker.opened) {\n      datepicker.open();\n    }\n  }\n\n  _openDatepickerOnFocus(datepicker: MatDatepicker<Moment>) {\n    setTimeout(() => {\n      if (!datepicker.opened) {\n        datepicker.open();\n      }\n    });\n  }\n\n  /** Whether the given year is enabled. */\n  private _isYearEnabled(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n      (this._max && year > this._max.year()) ||\n      (this._min && year < this._min.year())) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, AbstractControl, ValidationErrors } from '@angular/forms';\n\nimport { InputControl } from '../../input/input.control';\nimport { OrganizationServiceNoAuth } from '../../../backend/organization.service';\nimport { HttpParams } from '@angular/common/http';\nimport { Hit, HitList } from '../../../entities/common';\nimport { Organization } from '../../../entities/organization.entity';\n\ninterface SelectOrgsComponentExtraContent{\n  multiple: boolean;\n  selectedOrgsIds: [];\n  /**\n    * Input `orgFilter` is a dict with `type` and `value` to filter the organizations,\n    * @Example { type: 'country' , value: 'Cuba\" }\n    */\n  orgFilter: { type: string, value: string};\n\n}\n\n@Component({\n  selector: 'toco-select-org',\n  templateUrl: './select-orgs.component.html',\n  styleUrls: ['./select-orgs.component.scss'],\n  host: {\n    \"[style.minWidth]\": \"content.minWidth\",\n    \"[style.width]\": \"content.width\"\n  }\n})\nexport class SelectOrgsComponent extends InputControl\nimplements OnInit {\n\n  /**\n   * Input `orgCtrl` is a FormControl\n   */\n   @Input()\n   orgCtrl = new FormControl();\n\n   filteredOrg = new  HitList<Organization>();\n\n   params= new HttpParams();\n\n\n   @Input()\n   placeholder: string = \"Escriba al menos 3 letras\";\n\n   @Input()\n   label: string = \"Busque una organización\";\n\n   @Input()\n   appearance: string = \"outline\";\n\n   /**\n    * Input `cleaning` is a boolen, if true then clean the search\n    */\n   @Input()\n   cleaning: boolean = false;\n\n   @Output()\n   selectedOrg: EventEmitter<Organization> = new EventEmitter<Organization>();\n\n   chipsList: Hit<Organization>[] = [];\n   extraContent: SelectOrgsComponentExtraContent;\n   loading = false;\n\n   toSearch=0;\n   constructor( private _orgService: OrganizationServiceNoAuth) {  super();}\n\n   ngOnInit() {\n    this.init('', '', false, false);\n    this.extraContent = this.content.extraContent;\n    this.content.value = [];\n\n    this.extraContent.selectedOrgsIds.forEach(uuid => {\n      this._orgService.getOrganizationByUUID(uuid).subscribe({\n        next: (response) => {\n          this.addChips(response);\n        }\n    });\n    });\n     this.params = this.params.set('size', '10');\n     this.params = this.params.set('page', '1');\n     if (this.extraContent.orgFilter != undefined) {\n       this.params = this.params.set(this.extraContent.orgFilter.type, this.extraContent.orgFilter.value);\n     }\n     this.orgCtrl.valueChanges\n     .subscribe({\n       next: (orgValueChanges) => {\n         this.toSearch++;\n         // this condition check if the param is a `string` an if at least write 3 letters\n         if (this.toSearch > 3 && typeof orgValueChanges === 'string') {\n           this.toSearch = 0;\n           this.params = this.params.set('q', orgValueChanges)\n           this.loading = true;\n           this._orgService.getOrganizations(this.params).subscribe({\n               next: (response) => {\n                 this.filteredOrg = response.hits\n                 this.loading = false;\n               }\n           });\n         } else if (typeof orgValueChanges === 'object') {\n           this.toSearch = 0;\n           this.selectedOrg.emit(orgValueChanges);\n           if (this.cleaning){\n             this.orgCtrl.setValue('');\n           }\n         }\n       }\n     })\n   }\n   /* This function return the organization name\n    * @param org the Organization object\n    */\n   displayFn(org?: Organization): string | undefined {\n     return org ? org.name : undefined;\n   }\n\n   addChips(value: Hit<Organization>) {\n    if (this.extraContent.multiple) {\n      if(!this.chipsList.find(x => x.id == value.id)){\n        this.chipsList.unshift(value);\n        this.content.value.unshift(value);\n      }\n    } else {\n      this.chipsList = [value];\n      this.content.value = [value];\n    }\n    this.content.formControl.setValue(this.content.value);\n    this.orgCtrl.setValue(\"\");\n    this.filteredOrg = new  HitList<Organization>();\n  }\n\n  removeChip(index: number) {\n    let todelete = this.chipsList[index]\n    this.content.value = (this.content.value as []).filter(\n      (e: Hit<Organization>) => e.id !== todelete.id\n    );\n    this.content.formControl.setValue(this.content.value);\n    this.chipsList.splice(index, 1);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CoreModule } from '../core/core.module';\nimport { IconService } from '../core/services/icon.service';\n\nimport { ActionButtonComponent } from './action/button/button-action.component';\n\nimport { ComponentFactory_Depr } from './component-factory-depr/component-factory-depr.component';\n\nimport { FormContainerComponent } from './container/form-container/form-container.component';\nimport { ContainerPanelComponent } from './container/panel/panel-container.component';\nimport { ContainerSimpleComponent } from './container/simple/simple-container.component';\nimport { TableComponent } from './container/table/table.component';\n\nimport { ContainerLabelDiffLangComponent } from './container-specific/label-diff-lang/label-diff-lang-container.component';\n\nimport { InputBoolComponent } from './input/bool/bool-input.component';\nimport { InputEmailComponent } from './input/email/email-input.component';\nimport { InputIdentifierComponent } from './input/identifier/identifier-input.component';\nimport { InputIssnComponent } from './input/issn/issn-input.component';\nimport { InputNumberComponent } from './input/number/number-input.component';\nimport { InputRnpsComponent } from './input/rnps/rnps-input.component';\nimport { InputSelectComponent } from './input/select/select-input.component';\nimport { InputTextComponent } from './input/text/text-input.component';\nimport { InputUrlComponent } from './input/url/url-input.component';\n\nimport { VocabularyComponent } from './experimental/vocabulary/vocabulary.component';\nimport { VocabularyTreeComponent } from './experimental/vocabulary-tree/vocabulary-tree.component';\nimport { TermParentComponent } from './experimental/term-parent/term-parent.component';\nimport { SelectComponent } from './experimental/select/select.component';\nimport { TextareaComponent } from './experimental/textarea/textarea.component';\nimport { SelectFilterComponent } from './experimental/select-filter/select-filter.component';\nimport { SelectTreeComponent } from './experimental/select-tree/select-tree.component';\nimport { DatepickerComponent } from './experimental/datepicker/datepicker.component';\nimport { CheckboxComponent } from './experimental/checkbox/checkbox.component';\n\nimport { ContainerPanelActionComponent } from './container/panel-action/panel-action-container.component';\nimport { DatepickerYearComponent } from './experimental/datepicker-year/datepicker-year.component';\nimport { SelectOrgsComponent } from './experimental/select-orgs/select-orgs.component';\n\n@NgModule({\n  declarations: [\n    ActionButtonComponent,\n    ComponentFactory_Depr,\n    FormContainerComponent,\n    ContainerPanelComponent,\n    ContainerPanelActionComponent,\n    ContainerSimpleComponent,\n    TableComponent,\n    ContainerLabelDiffLangComponent,\n    InputBoolComponent,\n    InputEmailComponent,\n    InputIdentifierComponent,\n    InputIssnComponent,\n    InputNumberComponent,\n    InputRnpsComponent,\n    InputSelectComponent,\n    InputTextComponent,\n    InputUrlComponent,\n    VocabularyComponent,\n    VocabularyTreeComponent,\n    TermParentComponent,\n    SelectComponent,\n    SelectFilterComponent,\n    TextareaComponent,\n    SelectTreeComponent,\n    DatepickerComponent,\n    CheckboxComponent,\n    DatepickerYearComponent,\n    SelectOrgsComponent\n  ],\n\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    CoreModule\n  ],\n\n  /* In order to ensure that the compiler still generates a factory for all dynamically loaded components. */\n  entryComponents: [\n    ActionButtonComponent,\n    ContainerPanelComponent,\n    ContainerPanelActionComponent,\n    ContainerSimpleComponent,\n    InputBoolComponent,\n    InputEmailComponent,\n    InputIdentifierComponent,\n    InputIssnComponent,\n    InputNumberComponent,\n    InputRnpsComponent,\n    InputSelectComponent,\n    InputTextComponent,\n    InputUrlComponent,\n    VocabularyComponent,\n    VocabularyTreeComponent,\n    TermParentComponent,\n    SelectComponent,\n    SelectFilterComponent,\n    TextareaComponent,\n    SelectTreeComponent,\n    DatepickerComponent,\n    DatepickerYearComponent,\n    CheckboxComponent,\n    SelectOrgsComponent\n  ],\n\n  exports: [\n    ActionButtonComponent,\n    ComponentFactory_Depr,\n    FormContainerComponent,\n    ContainerPanelComponent,\n    ContainerPanelActionComponent,\n    ContainerSimpleComponent,\n    TableComponent,\n    ContainerLabelDiffLangComponent,\n    InputBoolComponent,\n    InputEmailComponent,\n    InputIdentifierComponent,\n    InputIssnComponent,\n    InputNumberComponent,\n    InputRnpsComponent,\n    InputSelectComponent,\n    InputTextComponent,\n    InputUrlComponent,\n    VocabularyComponent,\n    VocabularyTreeComponent,\n    TermParentComponent,\n    SelectComponent,\n    SelectFilterComponent,\n    TextareaComponent,\n    DatepickerComponent,\n    DatepickerYearComponent,\n    CheckboxComponent,\n    SelectOrgsComponent\n  ],\n\n  providers: []\n})\nexport class TocoFormsModule {\n  public constructor(private _iconService: IconService) {\n    //console.log('Icon Service: registers icons.');\n\n    this._iconService.registerIcons(\n      [\n        IconService.defaultIconName,  /* It is used by controls that want to have occupied the icon space, but nothing is showed. */\n        'outlined-bar_code-24px',\n        'outlined-mail-24px'\n      ],\n      '../assets/svg/icons'\n    );\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Environment } from '../../../core/env';\n\nimport { Response } from '../../../core/public-api';\n\n/**\n * This service is deprecated.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormContainerService {\n\n\tprivate httpOptions = {\n\t\theaders: new HttpHeaders(\n\t\t\t{\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer '\n\t\t\t})\n\t};\n\n\tpublic constructor(private httpClient: HttpClient, private env: Environment)\n\t{ }\n\n\t/**\n\t * Sends data to the server.\n\t * @param endPoint The data end point. For example, `/add_new`.\n\t * @param token The autorization token.\n\t * @param data The data to send, must be parsed.\n\t */\n\tpublic sendPostData(endPoint: string, token: string, data: any ): Observable<Response<any>> {\n\n\t\tthis.httpOptions.headers = this.httpOptions.headers.set('Authorization', 'Bearer ' + token);\n\n\t\treturn this.httpClient.post<Response<any>>( this.env.sceibaApi+endPoint, data, this.httpOptions );\n\t}\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'toco-harvester',\n    templateUrl: './harvester.component.html',\n    styleUrls: ['./harvester.component.scss']\n})\nexport class HarvesterComponent implements OnInit\n{\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n","\nimport { Component, ComponentFactoryResolver } from '@angular/core';\n\nimport { CatalogService } from '../../backend/public-api';\nimport { FilterContainerComponent, FilterContainerService } from '../../filters/public-api';\n\n@Component({\n    selector: 'toco-harvester-filters-container',\n    templateUrl: './harvester-filters.component.html',\n    styleUrls: ['./harvester-filters.component.scss']\n})\nexport class HarvesterFiltersComponent extends FilterContainerComponent{\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n        protected childrenService: FilterContainerService,\n        protected service:  CatalogService,)\n    {\n        super(componentFactoryResolver, childrenService)\n    }\n\n    ngOnInit() {\n        super.ngOnInit()\n\n        default_filters.forEach(filter => {\n            this.filters_data.push(filter);\n        });\n\n        this.service.getJournalsVocab().subscribe(response => {\n            response.data.vocabularies.forEach(vocab => {\n                this.service.getTerminosByVocab(vocab.name+'/any').subscribe(termsResponse => {\n                    this.filters_data.push({\n                        index: this.filters_data.length,\n                        field: 'terms',\n                        type: 'select-autocomplete',\n                        placeholder: vocab.name,\n                        name: vocab.name,\n                        idVocab: vocab.id,\n                        selectOptions: termsResponse.data.terms,\n                        is_enabled: true\n                    });\n                });\n            });\n        });\n    }\n}\n\nconst default_filters = [\n    {\n        index: 0,\n        field: 'title',\n        type: 'search',\n        placeholder: 'Título',\n        name: 'Título',\n        is_enabled: true\n    }\n];\n","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {merge,of as observableOf} from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { CatalogService } from '../../backend/public-api';\nimport { MetadataService } from '../../core/public-api';\nimport { Journal, JournalData, ISSN } from '../../entities/public-api';\nimport { FilterHttpMap, FiltersService } from '../../filters/public-api';\n\nimport { Environment } from '../../core/env';\n\nimport { HarvesterFiltersComponent } from '../harvester-filters/harvester-filters.component';\n\n@Component({\n    selector: 'toco-repositories',\n    templateUrl: './repositories.component.html',\n    styleUrls: ['./repositories.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ],\n})\nexport class RepositoriesComponent implements OnInit {\n\n    journalList: Journal[] = [];\n    private loading: boolean = true;\n    dataSource = new MatTableDataSource<Journal>();\n    columnsToDisplay = ['title'];\n    expandedElement: Journal;\n    length = 0;\n    pageSize = 5;\n    pageSizeOptions: number[] = [5, 10, 20, 40, 60, 80, 100];\n    pageEvent: PageEvent;\n    params: Array<FilterHttpMap>;\n\n    sceibaHost = ''\n    currentlayout = {\n        name: 'Izquierda',\n        layout: 'row',\n        aling: 'center baseline',\n        width:  '22'\n    }\n\n    constructor(private service: CatalogService,\n        private metadata: MetadataService,\n        private filterService : FiltersService,\n        private env: Environment)\n    {\n        this.sceibaHost = env.sceibaHost + \"/catalog\"\n    }\n\n    @ViewChild(MatPaginator, { static: true })\n    paginator: MatPaginator;\n\n    @ViewChild(HarvesterFiltersComponent, { static: true })\n    filter_component : HarvesterFiltersComponent;\n\n    ngOnInit() {\n\n        this.metadata.setStandardMeta(\"Catálogo de Revistas Científicas\", \"\", \"\");\n        this.paginator.firstPage();\n        this.paginator.pageSize = this.pageSize;\n        this.service.getJournalsCount().subscribe(response =>{\n            this.length = response.data.count;\n        });\n        this.fetchJournalData();\n\n        this.filterService.paramsChanged.subscribe(params =>{\n            this.params = params;\n            this.fetchJournalData();\n        })\n    }\n\n    // onPaginatorChanged(){\n    //   this.filterService.changeFilter('count',this.paginator.pageSize, false);\n    //   this.filterService.changeFilter('page',this.paginator.pageIndex);\n    // }\n\n    fetchJournalData() {\n        this.loading = true;\n        //this.dataSource.data = this.service.getJournalsPage(this.count, this.page);\n        let arr = new Array<Journal>();\n        merge().pipe(\n            startWith({}),\n            switchMap(() => {\n                this.loading = true;\n                return this.service!.getJournalsPage(this.paginator.pageSize, this.paginator.pageIndex, this.params);\n            }),\n            map(response => {\n                // Flip flag to show that loading has finished.\n                this.loading = false;\n                // this.isRateLimitReached = false;\n                // this.resultsLength = response.total_count;\n                this.length = response.data.sources.count\n                response.data.sources.data.forEach(item =>{\n                    let j = new Journal();\n                    j.id = item.id;\n                    j.uuid = item.uuid;\n                    j.source_type = item.source_type;\n                    // j.harvest_type = item.harvest_type;\n                    j.data.oaiurl = item.harvest_endpoint;\n\n\n                        let info = new JournalData();\n                        info.url = item.data!= null ? item.data.url: \"\";\n                        info.title = item.name;\n                        info.subtitle = item.subtitle;\n                        info.shortname  = item.shortname;\n                            let issn = new ISSN();\n                            issn.e = item.data!= null ? item.data.issn.e : \"\";\n                            issn.l = item.data!= null ? item.data.issn.l : \"\";\n                            issn.p = item.data!= null ? item.data.issn.p : \"\";\n                        info.issn = issn;\n                        info.rnps = item.data!= null ? item.data.rnps : \"\";\n                        info.logo = item.data!= null ? item.data.logo : \"\";\n                        info.purpose  = item.purpose;\n                        info.description  = item.data!= null ? item.data.description : \"\";\n                    j.data = info;\n                    arr.push(j);\n                });\n                return arr;\n            }),\n            catchError(error => {\n                this.loading = false;\n                console.log(\"ERRORRR  \"+error)\n                // Catch if the GitHub API has reached its rate limit. Return empty data.\n                // this.isRateLimitReached = true;\n                return observableOf([]);\n            })\n        ).subscribe(data => this.dataSource.data = data);\n\n    }\n\n    onScrollUp() {\n        // console.log(\"scrolled up!!\");\n    }\n\n    isEmpty() {\n        if (this.journalList.length == 0) {\n            this.loading = false;\n            return true;\n        }\n        return false;\n    }\n\n    isLoading() {\n        return this.loading;\n    }\n\n    currentJournals(){\n        console.log(this.dataSource.data)\n    }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HarvesterComponent } from './harvester/harvester.component';\nimport { RepositoriesComponent } from './repositories/repositories.component';\n\nconst routes: Routes = [{\n    path: '',\n    component: HarvesterComponent,\n    children: [\n        {\n            path: '',\n            component: RepositoriesComponent,\n            data: {\n                title: 'Revistas'\n            }\n        }\n    ]\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HarvesterRoutingModule\n{ }\n","\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { Journal } from '../../entities/public-api';\n\n@Component({\n    selector: 'toco-harvester-repository',\n    templateUrl: './repository.component.html',\n    styleUrls: ['./repository.component.scss']\n})\nexport class RepositoryComponent implements OnInit {\n\n    @Input() repostitory: Journal;\n\n    constructor()\n    { }\n\n    ngOnInit() {\n    }\n\n    onIdentify(){\n        console.log('onIdentify'+this.repostitory.id);\n    }\n    \n    onHarvest(){\n        console.log('onHarvest'+this.repostitory.id);\n    }\n\n    onRecord(){\n        console.log('onRecord'+this.repostitory.id);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class HarvesterService\n{\n    public constructor(private http: HttpClient)\n    { }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FiltersModule } from '../filters/public-api';\nimport { CatalogService } from '../backend/public-api';\n\nimport { HarvesterRoutingModule } from './harvester-routing.module';\nimport { RepositoriesComponent } from './repositories/repositories.component';\nimport { RepositoryComponent } from './repository/repository.component';\nimport { HarvesterComponent } from './harvester/harvester.component';\nimport { HarvesterService } from './harvester.service';\nimport { HarvesterFiltersComponent } from './harvester-filters/harvester-filters.component';\n\n@NgModule({\n    declarations: [\n        RepositoriesComponent,\n        RepositoryComponent,\n        HarvesterComponent,\n        HarvesterFiltersComponent\n    ],\n\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        HarvesterRoutingModule,\n        FiltersModule\n    ],\n\n    exports: [\n        RepositoriesComponent,\n        RepositoryComponent,\n        HarvesterComponent,\n        HarvesterFiltersComponent\n    ],\n\n    providers: [\n        CatalogService,\n        HarvesterService\n        // FiltersService,\n        // FilterContainerService\n    ]\n})\nexport class HarvesterModule\n{ }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { of as observableOf, timer, Subscription, PartialObserver } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\nimport moment from 'moment';\nimport { NotificationService } from '../../backend/public-api';\nimport { MessageHandler, StatusCode } from '../../core/public-api';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\n\n@Component({\n    selector: 'toco-notification-button',\n    templateUrl: './notification-button.component.html',\n    styleUrls: ['./notification-button.component.scss']\n})\nexport class NotificationButtonComponent implements OnInit {\n\n    @Input() public color: string;\n\n    @Input() public buttonType: string;\n\n    public count: number = 0;\n    public notifications: Array<NotificationInfo>;\n    public moment: any = moment;\n\n    private timerSuscription: Subscription = null;\n    private timerObserver: PartialObserver<number> = {\n        next: (_) => {\n\n            // if (this.oauthStorage.getItem('access_token')){\n                this.service.getNotificationsList(5,0).pipe(\n                    catchError(error => {\n                        const m = new MessageHandler(this._snackBar);\n                        m.showMessage(StatusCode.serverError, error.message);\n                        return observableOf(null);\n                    })\n                )\n                .subscribe(response => {\n                    if (response && response.status === \"success\"){\n                        this.count = response.data.total_not_view;\n                        const arr: NotificationInfo[] = response.data.notifications\n                          .map( n => ({...n, classification: {\n                            label: n.classification,\n                            color: n.classification === 'INFO' ? '#2196F3' : n.classification === 'ALERT' ? '#FF5722' : '#d32f2f'\n                          }}))\n                            .filter(n => !n.viewed);\n                        this.notifications = arr;\n                    }\n                    else if(response){\n                        const m = new MessageHandler(this._snackBar);\n                        m.showMessage(StatusCode.serverError, response.message);\n                    } else {\n                        const m = new MessageHandler(this._snackBar);\n                        m.showMessage(StatusCode.serverError, 'Notificaciones no encontradas');\n                    }\n                });\n            // }\n        },\n\n        error: (err: any) => {\n            console.log('The observable got an error notification: ' + err + '.');\n        },\n\n        complete: () => {\n            console.log('The observable got a complete notification.');\n        }\n    };\n\n    constructor(private service: NotificationService, private _snackBar: MatSnackBar, private oauthStorage: OAuthStorage) { }\n\n    ngOnInit() {\n        // Emits, one every second (90000ms), starting after 0 seconds\n        this.timerSuscription = timer(0, 900000).subscribe(this.timerObserver);\n\n        if (this.color == undefined) this.color = \"primary\";\n\n        if (this.buttonType == undefined) this.buttonType = \"mat-mini-fab\";\n    }\n\n    notificationsCount(){\n      if(this.count == 0)\n        return '';\n      if (this.count > 10)\n            return '+10';\n        return this.count;\n    }\n\n}\n\nclass  UserNotification {\n  id: string;\n  name: string;\n  lastname: string;\n  email: string;\n}\n\nexport class NotificationInfo {\n  classification: { label: string, color: string };\n  receiver_id: UserNotification;\n  viewed: boolean;\n  viewed_date: string;\n  description: string;\n  createdAt: string;\n  emiter: UserNotification;\n  app: string;\n  data: {};\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MatTableDataSource, MatPaginator, MatSnackBar, MatPaginatorIntl } from '@angular/material';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport moment from 'moment';\nimport { NotificationService } from '../../backend/public-api';\nimport { MessageHandler, StatusCode } from '../../core/public-api';\nimport { NotificationInfo } from '../notification-button/notification-button.component';\n\n\n@Component({\n    selector: 'lib-notification-list',\n    templateUrl: './notification-list.component.html',\n    styleUrls: ['./notification-list.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({ height: '0px', minHeight: '0' })),\n            state('expanded', style({ height: '*' })),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ]\n})\n\nexport class NotificationListComponent implements OnInit {\n\n    dataSource = new MatTableDataSource<NotificationInfo>();\n    columnsToDisplay = ['action', 'description', 'classification', 'emiter', 'emiterEmail', 'createdAt' ];\n    columnsLabels = ['', 'Descripción', 'Clasificación', 'Emisor', 'Correo del emisor', 'Creada'];\n    expandedElement: Notification;\n    public moment: any = moment;\n\n    pageSizeOptions: number[] = [5, 10, 15, 20];\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n    constructor(private service: NotificationService, private _snackBar: MatSnackBar) { }\n\n    ngOnInit() {\n        this.paginator.firstPage();\n        this.paginator.pageSize = 5;\n        this.getNotificationsListData();\n    }\n    getNotificationsListData() {\n        this.service.getNotificationsList(this.paginator.pageSize, this.paginator.pageIndex)\n            .pipe(\n                catchError(error => {\n                    const m = new MessageHandler(this._snackBar);\n                    m.showMessage(StatusCode.serverError, error.message);\n                    return of(null);\n                })\n            )\n            .subscribe(response => {\n                if (response) {\n                    this.paginator.length = response.data.total_not_view;\n                    const arr: NotificationInfo[] = response.data.notifications\n                    .map( n => ({...n, classification: {\n                        label: n.classification,\n                        color: n.classification === 'INFO' ? '#2196F3' : n.classification === 'ALERT' ? '#FF5722' : '#d32f2f'\n                      }}));\n                    this.dataSource.data = arr;\n                } else {\n                    this.paginator.length = 0;\n                    this.dataSource.data = null;\n                }\n\n            });\n    }\n    setnotificationViewed(id: number) {\n        console.log(id);\n        if (id) {\n          this.service.setNotificationViewed(id)\n            .pipe(\n              catchError(error => {\n                const m = new MessageHandler(this._snackBar);\n                m.showMessage(StatusCode.serverError, error.message);\n                return of(null);\n              })\n            )\n            .subscribe(response => {\n                if (response.status === 'success') {\n                  this.getNotificationsListData();\n                  const m = new MessageHandler(this._snackBar);\n                  m.showMessage(StatusCode.OK, 'La notificación fue marcada como leída');\n                } else {\n                  const m = new MessageHandler(this._snackBar);\n                  m.showMessage(StatusCode.serverError, response.message);\n                }\n              }\n            );\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatButtonModule, MatMenuModule, MatIconModule, MatBadgeModule, MatTableModule, MatPaginatorModule, MatDividerModule, MatTooltipModule } from '@angular/material';\n\nimport { NotificationService } from '../backend/public-api';\n\nimport { NotificationButtonComponent } from './notification-button/notification-button.component';\nimport { NotificationListComponent } from './notification-list/notification-list.component';\n\n@NgModule({\n    declarations: [\n        NotificationButtonComponent,\n        NotificationListComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatBadgeModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatDividerModule,\n        MatTooltipModule\n    ],\n    exports: [\n        NotificationButtonComponent,\n        NotificationListComponent\n    ],\n    providers: [\n        NotificationService\n    ]\n})\nexport class NotificationModule { }\n","\nimport { Component, Input } from '@angular/core';\n\n/**\n * Represents a static control that shows an array of texts using chips. \n */\n@Component({\n\tselector: 'static-chips',\n\ttemplateUrl: './chips-static.component.html',\n\tstyleUrls: ['./chips-static.component.scss']\n})\nexport class StaticChipsComponent\n{\n    /**\n     * The control's appearance. \n     * By default, its value is `'outline'`. \n     */\n\t@Input()\n\tpublic appearance: string;\n\n\t/**\n\t * The control's description. \n\t * By default, its value is `undefined` and it is not showed. \n\t */\n\t@Input()\n\tpublic desc: string;\n\n\t/**\n\t * The array of items for displaying. \n\t * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic value: string[];\n\n\tpublic constructor()\n\t{\n\t\tthis.appearance = 'outline';\n\t\tthis.desc = undefined;\n\t\tthis.value = [];\n\t}\n}\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Params } from '../../core/public-api';\n\n/* For testing. */\nexport interface PeriodicElement\n{\n\tname: string;\n\tposition: number;\n\tweight: number;\n\tsymbol: string;\n}\n\n/* For testing. */\nconst ELEMENT_DATA: PeriodicElement[] = [\n\t{position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n\t{position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n\t{position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n\t{position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n\t{position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n\t{position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n\t{position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n\t{position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n\t{position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n\t{position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n\n/**\n * Represents a static control that shows an array of objects using a table. \n */\n@Component({\n\tselector: 'static-table',\n\ttemplateUrl: './table-static.component.html',\n\tstyleUrls: ['./table-static.component.scss']\n})\nexport class StaticTableComponent\n{\n    /**\n     * The control's appearance. \n     * By default, its value is `'outline'`. \n     */\n\t@Input()\n\tpublic appearance: string;\n\n\t/**\n\t * The control's description. \n\t * By default, its value is `undefined` and it is not showed. \n\t */\n\t@Input()\n\tpublic desc: string;\n\n\t/**\n\t * The array of data that should be rendered by the table, where each object represents one row. \n     * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic value: Params<any>[];\n\n    /**\n     * The array of strings that indicates the object property name of the columns. \n     * By default, its value is `[]`. \n     */\n\t@Input()\n\tpublic columnsObjectProperty: string[];\n\n    /**\n     * The array of strings that indicates the header text of the columns. \n     * By default, its value is `[]`. \n     */\n\t@Input()\n\tpublic columnsHeaderText: string[];\n\n\tpublic constructor()\n\t{\n\t\tthis.appearance = 'outline';\n\t\tthis.desc = undefined;\n\t\tthis.value = [];\n\n\t\tthis.columnsObjectProperty = [];\n\t\tthis.columnsHeaderText = [];\n\t}\n}\n","\nimport { Component, OnInit, Input} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n/**\n * Represents a static control that shows a text. \n */\n@Component({\n\tselector: 'static-text',\n\ttemplateUrl: './text-static.component.html',\n\tstyleUrls: ['./text-static.component.scss'],\n    host: {\n        '[style.width]': 'width'\n    }\n})\nexport class StaticTextComponent implements OnInit\n{\n    /**\n     * The control's width. \n     * The width of the content area, padding area or border area (depending on `box-sizing`) of certain boxes. \n     * By default, its value is `'100%'`. \n     */\n\t@Input()\n\tpublic width: string;\n\n    /**\n     * The control's appearance. \n     * By default, its value is `'outline'`. \n     */\n\t@Input()\n\tpublic appearance: string;\n\n\t/**\n\t * The control's description. \n\t * By default, its value is `undefined` and it is not showed. \n\t */\n\t@Input()\n\tpublic desc: string;\n\n\t/**\n\t * The control's value. \n\t * By default, its value is `undefined`. \n\t */\n\t@Input()\n\tpublic value: string;\n\n\t/**\n\t * The control's default value. \n\t * By default, its value is `'There is not any text to show!'`. \n\t */\n\t@Input()\n\tpublic valueByDefault: string;\n\n    /**\n     * Returns the control's text align. \n     * By default, its value is `'left'`. \n     */\n\t@Input()\n    public textAlign: string;\n\n\t/**\n\t * Returns a reference to the `FormControl` that tracks the value and validity state \n\t * of the internal control that contains the text input. \n\t * For internal use only. \n\t */\n\tpublic input_static: FormControl;\n\n\tpublic constructor()\n\t{\n\t\tthis.width = '100%';\n\t\tthis.appearance = 'outline';\n\t\tthis.desc = undefined;\n\t\tthis.value = undefined;\n\t\tthis.valueByDefault = 'There is not any text to show!';\n\t\tthis.textAlign = 'left';\n\n\t\tthis.input_static = undefined;\n\t}\n\n    public ngOnInit(): void\n\t{\n\t\tif(this.value === undefined) this.value = this.valueByDefault;\n\n\t\tthis.input_static = new FormControl(this.value);\n\t}\n\n\t/**\n\t * Handler method that is called when the control's value changes in the UI. \n\t * It is always used to set the `value` input field as the component value. \n\t * For internal use only. \n\t */\n\tpublic handleInput(): void\n\t{\n\t\t/* It always sets the `value` input field as the component value. */\n\t\tthis.input_static.setValue(this.value);\n\t}\n}\n","\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/public-api';\n\nimport { StaticChipsComponent } from './chips/chips-static.component';\nimport { StaticTableComponent } from './table/table-static.component';\nimport { StaticTextComponent } from './text/text-static.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tStaticChipsComponent,\n\t\tStaticTableComponent,\n\t\tStaticTextComponent\n\t],\n\n\timports: [\n\t\tSharedModule,\n\t\tReactiveFormsModule\n\t],\n\n\texports: [\n\t\tStaticChipsComponent,\n\t\tStaticTableComponent,\n\t\tStaticTextComponent\n\t]\n})\nexport class StaticsModule\n{ }\n","\nimport { Component, Input, ViewChild, OnInit } from '@angular/core';\nimport { MatAccordion } from '@angular/material';\n\n/**\n * The `OrgViewAccordionComponent` type. \n */\nexport enum OrgViewAccordionType\n{\n\t/**\n\t * The `OrgViewAccordionComponent` is used to show relationships. \n\t */\n\tRelationships = 'Relación'/*'Relationship'*/,\n\n\t/**\n\t * The `OrgViewAccordionComponent` is used to show addresses. \n\t */\n\tAddresses = 'Dirección'/*'Address'*/\n};\n\n@Component({\n\tselector: 'toco-org-view-accordion',\n\ttemplateUrl: './org-view-accordion.component.html',\n\tstyleUrls: ['./org-view-accordion.component.scss']\n})\nexport class OrgViewAccordionComponent implements OnInit\n{\n    /**\n     * Represents the `OrgViewAccordionType` enum for internal use. \n     */\n\tpublic readonly orgViewAccordion_Type: typeof OrgViewAccordionType;\n\n    /**\n     * The control's appearance. \n     * By default, its value is `'outline'`. \n     */\n\t@Input()\n\tpublic appearance: string;\n\n\t/**\n\t * The control's description. \n\t * By default, its value is `undefined` and it is not showed. \n\t */\n\t@Input()\n\tpublic desc: string;\n\n\t/**\n\t * The array of data that should be rendered by the accordion, where each object represents one row. \n\t * This array has the same length than the `panelsTitle` field. \n     * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic value: any[];\n\n\t/**\n\t * The `OrgViewAccordionComponent` type. \n     * By default, its value is `OrgViewAccordionType.Relationships`. \n\t */\n\t@Input()\n\tpublic orgViewAccordionType: OrgViewAccordionType;\n\n\t/**\n\t * The panels title. \n\t * This array has the same length than the `value` field. \n     * By default, its value is `[]`. \n\t */\n\t@Input()\n\tpublic panelsTitle: string[];\n\n\t@ViewChild(MatAccordion, { static: true })\n\tprivate _accordion: MatAccordion;\n\n\tpublic constructor()\n\t{\n\t\tthis.orgViewAccordion_Type = OrgViewAccordionType;\n\n\t\tthis.appearance = 'outline';\n\t\tthis.desc = undefined;\n\t\tthis.value = [];\n\t\tthis.orgViewAccordionType = OrgViewAccordionType.Relationships;\n\t\tthis.panelsTitle = [];  /* This array has the same length than the `value` field. */\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t}\n\n\t/**\n\t * Returns the `MatAccordion` control. \n\t */\n\tpublic get getAccordion(): MatAccordion\n\t{\n\t\treturn this._accordion;\n\t}\n\n\t/**\n\t * Returns true if the panel has element; otherwise, false. \n\t * The panel always has element by default. \n\t * @param pos The panel position. \n\t */\n\tpublic panelHasElement(pos: number): boolean\n\t{\n\t\tswitch(this.orgViewAccordionType)\n\t\t{\n\t\t\tcase this.orgViewAccordion_Type.Relationships:\n\t\t\t{\n\t\t\t\treturn this.value[pos].links.length;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\t/* The panel always has element by default. */\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n","\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Address, Organization } from '../../entities/public-api';\nimport { OrgViewAccordionType } from './org-view-accordion/org-view-accordion.component';\n\n\n\nexport interface RelationshipLink\n{\n  url: string;\n  name: string;\n}\n\nexport interface RelationshipsValue\n{\n  links: RelationshipLink[];\n}\n\n@Component({\n  selector: 'toco-org-view',\n  templateUrl: './org-view.component.html',\n  styleUrls: ['./org-view.component.scss']\n})\nexport class OrgViewComponent implements OnInit, OnChanges\n{\n    /**\n     * Represents the `OrgViewAccordionType` enum for internal use.\n     */\n  public readonly orgViewAccordionType: typeof OrgViewAccordionType;\n\n  /**\n   * Represents the current organization.\n   */\n  @Input()\n  public org: Organization;\n\n  @Input()\n  public showContent: boolean = true;\n\n  private _panelsTitle_Relationships: string[];\n  private _relationshipsValue: RelationshipsValue[];\n\n  private _panelsTitle_Addresses: string[];\n  private _addressesValue: Address[];\n\n  public constructor()\n  {\n    this.orgViewAccordionType = OrgViewAccordionType;\n\n    this.org = undefined;\n  }\n\n  public ngOnInit(): void\n  {\n    // si se recibe un objeto que no tiene todos los campos.\n    let org_full = new Organization();\n    org_full.deepcopy(this.org);\n    this.org = org_full;\n\n    this._panelsTitle_Relationships = ['Organizaciones Padres', 'Organizaciones Hijas', 'Organizaciones Relacionadas'];\n    this._relationshipsValue = this._createRelationshipsValue();\n\n    this._addressesValue = this._createAddressesValue();  /* This initialization is first than the `_panelsTitle_Addresses` initialization. */\n    // this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];\n    this._panelsTitle_Addresses = this._createPanelsTitle_Addresses();\n  }\n  public ngOnChanges(): void\n  {\n    this.ngOnInit();\n  }\n  /**\n   * Creates a generic array of panels title.\n   * Usage example:\n   * this._panelsTitle_Addresses = (this.org.addresses) ? this._createPanelsTitle_Generic(this.orgViewAccordionType.Addresses, this.org.addresses.length) : [ ];\n   * @param orgViewAccordionType The `OrgViewAccordionComponent` type.\n   * @param panelsTitleCount Amount of panels title.\n   */\n  private _createPanelsTitle_Generic(orgViewAccordionType: OrgViewAccordionType, panelsTitleCount: number): string[]\n  {\n    let panelsTitle: string[] = [ ];\n\n    /* Initializae the `panelsTitle` array. */\n    for (let i: number = 0; i < panelsTitleCount; )\n    {\n      panelsTitle.push(`${ orgViewAccordionType } (${ ++i }) of (${ panelsTitleCount })`);\n    }\n\n    return panelsTitle;\n  }\n\n  private _createPanelsTitle_Addresses(): string[]\n  {\n    let panelsTitle: string[] = [ ];\n    let panelsTitleCount = this._addressesValue.length;\n\n    /* Initializae the `panelsTitle` array. */\n    for (let i: number = 0; i < panelsTitleCount; i++)\n    {\n      panelsTitle.push(`${ this._addressesValue[i].city } | ${ this._addressesValue[i].country } ${ (this._addressesValue[i].primary) ? '(Principal)' : '' }`);\n    }\n\n    return panelsTitle;\n  }\n\n  private _createRelationshipsValue(): RelationshipsValue[]\n  {\n    /* The positions represent:\n     * pos = 0 --> Organizaciones Padres\n     * pos = 1 --> Organizaciones Hijas\n     * pos = 2 --> Organizaciones Relacionadas */\n    let result: RelationshipsValue[] = [ ];\n    let pos: number = -1;\n    let item: any;\n\n    for(item of this._panelsTitle_Relationships)\n    {\n      result.push({\n        'links': [ ]\n      });\n    }\n\n    if (this.org.relationships)\n    {\n      for(item of this.org.relationships)\n      {\n        switch(item.type)\n        {\n          case 'parent':\n          {\n            pos = 0;\n            break;\n          }\n\n          case 'child':\n          {\n            pos = 1;\n            break;\n          }\n\n          default:  /* 'related' */\n          {\n            pos = 2;\n            break;\n          }\n        }\n\n        result[pos].links.push({\n          // 'url': `${ item.id }/view`,\n          'url': '/' + item.id  + '/view',\n          'name': item.label\n        });\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an array of addresses ordered by the `primary` field of its addresses,\n   * the true values are first than the false values.\n   */\n  private _createAddressesValue(): Address[]\n  {\n    let result: Address[] = [ ];\n    let noPrimary: Address[] = [ ];\n\n    for(let item of this.org.addresses)\n    {\n      if (item.primary)\n      {\n        result.push(item);\n      }\n      else\n      {\n        noPrimary.push(item);\n      }\n    }\n\n    return result.concat(noPrimary);\n  }\n\n  public get getPanelsTitle_Relationships(): string[]\n  {\n    return this._panelsTitle_Relationships;\n  }\n\n  public get getValue_Relationships(): RelationshipsValue[]\n  {\n    return this._relationshipsValue;\n  }\n\n  public get getPanelsTitle_Addresses(): string[]\n  {\n    return this._panelsTitle_Addresses;\n  }\n\n  public get getValue_Addresses(): Address[]\n  {\n    return this._addressesValue;\n  }\n}\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Address } from '../../../entities/public-api';\n\n@Component({\n\tselector: 'toco-org-view-address',\n\ttemplateUrl: './org-view-address.component.html',\n\tstyleUrls: ['./org-view-address.component.scss']\n})\nexport class OrgViewAddressComponent\n{\n\t/**\n\t * An address associated with the organization. \n     * By default, its value is `undefined`. \n\t */\n\t@Input()\n\tpublic value: Address;\n\n\tpublic constructor()\n\t{\n\t\tthis.value = undefined;\n\t}\n}\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Params } from '../../../core/public-api';\nimport { GeoNamesCity } from '../../../entities/public-api';\n\n@Component({\n\tselector: 'toco-org-view-geo-names-city',\n\ttemplateUrl: './org-view-geo-names-city.component.html',\n\tstyleUrls: ['./org-view-geo-names-city.component.scss']\n})\nexport class OrgViewGeoNamesCityComponent\n{\n    /**\n     * The control's appearance. \n     * By default, its value is `'outline'`. \n     */\n\t@Input()\n\tpublic appearance: string;\n\n\t/**\n\t * The control's description. \n\t * By default, its value is `undefined` and it is not showed. \n\t */\n\t@Input()\n\tpublic desc: string;\n\n\t/**\n\t * A linked GeoNames data associated with the organization. \n     * By default, its value is `undefined`. \n\t */\n\t@Input()\n\tpublic value: GeoNamesCity;\n\n\tprivate _geonames_admin1: Params<any>[];\n\tprivate _geonames_admin2: Params<any>[];\n\tprivate _nuts_level1: Params<any>[];\n\tprivate _nuts_level2: Params<any>[];\n\tprivate _nuts_level3: Params<any>[];\n\n\tpublic constructor()\n\t{\n\t\tthis.appearance = 'outline';\n\t\tthis.desc = undefined;\n\t\tthis.value = undefined;\n\n\t\tthis._geonames_admin1 = [];\n\t\tthis._geonames_admin2 = [];\n\t\tthis._nuts_level1 = [];\n\t\tthis._nuts_level2 = [];\n\t\tthis._nuts_level3 = [];\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\tif (this.value)\n\t\t{\n\t\t\tif (this.value.geonames_admin1) this._createValueAsArray(this.value.geonames_admin1, this._geonames_admin1);\n\t\t\tif (this.value.geonames_admin2) this._createValueAsArray(this.value.geonames_admin2, this._geonames_admin2);\n\t\t\tif (this.value.nuts_level1) this._createValueAsArray(this.value.nuts_level1, this._nuts_level1);\n\t\t\tif (this.value.nuts_level2) this._createValueAsArray(this.value.nuts_level2, this._nuts_level2);\n\t\t\tif (this.value.nuts_level3) this._createValueAsArray(this.value.nuts_level3, this._nuts_level3);\n\t\t}\n\t}\n\n\tprivate _createValueAsArray(objFromCopy: Params<any>, arrayToFill: Params<any>[]): void\n\t{\n\t\tObject.keys(objFromCopy).forEach((key: string): void => {\n\t\t\tarrayToFill.push({\n\t\t\t\t'property': key,\n\t\t\t\t'value': objFromCopy[key]\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns the `geonames_admin1` value as an array for using by `StaticTableComponent`. \n\t */\n\tpublic get getGeoNamesAdmin1(): Params<any>[]\n\t{\n\t\treturn this._geonames_admin1;\n\t}\n\n\t/**\n\t * Returns the `geonames_admin2` value as an array for using by `StaticTableComponent`. \n\t */\n\tpublic get getGeoNamesAdmin2(): Params<any>[]\n\t{\n\t\treturn this._geonames_admin2;\n\t}\n\n\t/**\n\t * Returns the `nuts_level1` value as an array for using by `StaticTableComponent`. \n\t */\n\tpublic get getNutsLevel1(): Params<any>[]\n\t{\n\t\treturn this._nuts_level1;\n\t}\n\n\t/**\n\t * Returns the `nuts_level2` value as an array for using by `StaticTableComponent`. \n\t */\n\tpublic get getNutsLevel2(): Params<any>[]\n\t{\n\t\treturn this._nuts_level2;\n\t}\n\n\t/**\n\t * Returns the `nuts_level3` value as an array for using by `StaticTableComponent`. \n\t */\n\tpublic get getNutsLevel3(): Params<any>[]\n\t{\n\t\treturn this._nuts_level3;\n\t}\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { RelationshipsValue } from '../org-view.component';\n\n\n\n@Component({\n\tselector: 'toco-org-view-relationship',\n\ttemplateUrl: './org-view-relationship.component.html',\n\tstyleUrls: ['./org-view-relationship.component.scss']\n})\nexport class OrgViewRelationshipComponent\n{\n\t/**\n\t * A relationship the organization has to other. \n     * By default, its value is `undefined`. \n\t */\n\t@Input()\n\tpublic value: RelationshipsValue;\n\n\tpublic constructor()\n\t{\n\t\tthis.value = undefined;\n\t}\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n\nimport { Organization, Identifier } from '../../entities/public-api';\nimport { TextInputAppearance, OperationAction, FormSection, PanelContent, \n\tContainerContent, HintValue, HintPosition, IconValue, IconSource, ContentPosition, \n\tActionControl, ActionContent, ContainerPanelComponent, \n\tInputTextComponent, InputSelectComponent, ContainerSimpleComponent, \n\tInputUrlComponent, InputEmailComponent, ActionButtonComponent } from '../../forms/public-api';\n\n@Component({\n\tselector: 'toco-org-edit',\n\ttemplateUrl: './org-edit.component.html',\n\tstyleUrls: ['./org-edit.component.scss']\n})\nexport class OrgEditComponent implements OnInit\n{\n    /**\n     * Represents the `OperationAction` enum for internal use.\n     */\n\tpublic readonly operationAction: typeof OperationAction;\n\n\t/**\n\t * Represents the current organization.\n\t */\n\t@Input()\n\tpublic org: Organization;\n\n\t/**\n\t * Tracks the value and validity state of the internal child controls that contains this component.\n\t */\n    private panelFormSection: FormSection;\n\n    /**\n     * Contains the panel's content.\n     */\n\tpublic panelContent: PanelContent;\n\n\tpublic constructor(private _router: Router, private _activatedRoute: ActivatedRoute)\n\t{\n\t\tthis.operationAction = OperationAction;\n\t\tthis.panelFormSection = new FormGroup({ }, [ ]);\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\t// /* Gets the `Organization` data. */\n\t\t// this._activatedRoute.data.subscribe(\n\t\t// \t(data: { 'org': Organization }) => {\n\t\t// \t\tthis.org = data.org;\n\n\t\t// \t\tconsole.log('Data got for editing: ', this.org);\n\t\t// \t}\n\t\t// )\n\n\t\t/* Creates the panel's content. */\n\t\tthis.panelContent = this._initPanelContent();\n\t}\n\n    /**\n     * Returns the panel's content.\n     */\n    private _initPanelContent(): PanelContent\n    {\n\t\treturn {\n\t\t\t'formSection': this.panelFormSection,\n\t\t\t'name': 'panel',\n\t\t\t'label': 'Edita la organización seleccionada',\n\t\t\t'controlType': ContainerPanelComponent,\n\t\t\t'description': '',\n\t\t\t'iconName': undefined /*''*/,\n\t\t\t'formSectionContent': [\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'name',\n\t\t\t\t\t'label': 'Name typically used to refer to the institute',\n\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': this.org.name,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Name typically used to refer to the institute'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'status',\n\t\t\t\t\t'label': 'Institute status',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': this.org.status,\n\t\t\t\t\t'width': '45%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Institute status',\n\t\t\t\t\t'selectOptions': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Active',\n\t\t\t\t\t\t\t'value': 'active'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Closed',\n\t\t\t\t\t\t\t'value': 'closed'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Unknown',\n\t\t\t\t\t\t\t'value': 'unknown'\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'multiple': false\n\t\t\t\t},\n\n\n\t\t\t\tthis._initIdentifiersContent('Organization Identifiers, different from GRID mapping', this.org.identifiers, false),\n\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'aliases',\n\t\t\t\t\t'label': 'The list of other names the institute is known as',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': false,\n\t\t\t\t\t'value': this.org.aliases,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'The list of other names the institute is known as',\n\t\t\t\t\t/* The 'selectOptions' field is gotten from the 'value' field. */\n\t\t\t\t\t'multiple': true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'acronyms',\n\t\t\t\t\t'label': 'The of short acronyms the institute is known as (e.g. MRC for the Medical Research Council)',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': false,\n\t\t\t\t\t'value': this.org.acronyms,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'The list of short acronyms the institute is known as (e.g. MRC for the Medical Research Council)',\n\t\t\t\t\t/* The 'selectOptions' field is gotten from the 'value' field. */\n\t\t\t\t\t'multiple': true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'types',\n\t\t\t\t\t'label': 'The list of types describing the institute',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': this.org.types,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'The list of types describing the institute',\n\t\t\t\t\t'selectOptions': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Education',\n\t\t\t\t\t\t\t'value': 'Education'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Healthcare',\n\t\t\t\t\t\t\t'value': 'Healthcare'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Company',\n\t\t\t\t\t\t\t'value': 'Company'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Archive',\n\t\t\t\t\t\t\t'value': 'Archive'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Nonprofit',\n\t\t\t\t\t\t\t'value': 'Nonprofit'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Government',\n\t\t\t\t\t\t\t'value': 'Government'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Facility',\n\t\t\t\t\t\t\t'value': 'Facility'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Other',\n\t\t\t\t\t\t\t'value': 'Other'\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'multiple': true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputUrlComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'wikipedia_url',\n\t\t\t\t\t'label': 'URL of the wikipedia page for the institute',\n\t\t\t\t\t'controlType': InputUrlComponent,\n\t\t\t\t\t'required': false,\n\t\t\t\t\t'value': this.org.wikipedia_url,\n\t\t\t\t\t'width': '45%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'URL of the wikipedia page for the institute'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputEmailComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'email_address',\n\t\t\t\t\t'label': 'Contact email address for the institute',\n\t\t\t\t\t'controlType': InputEmailComponent,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': this.org.email_address,\n\t\t\t\t\t'width': '45%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Contact email address for the institute'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'ip_addresses',\n\t\t\t\t\t'label': 'The list of IP addresses known to belong to the institute',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': false,\n\t\t\t\t\t'value': this.org.ip_addresses,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'The list of IP addresses known to belong to the institute',\n\t\t\t\t\t/* The 'selectOptions' field is gotten from the 'value' field. */\n\t\t\t\t\t'multiple': true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'established',\n\t\t\t\t\t'label': 'Year the institute opened, CE',\n\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': this.org.established,\n\t\t\t\t\t'width': '45%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Year the institute opened, CE'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t'name': 'links',\n\t\t\t\t\t'label': 'The list of URLs linking to things like the homepage for the institute',\n\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t'required': false,\n\t\t\t\t\t'value': this.org.links,\n\t\t\t\t\t'width': '100%',\n\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'The list of URLs linking to things like the homepage for the institute',\n\t\t\t\t\t/* The 'selectOptions' field is gotten from the 'value' field. */\n\t\t\t\t\t'multiple': true\n\t\t\t\t},\n\n\t\t\t\tthis._initLabelsSimpleContent(),\n\n\t\t\t\tthis._initRelationshipsSimpleContent(),\n\n\t\t\t\tthis._initAddressesSimpleContent()\n\t\t\t]\n\t\t};\n\t}\n\n    /**\n     * Returns the identifiers' content. \n     */\n    private _initIdentifiersContent(description: string, value: Identifier[], isDynamic: boolean): ContainerContent\n    {\n        let result: ContainerContent = {\n\t\t\t'formSection': ContainerSimpleComponent.getFormArrayByDefault(),\n\t\t\t'name': 'identifiers',\n\t\t\t'label': description,\n\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t'value': value,\n\t\t\t'width': '100%',\n//            'appearance': TextInputAppearance.outline,\n\t\t\t'required': true,\n\t\t\t'ariaLabel': description,\n\t\t\t'isDynamic': isDynamic,\n            'formSectionContent': [\n\t\t\t\t{\n\t\t\t\t\t'formSection': ContainerSimpleComponent.getFormGroupByDefault(),\n\t\t\t\t\t'name': '0',\n\t\t\t\t\t'label': 'Organization Identifier',\n\t\t\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t\t\t'width': '100%',\n\t\t//            'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Organization Identifier',\n\t\t\t\t\t'formSectionContent': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'idtype',\n\t\t\t\t\t\t\t'label': 'Identifier type',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '50%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Identifier type',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'value',\n\t\t\t\t\t\t\t'label': 'Identifier value',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '50%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Identifier value',\n\t\t\t\t\t\t\t'startHint': new HintValue(HintPosition.start, 'Un identificador es una secuencia de letras')\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tif (isDynamic)\n\t\t{\n\t\t\tresult.formSectionContent[0].formSectionContent.push(this._initRemoveButtonContent('Remove identifier'));\n\t\t}\n\n\t\treturn result;\n\t}\n\n    /**\n     * Returns the labels' content. \n     */\n    private _initLabelsSimpleContent(): ContainerContent\n    {\n\t\treturn {\n\t\t\t'formSection': ContainerSimpleComponent.getFormArrayByDefault(),\n\t\t\t'name': 'labels',\n\t\t\t'label': 'Name of the institute in different languages',\n\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t'value': this.org.labels,\n\t\t\t'width': '100%',\n//            'appearance': TextInputAppearance.outline,\n\t\t\t'ariaLabel': 'Name of the institute in different languages',\n\t\t\t'formSectionContent': [\n\t\t\t\t{\n\t\t\t\t\t'formSection': ContainerSimpleComponent.getFormGroupByDefault(),\n\t\t\t\t\t'name': '0',\n\t\t\t\t\t'label': 'Label diff lang',\n\t\t\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t\t\t'width': '100%',\n\t\t//            'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Label diff lang',\n\t\t\t\t\t'formSectionContent': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'label',\n\t\t\t\t\t\t\t'label': 'Institute name in a language variant',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t/* 'value': undefined, this is the default behavior. */\n\t\t\t\t\t\t\t'width': '70%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Institute name in a language variant'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'iso639',\n\t\t\t\t\t\t\t'label': 'ISO-639-1 language code',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t/* 'value': undefined, this is the default behavior. */\n\t\t\t\t\t\t\t'width': '30%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'ISO-639-1 language code',\n\t\t\t\t\t\t\t//'startHint': new HintValue(HintPosition.start, 'ISO-639-1 language code')\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tthis._initRemoveButtonContent('Remove label')\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n    /**\n     * Returns the relationships' content.\n     */\n    private _initRelationshipsSimpleContent(): ContainerContent\n    {\n\t\treturn {\n\t\t\t'formSection': ContainerSimpleComponent.getFormArrayByDefault(),\n\t\t\t'name': 'relationships',\n\t\t\t'label': 'Any relationships the institute has to others',\n\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t'value': this.org.relationships,\n\t\t\t'required': false,  /* The `relationships` can be empty by definition. */\n\t\t\t'width': '100%',\n//            'appearance': TextInputAppearance.outline,\n\t\t\t'ariaLabel': 'Any relationships the institute has to others',\n\t\t\t'formSectionContent': [\n\t\t\t\t{\n\t\t\t\t\t'formSection': ContainerSimpleComponent.getFormGroupByDefault(),\n\t\t\t\t\t'name': '0',\n\t\t\t\t\t'label': 'Relationship',\n\t\t\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t\t\t'width': '100%',\n\t\t//            'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Relationship',\n\t\t\t\t\t'formSectionContent': [\n\n\t\t\t\t\t\t/* This `identifiers` value is `undefined` because it is inside a `FormArray`. */\n\t\t\t\t\t\tthis._initIdentifiersContent('Related Organization Identifiers', undefined, true),\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputSelectComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'type',\n\t\t\t\t\t\t\t'label': 'Relationship type',\n\t\t\t\t\t\t\t'controlType': InputSelectComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Relationship type',\n\t\t\t\t\t\t\t'selectOptions': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'label': 'Parent',\n\t\t\t\t\t\t\t\t\t'value': 'parent'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'label': 'Related',\n\t\t\t\t\t\t\t\t\t'value': 'related'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'label': 'Child',\n\t\t\t\t\t\t\t\t\t'value': 'child'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'multiple': false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'label',\n\t\t\t\t\t\t\t'label': 'Name of the related institute',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Name of the related institute'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tthis._initRemoveButtonContent('Remove relationship')\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n    /**\n     * Returns the addresses' content.\n     */\n    private _initAddressesSimpleContent(): ContainerContent\n    {\n\t\treturn {\n\t\t\t'formSection': ContainerSimpleComponent.getFormArrayByDefault(),\n\t\t\t'name': 'addresses',\n\t\t\t'label': 'An array of addresses associated with the institute',\n\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t'value': this.org.addresses,\n\t\t\t'required': true,  /* The `addresses` can not be empty by definition. */\n\t\t\t'width': '100%',\n//            'appearance': TextInputAppearance.outline,\n\t\t\t'ariaLabel': 'An array of addresses associated with the institute',\n\t\t\t'formSectionContent': [\n\t\t\t\t{\n\t\t\t\t\t'formSection': ContainerSimpleComponent.getFormGroupByDefault(),\n\t\t\t\t\t'name': '0',\n\t\t\t\t\t'label': 'Address',\n\t\t\t\t\t'controlType': ContainerSimpleComponent,\n\t\t\t\t\t'width': '100%',\n\t\t//            'appearance': TextInputAppearance.outline,\n\t\t\t\t\t'ariaLabel': 'Address',\n\t\t\t\t\t'formSectionContent': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'city',\n\t\t\t\t\t\t\t'label': 'Name of the city',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Name of the city'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'country',\n\t\t\t\t\t\t\t'label': 'Name of the country',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Name of the country'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'country_code',\n\t\t\t\t\t\t\t'label': 'ISO 3166-1 alpha-2 code of the country',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'ISO 3166-1 alpha-2 code of the country'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'lat',\n\t\t\t\t\t\t\t'label': 'Latitute of the institute',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Latitute of the institute'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'lng',\n\t\t\t\t\t\t\t'label': 'Longitude of the institute',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Longitude of the institute'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'line_1',\n\t\t\t\t\t\t\t'label': 'First line of the address',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'First line of the address'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'line_2',\n\t\t\t\t\t\t\t'label': 'Second line of the address',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': false,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Second line of the address'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'line_3',\n\t\t\t\t\t\t\t'label': 'Third line of the address',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': false,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Third line of the address'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'postcode',\n\t\t\t\t\t\t\t'label': 'Postcode/zipcode',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Postcode/zipcode'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t//TODO: Poner aquí el campo 'primary' de tipo 'boolean' (checkbox).\n\t\t\t\t\t\t//This address identifies the main location\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'state',\n\t\t\t\t\t\t\t'label': 'Name of the state/region',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'Name of the state/region'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'formControl': InputTextComponent.getFormControlByDefault(),\n\t\t\t\t\t\t\t'name': 'state_code',\n\t\t\t\t\t\t\t'label': 'ISO 3166-2 region code',\n\t\t\t\t\t\t\t'controlType': InputTextComponent,\n\t\t\t\t\t\t\t'required': true,\n\t\t\t\t\t\t\t'width': '45%',\n\t\t\t\t\t\t\t'appearance': TextInputAppearance.outline,\n\t\t\t\t\t\t\t'ariaLabel': 'ISO 3166-2 region code'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t//TODO: Poner el resto de los campos.\n\n\t\t\t\t\t\tthis._initRemoveButtonContent('Remove address')\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\t/**\n\t * Returns the remove button's content.\n\t * @param tooltip The tooltip to show.\n\t */\n\tprivate _initRemoveButtonContent(tooltip: string): ActionContent\n\t{\n\t\treturn {\n\t\t\t'name': 'remove',\n\t\t\t'label': 'Remove',\n\t\t\t'controlType': ActionButtonComponent,\n\t\t\t'width': '30%',\n\t\t\t// 'appearance': TextInputAppearance.outline,\n\t\t\t'ariaLabel': 'Remove',\n\t\t\t'icon': new IconValue(IconSource.external, ContentPosition.prefix, 'remove_circle'),\n\t\t\t'tooltip': new HintValue(HintPosition.start, tooltip),\n\t\t\t'click': (sender: ActionControl): void => {\n\t\t\t\tsender.parentContainerControl.parentContainerControl.removeFromFormArray(+(sender.parentContainerControl.content.name));\n\t\t\t},\n\t\t\t'isDisabled': (sender: ActionControl): boolean => {\n\t\t\t\treturn !(sender.parentContainerControl.parentContainerControl.canRemoveFromFormArray);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Does the tasks for the operation action.\n\t * @param op The operation action.\n\t */\n\tpublic doOperationAction(op: OperationAction): void\n\t{\n\t\tconsole.log('panelContent: ', this.panelContent);\n\t\tconsole.log('panelContent.parentFormSection: ', this.panelContent.parentFormSection);\n\t\tconsole.log('panelContent.formSection', this.panelContent.formSection);\n\t\t// console.log('addressesPanelFormSection', this.addressesPanelFormSection);\n\t\t// console.log('labelsSimpleFormSection', this.labelsSimpleFormSection);\n\t\treturn;\n\n\t\tif(op == OperationAction.submit)\n\t\t{\n\t\t\t//TODO: Do the tasks for the submit action.\n\t\t}\n\n\t\t/* Currently, it does not do any task for the cancel action. */\n\n\t\tif(op != OperationAction.reset)\n\t\t{\n\t\t\tthis._router.navigate(['../', { 'operation': op }]);\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the reset action is disabled; otherwise, false.\n\t */\n\tpublic get isResetActionDisabled(): boolean\n\t{\n\t\t//TODO: Implement this.\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if the submit action is disabled; otherwise, false.\n\t */\n\tpublic get isSubmitActionDisabled(): boolean\n\t{\n\t\treturn this.panelFormSection.invalid;\n\t}\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n\nimport { Organization } from '../../entities/public-api';\nimport { OperationAction, FormSection, PanelContent, ContainerPanelComponent } from '../../forms/public-api';\n\n@Component({\n\tselector: 'toco-org-add',\n\ttemplateUrl: './org-add.component.html',\n\tstyleUrls: ['./org-add.component.scss']\n})\nexport class OrgAddComponent implements OnInit\n{\n    /**\n     * Represents the `OperationAction` enum for internal use. \n     */\n\tpublic readonly operationAction: typeof OperationAction;\n\n\t/**\n\t * Represents the organization for adding. \n\t */\n\tpublic org: Organization;\n\n\t/**\n\t * Tracks the value and validity state of the internal child controls that contains this component. \n\t */\n\tprivate panelFormSection: FormSection;\n\t\n    /**\n     * Contains the panel's content. \n     */\n\tpublic panelContent: PanelContent;\n\n\tpublic constructor(private _router: Router, private _activatedRoute: ActivatedRoute)\n\t{\n\t\tthis.operationAction = OperationAction;\n\t\tthis.panelFormSection = new FormGroup({ }, [ ]);\n\t}\n\n\tpublic ngOnInit()\n\t{\n\t\t/* Creates the panel's content. */\n\t\tthis.panelContent = this._initPanelContent();\n\t}\n\n    /**\n     * Returns the panel's content. \n     */\n    private _initPanelContent(): any//PanelContent\n    {\n\t\treturn {\n\t\t\t/* The 'label' and 'title' fields have the same values, but they are different fields with different functionalities. */\n\t\t\t'formSection': this.panelFormSection,\n\t\t\t'name': 'panel',\n\t\t\t'label': 'Adiciona una nueva organización',\n\t\t\t'controlType': ContainerPanelComponent,\n\t\t\t'title': 'Adiciona una nueva organización',\n\t\t\t'description': '',\n\t\t\t'iconName': undefined /*''*/,\n\t\t\t'formSectionContent': [\n\t\t\t\t//TODO: Poner los campos.'\n\t\t\t]\n\t\t};\n\t}\n\n\t/**\n\t * Does the tasks for the operation action. \n\t * @param op The operation action. \n\t */\n\tpublic doOperationAction(op: OperationAction): void\n\t{\n\t\tif(op == OperationAction.submit)\n\t\t{\n\t\t\t//TODO: Do the tasks for the submit action. \n\t\t}\n\n\t\t/* Currently, it does not do any task for the cancel action. */\n\n\t\tthis._router.navigate(['../', { 'operation': op }]);\n\t}\n\n\t/**\n\t * Returns true if the submit action is disabled; otherwise, false. \n\t */\n\tpublic get isSubmitActionDisabled(): boolean\n\t{\n\t\treturn this.panelFormSection.invalid;\n\t}\n}\n","import { isArray } from 'util';\nimport { Component, OnInit, Output, EventEmitter, Input, Type } from '@angular/core';\nimport { Organization, SearchResponse, HitList, Aggr } from '../../entities/public-api';\nimport { FormControl } from '@angular/forms';\nimport { SearchService, OrganizationServiceNoAuth } from '../../backend/public-api';\nimport { HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'toco-org-search',\n  templateUrl: './org-search.component.html',\n  styleUrls: ['./org-search.component.scss']\n})\nexport class OrgSearchComponent implements OnInit {\n\n  /**\n   * Input `orgCtrl` is a FormControl\n   */\n  @Input()\n  orgCtrl = new FormControl();\n\n  filteredOrg = new  HitList<Organization>();\n\n  params= new HttpParams();\n\n  /**\n   * Input `orgFilter` is a dict with `type` and `value` to filter the organizations,\n   * @Example { type: 'country' , value: 'Cuba\" }\n   */\n  @Input()\n  orgFilter: { type: string, value: string} | Array<{ type: string, value: string}>;\n\n  @Input()\n  placeholder: string = \"Escriba al menos 3 letras\";\n\n  @Input()\n  label: string = \"Busque una organización\";\n\n  @Input()\n  appearance: string = \"outline\";\n\n  /**\n   * Input `cleaning` is a boolen, if true then clean the search\n   */\n  @Input()\n  cleaning: boolean = false;\n\n  @Output()\n  selectedOrg: EventEmitter<Organization> = new EventEmitter<Organization>();\n\n  toSearch=0;\n  constructor( private _orgService: OrganizationServiceNoAuth) {  }\n\n  ngOnInit() {\n    this.params = this.params.set('size', '10');\n    this.params = this.params.set('page', '1');\n    if (this.orgFilter != undefined) {\n      if (isArray(this.orgFilter )){\n        const filter_array = (this.orgFilter as Array<{ type: string, value: string}>);\n        for(let filter of filter_array){\n          this.params = this.params.set(filter.type, filter.value);\n        }\n      }\n      else {\n        const type = (this.orgFilter as { type: string, value: string} ).type;\n        const value = (this.orgFilter as { type: string, value: string} ).value;\n        this.params = this.params.set(type, value);\n      }\n    }\n    this.orgCtrl.valueChanges\n    .subscribe({\n      next: (orgValueChanges) => {\n        this.toSearch++;\n        // this condition check if the param is a `string` an if at least write 3 letters\n        if (this.toSearch > 3 && typeof orgValueChanges === 'string') {\n          this.toSearch = 0;\n          this.params = this.params.set('q', orgValueChanges)\n          this._orgService.getOrganizations(this.params).subscribe({\n              next: (response) => {\n                this.filteredOrg = response.hits\n              }\n          });\n        } else if (typeof orgValueChanges === 'object') {\n          this.toSearch = 0;\n          this.selectedOrg.emit(orgValueChanges);\n          if (this.cleaning){\n            this.orgCtrl.setValue('');\n          }\n        }\n      }\n    })\n  }\n  /* This function return the organization name\n   * @param org the Organization object\n   */\n  displayFn(org?: Organization): string | undefined {\n    return org ? org.name : undefined;\n  }\n\n}\n","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { UserService, SortDirection, PageRequest, Page } from '../../core/public-api';\nimport { ENDPOINT_APIS, OrganizationService } from '../../backend/public-api';\nimport { Organization } from '../../entities/public-api';\nimport { TableContent, TableComponent, CellContentWrap, InputContent, TextAlign, \n    TextInputAppearance, IconValue, IconSource, HintPosition, HintValue, ContentPosition, \n    ContainerContent, InputTextComponent } from '../../forms/public-api';\n\n@Component({\n  selector: 'toco-org-table-edit',\n  templateUrl: './org-table-edit.component.html',\n  styleUrls: ['./org-table-edit.component.scss']\n})\nexport class OrgTableEditComponent implements OnInit {\n\n    /**\n     * Contains the content of the identifiers section. \n     */\n    public identifiersContent: ContainerContent;\n    // public identifiersContent_Complex: ContainerContent;\n\n    /**\n     * The search filter. \n     */\n\t// public searchContent: InputContent;\n\n    // @ViewChild('input_search', { static: true })\n    // private _inputSearch: InputTextComponent;\n\n    /**\n     * The sources list.\n     * Use this field to initialize only; to change value use the `_tableControl` field.\n     */\n    public tableContent: TableContent<any>;\n\n    @ViewChild(TableComponent, { static: true })\n    private _tableControl: TableComponent;\n\n    public constructor(private _router: Router, private _activatedRoute: ActivatedRoute, private _organizationService: OrganizationService)\n    //public constructor(private _userService: UserService)\n\t{ }\n\n\tpublic ngOnInit(): void\n\t{\n        /* Sets an initial search value. */\n        //this._inputSearch.formControl.setValue('cl');\n\n        /***************************/\n\n        // this.searchContent = this._initSearchContent();\n        this.tableContent = this._initTableContent();\n\n        /***************************/\n\n        // this._tableControl.page.subscribe((value) => console.log('page', value));\n    }\n\n    private _initSearchContent(): InputContent\n    {\n        return {\n            'formControl': InputTextComponent.getFormControlByDefault(),\n            'width': '65%',\n\n            'label': 'Write a text to search',\n            'controlType': InputTextComponent,\n    \n            'textAlign': TextAlign.left,\n            'ariaLabel': 'Search',\n    \n            'appearance': TextInputAppearance.outline,\n    \n            'prefixIcon': new IconValue(IconSource.external, ContentPosition.prefix, 'search'),\n    \n            'startHint': new HintValue(HintPosition.start, 'Searches when typing stops.')\n        };\n    }\n\n    private _initTableContent(): TableContent<any>\n    {\n        return {\n            'columnsObjectProperty': ['name', 'status', 'email_address'],\n            //'columnsObjectProperty': ['id', 'name', 'registrationDate'],\n            'columnsHeaderText': ['Nombre', 'Estatus', 'Dirección de Correo'],\n            //'columnsHeaderText': ['id', 'name', 'registrationDate'],\n            'columnsWidth': ['60%', '22%', '18%'],\n            'columnContentWrap': [CellContentWrap.ellipsis, CellContentWrap.ellipsis, CellContentWrap.responsible],\n            'createCssClassesForRow': (rowData: any) => {\n                return {\n                    //'new-release': rowData['email_address'],\n                    'selected-row': (rowData[this.tableContent.propertyNameToIdentify]) == this._tableControl.selectedRow\n                };\n            },\n            'propertyNameToIdentify': 'id',\n            //'propertyNameToIdentify': 'id',\n\n            // 'filter': {\n            //     'search': this._inputSearch,\n            //     //'registration': undefined\n            // },\n            'sort': {\n                'active': 'id',\n                'direction': SortDirection.desc\n            },\n            'pageIndex': 0,\n            'pageSize': 5,\n            'pageSizeOptions': [5, 10, 20, 50],\n            //'hidePageSize': true,\n            'showFirstLastButtons': true,\n\n            'endpoint': this._getMySources.bind(this),\n            //'endpoint': this._userService.page.bind(this._userService),\n\n            actions: [\n                { icon: 'visibility', route: 'ver', tooltip: 'Ver' },\n                { icon: 'edit', route: 'editar', tooltip: 'Editar' },\n            ]\n        };\n    }\n\n    private _getMySources(pageRequest: PageRequest): Observable<Page<any>>\n    {\n        return this._organizationService.get<Organization[]>(ENDPOINT_APIS.organizations, []).pipe(\n            map((response: Organization[]): Page<Organization> => {\n                console.log('Organizations Response: ', response);\n                // if (response && response.status != ResponseStatus.ERROR){\n                    return {\n                        'data': response,\n                        'totalData': response.length,\n                        'pageIndex': pageRequest.paginator.pageIndex,\n                        'pageSize': pageRequest.paginator.pageSize\n                    };\n                // }\n                \n            })\n        );\n\t}\n\t\n\tpublic doOperation(): void\n\t{\n\t\tthis._router.navigate(['organizaciones/adicionar']);\n\t}\n\n}\n","import { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, EventEmitter, Injectable, Input, OnInit, Output } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationServiceNoAuth } from '../../backend/public-api';\nimport { Hit } from '../../entities/common';\nimport { Organization, OrganizationRelationships } from '../../entities/public-api';\n\n\n\n/** Flat node with expandable and level information */\nexport class OrganizationFlatNode {\n  constructor(public item: Hit<Organization>,\n              public parent: OrganizationFlatNode,\n              public level = 1,\n              public expandable = false,\n              public isLoading = false) { }\n}\n\n@Injectable()\nexport class OrganizationDataSource {\n\n\n  dataChange = new BehaviorSubject<OrganizationFlatNode[]>([]);\n  orgRelationshipType: string = null;\n\n  constructor(private _treeControl: FlatTreeControl<OrganizationFlatNode>,\n              private orgService: OrganizationServiceNoAuth) { }\n\n\n  get data(): OrganizationFlatNode[] { return this.dataChange.value; }\n  set data(value: OrganizationFlatNode[]) {\n    this._treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n\n  connect(collectionViewer: CollectionViewer): Observable<OrganizationFlatNode[]> {\n    this._treeControl.expansionModel.onChange.subscribe(change => {\n      if ((change as SelectionChange<OrganizationFlatNode>).added ||\n        (change as SelectionChange<OrganizationFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<OrganizationFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<OrganizationFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: OrganizationFlatNode, expand: boolean) {\n    node.isLoading = true;\n    const index = this.data.indexOf(node);\n    if (node.item.metadata.relationships.length <= 0 || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n    if (expand) {\n      this.orgService.getOrganizationRelationships(node.item.metadata.id, this.orgRelationshipType).subscribe(\n        (response) => {\n          const nodes = response.map(\n            org =>\n              new OrganizationFlatNode(org, node, node.level + 1, org.metadata.relationships.length > 0)\n          );\n\n          this.data.splice(index + 1, 0, ...nodes);\n\n          this.dataChange.next(this.data);\n          node.isLoading = false;\n\n        },\n        (error) => { },\n        () => { }\n      );\n    } else {\n      let count = 0;\n      for (let i = index + 1; i < this.data.length\n        && this.data[i].level > node.level; i++) {\n        count++\n      }\n      this.data.splice(index + 1, count);\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }\n  }\n}\n\n@Component({\n  selector: 'toco-org-tree-viewer',\n  templateUrl: './org-tree-viewer.component.html',\n  styleUrls: ['./org-tree-viewer.component.scss']\n})\nexport class OrgTreeViewerComponent implements OnInit {\n\n  @Input() organizations: Array<Hit<Organization>> = new Array();\n\n  @Input() orgRelationshipType: string = null;\n\n  @Input() iconAction = 'visibility';\n\n  @Input() labelAction = '';\n\n  @Input() ngStyle = null;\n\n  @Output()\n  action = new EventEmitter<OrganizationFlatNode>();\n\n  public error = false;\n\n  treeControl: FlatTreeControl<OrganizationFlatNode>;\n\n  dataSource: OrganizationDataSource;\n\n  getLevel = (node: OrganizationFlatNode) => node.level;\n\n  isExpandable = (node: OrganizationFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: OrganizationFlatNode) => _nodeData.expandable;\n\n  constructor(\n    private orgService: OrganizationServiceNoAuth) {\n    this.treeControl = new FlatTreeControl<OrganizationFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new OrganizationDataSource(this.treeControl, orgService);\n  }\n\n  ngOnInit() {\n    this.dataSource.orgRelationshipType = this.orgRelationshipType;\n\n    this.dataSource.data = this.organizations.map(\n      org =>\n        new OrganizationFlatNode(org, null,  1, org.metadata.relationships.length > 0)\n    );\n  }\n\n  emitAction(org) {\n    this.action.emit(org);\n  }\n}\n","\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TocoFormsModule } from '../forms/public-api';\nimport { StaticsModule } from '../statics/public-api';\n\n\nimport { OrgViewComponent } from './org-view/org-view.component';\nimport { OrgViewAccordionComponent } from './org-view/org-view-accordion/org-view-accordion.component';\nimport { OrgViewAddressComponent } from './org-view/org-view-address/org-view-address.component';\nimport { OrgViewGeoNamesCityComponent } from './org-view/org-view-geo-names-city/org-view-geo-names-city.component';\nimport { OrgViewRelationshipComponent } from './org-view/org-view-relationship/org-view-relationship.component';\nimport { OrgEditComponent } from './org-edit/org-edit.component';\nimport { OrgAddComponent } from './org-add/org-add.component';\nimport { OrgSearchComponent } from './org-search/org-search.component';\nimport { MatAutocompleteModule, MatChipsModule } from '@angular/material';\nimport { OrgTableEditComponent } from './org-table-edit/org-table-edit.component';\n// import { OrgFooterComponent } from './org-footer/org-footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AngularMaterialModule } from '../angular-material/public-api';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { OrgTreeViewerComponent } from './org-tree-viewer/org-tree-viewer.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tOrgViewComponent,\n\t\tOrgViewAccordionComponent,\n\t\tOrgViewAddressComponent,\n\t\tOrgViewGeoNamesCityComponent,\n\t\tOrgViewRelationshipComponent,\n\t\tOrgEditComponent,\n\t\tOrgAddComponent,\n\t\tOrgSearchComponent,\n\t\tOrgTableEditComponent,\n\t\t// OrgFooterComponent,\n\t\tOrgTreeViewerComponent\n\t],\n\n\timports: [\n\t\t// SharedModule,\n\t\tFlexLayoutModule,\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tAngularMaterialModule,\n\n\t\tReactiveFormsModule,\n\t\tRouterModule,\n\t\tTocoFormsModule,\n\t\tMatAutocompleteModule,\n\t\tMatChipsModule,\n\t\tStaticsModule\n\t],\n\n\texports: [\n\t\tOrgViewComponent,\n\t\tOrgEditComponent,\n\t\tOrgAddComponent,\n\t\tOrgSearchComponent,\n    // OrgFooterComponent,\n    OrgTreeViewerComponent\n\t],\n\tschemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class OrganizationsModule\n{ }\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'toco-person',\n    templateUrl: './person.component.html',\n    styleUrls: ['./person.component.scss']\n})\nexport class PersonComponent implements OnInit\n{\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'toco-person-view',\n    templateUrl: './person-view.component.html',\n    styleUrls: ['./person-view.component.scss']\n})\nexport class PersonViewComponent implements OnInit\n{\n    constructor()\n    { }\n\n    ngOnInit()\n    { }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\n\nimport { PersonComponent } from './person/person.component';\nimport { PersonViewComponent } from './person-view/person-view.component';\n\n@NgModule({\n    declarations: [\n        PersonComponent,\n        PersonViewComponent\n    ],\n\n    imports: [\n        SharedModule\n    ],\n\n    exports: [\n        PersonComponent,\n        PersonViewComponent\n    ]\n})\nexport class PersonModule\n{ }\n","import { Component, OnInit, Input} from '@angular/core';\nimport { Record } from '../../entities/public-api';\n\n@Component({\n  selector: 'toco-record',\n  templateUrl: './record.component.html',\n  styleUrls: ['./record.component.scss']\n})\nexport class RecordComponent implements OnInit {\n\n  @Input()\n  public record: Record;\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Aggr, AggrBucket } from \"../../entities/public-api\";\n\nexport interface AggregationsSelection{\n  [id: string]: string[]\n}\n\n@Component({\n  selector: \"toco-search-aggregations\",\n  templateUrl: \"./aggregations.component.html\",\n  styleUrls: [\"./aggregations.component.scss\"],\n})\nexport class AggregationsComponent implements OnInit {\n  @Input()\n  aggregations: { [id: string]: Aggr } = {};\n\n  /***\n   * {\n   *  'country': ['Cuba','Peru'],\n   *  'state': ['New York']\n   *  ...\n   * }\n   *\n   * in the aggregation country, buckets 'Cuba' and 'Peru' are selected\n   * in the aggregation state, bucket 'New York' is selected\n   *\n   */\n  @Input()\n  selectedAggr: AggregationsSelection = {};\n\n  @Output()\n  keySelect = new EventEmitter<AggregationsSelection>();\n\n  keys = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    for (const key in this.aggregations) {\n      if (this.aggregations.hasOwnProperty(key)) {\n        const element = this.aggregations[key];\n        //this.keys.push(key);\n        this.keys.push({\"key\":key, \"sp\":this._translate(key)});\n      }\n    }\n    console.log(\"cola\");\n    console.log(this.keys);\n\n  }\n\n  //aqui se agregan los casos que puedan haber en las agregaciones para q salgan siempre en español\n  private _translate(key){\n    switch (key)\n    {\n      case \"status\": {\n        return \"Estado\";\n      }\n      case \"country\": {\n        return \"País\";\n      }\n      case \"state\": {\n        return \"Provincia (Estado)\";\n      }\n      case \"types\": {\n        return \"Tipos\";\n      }\n      default: {\n        return this.aggregations[key]['label'];\n\n      }\n    }\n\n    return key;\n  }\n\n\n  isSelected(aggrKey, bucket: AggrBucket) {\n\n    if (this.selectedAggr.hasOwnProperty(aggrKey)) {\n      for (let index = 0; index < this.selectedAggr[aggrKey].length; index++) {\n        const element = this.selectedAggr[aggrKey][index];\n        if (element == bucket.key) {\n          // console.log(this.selectedAggr, aggrKey, bucket);\n          // console.log(\"--------------------\");\n\n          return true;\n        }\n      }\n      // this.selectedAggr[aggrKey].forEach((key) => {\n      //   if (key == bucket.key) {\n      //     console.log(this.selectedAggr, aggrKey, bucket);\n      //     console.log(\"--------------------\");\n\n      //     return true;\n      //   }\n      // });\n    }\n    // console.log(\"FALSE\");\n\n    return false;\n  }\n\n  selectionChange(aggrKey, bucket: AggrBucket) {\n    if (!this.selectedAggr.hasOwnProperty(aggrKey)){\n      this.selectedAggr[aggrKey] = [];\n    }\n\n      if (this.selectedAggr[aggrKey].find(k => k == bucket.key)){\n        this.selectedAggr[aggrKey] = this.selectedAggr[aggrKey].filter(k => k != bucket.key);\n      } else{\n        this.selectedAggr[aggrKey].push(bucket.key)\n      }\n\n\n    this.keySelect.emit(this.selectedAggr);\n  }\n}\n","\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n/**\n * Represents a component used to search a query. \n * \n * In order to use this component with the correct i18n, you must include \n * (in your i18n translate files that are in the folder `assets\\i18n`) \n * a translation key of name \"TOCO_SEARCH_QUERY_INPUT\" that contains \n * an object as value with the translation needed by this component. \n * \n * In the case of `es.json` file, you must include the following translation key: \n    \"TOCO_SEARCH_QUERY_INPUT\": {\n        \"INPUT_SEARCH_LABEL\": \"Buscar\",\n        \"INPUT_SEARCH_PLACEHOLDER\": \"Escriba un criterio y presione Enter\",\n        \"BUTTON_SEARCH\": \"Buscar\"\n    }\n * \n * In the case of `en.json` file, you must include the following translation key: \n    \"TOCO_SEARCH_QUERY_INPUT\": {\n        \"INPUT_SEARCH_LABEL\": \"Search\",\n        \"INPUT_SEARCH_PLACEHOLDER\": \"Write a phrase and press Enter\",\n        \"BUTTON_SEARCH\": \"Search\"\n    }\n * \n * If you have another language, then you have another `*.json` file, \n * and you must include the \"TOCO_SEARCH_QUERY_INPUT\" translation key with the correct translation values. \n */\n@Component({\n  selector: 'toco-search-query-input',\n  templateUrl: './query-input.component.html',\n  styleUrls: ['./query-input.component.scss']\n})\nexport class QueryInputComponent implements OnInit {\n\n  @Input()\n  query: string = \"\";\n\n  @Input()\n  minWordCount: number = 3;\n\n  @Input()\n  appearance: string = 'outline';\n\n  @Input()\n  inputColor: string = '';\n\n  @Input()\n  buttonColor: string = 'primary';\n\n  @Input()\n  showButton = true;\n\n  @Input()\n  width: number = 100;\n\n  @Output()\n  queryChange = new EventEmitter<string>();\n\n  queryCtrl = new FormControl();\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.queryCtrl.valueChanges\n    // .subscribe({\n    //   next: (queryValueChanges) => {\n    //     // this condition check if the param is a `string` an if at least write 3 letters\n    //     if (typeof queryValueChanges === 'string' && (queryValueChanges.length >= this.minWordCount)) {\n    //       this.queryChange.emit(queryValueChanges);\n    //     }\n    //   }\n    // })\n  }\n\n  riseQuery(){\n    this.queryChange.emit(this.queryCtrl.value ? this.queryCtrl.value : '');\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HitList, Record } from '../../entities/public-api';\n\n@Component({\n  selector: 'toco-record-list',\n  templateUrl: './record-list.component.html',\n  styleUrls: ['./record-list.component.scss']\n})\nexport class RecordListComponent implements OnInit {\n\n  @Input()\n  hitList: HitList<Record>;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.hitList);\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\n\nimport { RecordComponent } from './record/record.component';\nimport { AggregationsComponent } from './aggregations/aggregations.component';\nimport { QueryInputComponent } from './query-input/query-input.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RecordListComponent } from './record-list/record-list.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    RecordComponent,\n    AggregationsComponent,\n    QueryInputComponent,\n    RecordListComponent\n  ],\n\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SharedModule\n  ],\n\n  exports: [\n    RecordComponent,\n    AggregationsComponent,\n    QueryInputComponent,\n    RecordListComponent\n  ]\n})\nexport class SearchModule\n{ }\n","\n/**\n * An enum that represents the query param key. \n */\nexport enum QueryParamKey\n{\n    /**\n     * The query param for the current language. \n     */\n    lang = 'lang',\n\n    /**\n     * The query param for the page size. \n     */\n    size = 'size',\n\n    /**\n     * The query param for the page index. \n     */\n    page = 'page',\n\n    /**\n     * The query param for the query. \n     */\n    q = 'q',\n\n    /**\n     * The query param for the aggregations selection. \n     */\n    aggrsSel = 'aggrsSel'\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { MetadataService, MessageHandler, StatusCode, Environment } from '../../core/public-api';\nimport { Organization, VocabulariesInmutableNames, JournalVersion } from '../../entities/public-api';\n\n\nexport enum JournalDataType {\n    /** is used by default, `Journal` have not that type of data. */\n    default = 0,\n    title = 1,\n    subtitle = 2,\n    shortname = 3,\n    issnP = 4,\n    issnE = 5,\n    issnL = 6,\n    rnpsP = 7,\n    rnpsE = 21,\n    url = 8,\n    email = 9,\n    logo = 10,\n    purpose = 11,\n    start_year = 12,\n    end_year = 13,\n    frequency = 14,\n    seriadas_cubanas = 15,\n    facebook = 16,\n    twitter = 17,\n    linkedin = 18,\n    description = 19,\n    term = 20,\n    oaiurl = 22,\n}\n\n@Component({\n    selector: 'toco-journal-view',\n    templateUrl: './journal-view.component.html',\n    styleUrls: ['./journal-view.component.scss']\n})\nexport class JournalViewComponent implements OnInit {\n\n\n    @Input()\n    public topMainOrganization: Organization = null;\n\n\n    /**************** auxiliary variables *******************/\n\n    public panelOpenState = false;\n\n\n    public defaultLogo = this.env.sceibaHost + 'static/favicon.ico'\n\n    /**\n     * Button roperty, is to enable or disable if there are not more versions\n     */\n    isDisabledNavigatePrevious: boolean;\n    isDisabledNavigateNext: boolean;\n\n    public vocabularies: typeof VocabulariesInmutableNames;\n\n\n    /**************** journal variables *******************/\n\n    /**\n     * Represents a Journal Object, it is a type of Source.\n     * Need the source.version array filled\n     */\n    // @Input()\n    // public journal: JournalData;\n\n    @Input()\n    public editingJournal: JournalVersion;\n\n    @Input()\n    public versions: Array<JournalVersion>;\n\n\n    /**************** select journal version variables *******************/\n\n    /**\n     * the current version of a Journal, (a type of Source)\n     * it is to compare and show changes between Journal and last version of journal\n     * iteration over journal.versions\n     */\n    public selectedJournal: JournalVersion;\n\n\n    /** TODO: In the future databaseTerms and subjectTerms will be changes by\n     *  miarTerms and subjectsUnescoTerms\n     *  public miarTerms: Array<SourceClasification>;\n     *  public subjectsUnescoTerms: Array<SourceClasification>;\n    */\n\n\n    /**\n     * Properties to move between versions\n     */\n    private selectedVersion: number;\n    private lengthVersion: number;\n\n    /**\n     * Inmutables data types of Journal\n     */\n    public journalDataType = JournalDataType;\n\n\n\n    /**\n     * version.is_current = true\n     */\n    // public currentJournal: JournalVersion;\n\n\n\n    public showVersions = false;\n    public editVersion = false;\n\n\n\n    constructor(\n        private metadata: MetadataService,\n        private env: Environment,\n        private _snackBar: MatSnackBar,\n        public dialog: MatDialog\n    ) { }\n\n    ngOnInit() {\n\n        this.isDisabledNavigatePrevious = true;\n        this.isDisabledNavigateNext = false;\n\n        this.vocabularies = VocabulariesInmutableNames;\n\n        // guardar la cantidad total de versiones\n        this.lengthVersion = this.versions.length;\n        // guardar la posicion de la version donde este la actual\n        this.selectedVersion = this.getSelectedJournalPosition();\n\n        this.SelectJournalVersion();\n\n        this.metadata.setStandardMeta(\"Revista Científica \" + this.editingJournal.data.title, this.editingJournal.data.description, \"\");\n\n        // if (this.versions){\n        //   this.versions.forEach((journalVersion: JournalVersion, index: number) => {\n        //     // check if has versions to view and return that position\n        //     if (journalVersion.is_current) {\n        //         this.currentJournal = new JournalVersion();\n        //         this.currentJournal.deepcopy(journalVersion);\n        //     }\n        //   });\n        // }\n    }\n\n\n\n    /**\n     * Changes the selected position to the next one if possible\n     */\n    public nextVersion(): void {\n\n        if (this.selectedVersion < this.lengthVersion - 1) {\n\n            this.isDisabledNavigateNext = false;\n            this.isDisabledNavigatePrevious = false;\n            this.selectedVersion++;\n            this.SelectJournalVersion();\n\n        }\n        else {\n\n            this.isDisabledNavigateNext = true;\n            const m = new MessageHandler(this._snackBar);\n            m.showMessage(StatusCode.OK, 'No hay más versiones para mostrar')\n\n        }\n        if (this.selectedVersion == this.lengthVersion - 1) {\n            this.isDisabledNavigateNext = true;\n        }\n    }\n\n    /**\n     * Changes the selected position to the before one if possible\n     */\n    public previousVersion(): void {\n\n        if (this.selectedVersion > 0) {\n            this.isDisabledNavigatePrevious = false;\n            this.isDisabledNavigateNext = false;\n            this.selectedVersion--;\n            this.SelectJournalVersion();\n\n        }\n        else {\n\n            this.isDisabledNavigatePrevious = true;\n            const m = new MessageHandler(this._snackBar);\n            m.showMessage(StatusCode.OK, 'No hay más versiones para mostrar')\n\n        }\n        if (this.selectedVersion == 0) {\n            this.isDisabledNavigatePrevious = true;\n        }\n    }\n\n    /**\n     * Selects the selected journal as a JournalVersion\n     */\n    public SelectJournalVersion(): void {\n        if (this.versions.length >= 0 &&\n            this.selectedVersion >= 0 &&\n            this.selectedVersion < this.versions.length) {\n\n            // load the selected journal\n            let version = new JournalVersion();\n            version.deepcopy(this.versions[this.selectedVersion]);\n            this.selectedJournal = version;\n\n            // load if was viewed\n            // this.selectedJournalChecked = this.selectedJournal.reviewed;\n\n        }\n    }\n\n\n    /**\n     * Returns the position of the unseen version of the journal as JournalVersion\n     */\n    private getSelectedJournalPosition(): number {\n        let count = 0;\n        this.versions.forEach((journalVersion: JournalVersion, index: number) => {\n\n            // check if has versions to view and return that position\n            if (journalVersion.reviewed != null && journalVersion.reviewed) {\n                count = index;\n                return count;\n            }\n        });\n        return count;\n    }\n\n    sourceEditDone(version: JournalVersion) {\n        this.editVersion = false;\n        console.log('AAaAAAAAAAAAAAAAAAAAA');\n\n    }\n\n    toogleShowVersions(){\n        this.showVersions = !this.showVersions\n        this.editVersion = false;\n    }\n\n\n\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { SourceService, CatalogService, TaxonomyService } from '../../../backend/public-api';\nimport { MetadataService } from '../../../core/public-api';\nimport { IdentifierSchemas } from '../../../entities/common';\nimport { JournalData, JournalVersion, Organization, SourceClasification, SourceTypes, SourceSystems, VocabulariesInmutableNames, Term } from '../../../entities/public-api';\nimport { VocabularyTreeComponent } from '../../../forms/experimental/vocabulary-tree/vocabulary-tree.component';\nimport { PanelContent, FormContainerAction, ContainerPanelComponent, InputTextComponent, FormFieldType, HintValue, HintPosition, InputRnpsComponent, SelectComponent, TextareaComponent, InputUrlComponent, InputEmailComponent, VocabularyComponent, DatepickerComponent } from '../../../forms/public-api';\n\n@Component({\n  selector: \"toco-journal-edit\",\n  templateUrl: \"./journal-edit.component.html\",\n  styleUrls: [\"./journal-edit.component.scss\"],\n})\nexport class JournalEditComponent implements OnInit {\n  // TODO: Idea del componente:\n  // trabajan internamente con un journal, si recibe null entonces es uno nuevo, si recibe un journal entonces es editar.\n  // en ambos casos devuelve el journal editado, o sea el contenido, listo para hacer post en el backend.\n  public pageTitle = \"\";\n\n  public journalData: JournalData = null;\n\n  @Input()\n  public journalVersion: JournalVersion = null;\n\n  @Input()\n  public showEditHeader = false;\n\n  @Input()\n  public description = \"\";\n\n  @Input()\n  public topMainOrganization: Organization = null;\n\n  @Input()\n  public showFinalStep = true;\n\n  // journal identifiers variables for step 0\n  identifiersPanel: PanelContent = null;\n  identifiersFormGroup: FormGroup;\n\n  // journal information variables for step 1\n  informationPanel: PanelContent = null;\n  informationFormGroup: FormGroup;\n  informationSocialFormGroup: FormGroup;\n\n  journalCover: SourceClasification;\n\n  organizationFormGroup: FormGroup;\n\n  // indexes: SourceClasification[] = [];\n  indexesFormGroup: FormGroup;\n\n  // institutions: SourceClasification[] = [];\n  // entityFormGroup: FormGroup;\n\n  // indexes (databases), variables for step 3\n\n  finalPanel: PanelContent = null;\n  finalFormGroup: FormGroup;\n\n  // actions, if needed\n  stepAction1: FormContainerAction;\n  stepAction2: FormContainerAction;\n  stepAction3: FormContainerAction;\n  stepAction4: FormContainerAction;\n\n  // TODO: Esto se puede hacer mejor, con un emiter alcanza\n  @Output()\n  journalEditDone = new EventEmitter<JournalVersion>();\n\n  @Output()\n  editCanceled = new EventEmitter<boolean>();\n\n  public constructor(\n    private metadata: MetadataService,\n    private sourceService: SourceService,\n    private catalogService: CatalogService,\n    private taxonomyService: TaxonomyService,\n    public snackBar: MatSnackBar,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.journalData = new JournalData();\n    this.journalData.deepcopy(this.journalVersion.data);\n\n    this.pageTitle = this.journalData.isNew\n      ? \"Nueva Revista\"\n      : \"Editando: \" + this.journalData.title;\n    this.metadata.setStandardMeta(this.pageTitle, \"\", \"\");\n\n    console.log(\"journal edit INIT\");\n    this.resetStepper();\n    this.initStep2();\n    this.initStep0Identifiers();\n    this.initStep1();\n\n    this.initStep3();\n    this.initStepFinal();\n  }\n\n  resetStepper() {\n    this.identifiersPanel = null;\n    this.identifiersFormGroup = null;\n\n    this.informationPanel = null;\n    this.informationFormGroup = null;\n    this.informationSocialFormGroup = null;\n\n    // this.organization = null;\n    // this.organizationPanel = null;\n    // this.institution = null;\n    // this.institutionPanel = null;\n    // this.entity = null;\n    // this.entityPanel = null;\n    this.organizationFormGroup = null;\n    this.indexesFormGroup = null;\n  }\n\n  initStep0Identifiers() {\n    this.identifiersFormGroup = this.formBuilder.group({});\n\n    this.identifiersPanel =\n      {\n        name: 'identifiersPanel',\n        label: 'Identificadores',\n        controlType: ContainerPanelComponent,\n        description: \"\",\n        iconName: \"\",\n        formSection: this.identifiersFormGroup,\n        formSectionContent: [\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"issn_l\",\n            label: \"ISSN de Enlace\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            startHint: new HintValue(HintPosition.start, \"XXXX-XXXX\"),\n            width: \"23%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.issn_l)\n              : \"\",\n            // value: this.journalVersion ? IssnValue.createIssnValueFromString(this.journalVersion.issn.l) : null\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"issn_p\",\n            label: \"ISSN Impreso\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            startHint: new HintValue(HintPosition.start, \"XXXX-XXXX\"),\n            width: \"23%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.issn_p)\n              : \"\",\n            // value: this.journalVersion ? IssnValue.createIssnValueFromString(this.journalVersion.issn.p) : null\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"issn_e\",\n            label: \"ISSN Electrónico\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            startHint: new HintValue(HintPosition.start, \"XXXX-XXXX\"),\n            width: \"23%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.issn_e)\n              : \"\",\n            // value: this.journalVersion ? IssnValue.createIssnValueFromString(this.journalVersion.issn.e) : null\n          },\n          {\n            formControl: InputRnpsComponent.getFormControlByDefault(),\n            name: \"rnps_p\",\n            label: \"RNPS Impreso\",\n            type: FormFieldType.rnps,\n            controlType: InputRnpsComponent,\n            required: true,\n            startHint: new HintValue(HintPosition.start, \"XXXX.\"),\n            width: \"23%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.prnps)\n              : \"\",\n          },\n          {\n            formControl: InputRnpsComponent.getFormControlByDefault(),\n            name: \"rnps_e\",\n            label: \"RNPS Electrónico\",\n            type: FormFieldType.rnps,\n            controlType: InputRnpsComponent,\n            required: true,\n            startHint: new HintValue(HintPosition.start, \"XXXX.\"),\n            width: \"23%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.ernps)\n              : \"\",\n          },\n        ],\n      };\n  }\n\n  initStep1(): void {\n    this.informationFormGroup = this.formBuilder.group({\n      // 'description': descriptionControl,\n      start_year: new FormControl(\"\"),\n      end_year: new FormControl(\"\"),\n    });\n\n    this.informationSocialFormGroup = this.formBuilder.group({});\n\n    this.informationPanel =\n      {\n        name: 'informationPanel',\n        label: 'Datos de la Revista',\n        description: \"\",\n        iconName: \"\",\n        controlType: ContainerPanelComponent,\n        formSection: this.informationFormGroup,\n        formSectionContent: [\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"title\",\n            label: \"Título\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: true,\n            width: \"100%\",\n            value: this.journalData ? this.journalData.title : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"subtitle\",\n            label: \"Subtítulo\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            width: \"30%\",\n            startHint: new HintValue(HintPosition.start, \"\"),\n            value: this.journalData ? this.journalData.subtitle : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"shortname\",\n            label: \"Título abreviado\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            width: \"30%\",\n            startHint: new HintValue(HintPosition.start, \"\"),\n            value: this.journalData ? this.journalData.shortname : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"source_type\",\n            label: \"Tipo de Revista\",\n            type: FormFieldType.select_expr,\n            controlType: SelectComponent,\n            required: true,\n            width: \"30%\",\n            value: this.journalData ? this.journalData.source_type : \"\",\n            extraContent: {\n              multiple: false,\n              getOptions: () => {\n                return [\n                  {\n                    label: SourceTypes.JOURNAL.label,\n                    value: SourceTypes.JOURNAL.value,\n                  },\n                  {\n                    label: SourceTypes.STUDENT.label,\n                    value: SourceTypes.STUDENT.value,\n                  },\n                  {\n                    label: SourceTypes.POPULARIZATION.label,\n                    value: SourceTypes.POPULARIZATION.value,\n                  },\n                ];\n              },\n            },\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"description\",\n            label: \"Descripción\",\n            type: FormFieldType.textarea,\n            controlType: TextareaComponent,\n            required: true,\n            width: \"100%\",\n            value: this.journalData ? this.journalData.description : \"\",\n          },\n          // {\n          //   name: 'purpose',\n          //   label: 'Propósito',\n          //   type: FormFieldType.textarea,\n          //   required: true,\n          //   width: '100%',\n          //   value: this.journalVersion ? this.journalVersion.purpose : ''\n          // },\n          {\n            formControl: InputUrlComponent.getFormControlByDefault(),\n            name: \"url\",\n            label: \"URL\",\n            type: FormFieldType.url,\n            controlType: InputUrlComponent,\n            required: true,\n            startHint: new HintValue(\n              HintPosition.start,\n              \"Escriba una URL válida.\"\n            ),\n            width: \"100%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.url)\n              : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"source_system\",\n            label: \"Tipo de Sistema que soporta la revista\",\n            type: FormFieldType.select_expr,\n            controlType: SelectComponent,\n            required: false,\n            width: \"35%\",\n            value: this.journalData ? this.journalData.source_system : \"\",\n            extraContent: {\n              multiple: false,\n              getOptions: () => {\n                return [\n                  {\n                    label: SourceSystems.OJS.label,\n                    value: SourceSystems.OJS.value,\n                  },\n                  {\n                    label: SourceSystems.CMS.label,\n                    value: SourceSystems.CMS.value,\n                  },\n                  {\n                    label: SourceSystems.OTHER.label,\n                    value: SourceSystems.OTHER.value,\n                  },\n                ];\n              },\n            },\n          },\n          {\n            formControl: InputUrlComponent.getFormControlByDefault(),\n            name: \"oaiurl\",\n            label: \"OAI-PMH\",\n            type: FormFieldType.url,\n            controlType: InputUrlComponent,\n            required: false,\n            startHint: new HintValue(\n              HintPosition.start,\n              \"Escriba una URL válida.\"\n            ),\n            width: \"60%\",\n            value: this.journalData\n              ? this.journalData.getIdentifierValue(IdentifierSchemas.oaiurl)\n              : \"\",\n          },\n          // {\n          //   name: 'seriadas_cubanas',\n          //   label: 'URL en Seriadas Cubanas',\n          //   type: FormFieldType.url,\n          //   required: false,\n          //   startHint: new HintValue(HintPosition.start, ''),\n          //   width: '100%',\n          //   value: this.journalVersion ? this.journalVersion.seriadas_cubanas : ''\n          // },\n\n          {\n            formControl: InputEmailComponent.getFormControlByDefault(),\n            name: \"email\",\n            label: \"Correo Electrónico\",\n            type: FormFieldType.email,\n            controlType: InputEmailComponent,\n            required: true,\n            startHint: new HintValue(\n              HintPosition.start,\n              \"Escriba un email válido.\"\n            ),\n            width: \"45%\",\n            value: this.journalData ? this.journalData.email : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"licence\",\n            label: \"Licencia\",\n            type: FormFieldType.vocabulary,\n            controlType: VocabularyComponent,\n            required: false,\n            width: \"45%\",\n            extraContent: {\n              multiple: false,\n              selectedTermsIds: this.journalData\n                ? this.journalData.classifications.map(\n                    (termSource) => termSource.id\n                  )\n                : null,\n              vocab: VocabulariesInmutableNames.LICENCES,\n              level: 0,\n            },\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"start_year\",\n            label: \"Año de inicio\",\n            type: FormFieldType.datepicker,\n            controlType: DatepickerComponent,\n            required: false,\n            width: \"30%\",\n            value: this.journalData ? this.journalData.start_year : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"end_year\",\n            label: \"Año final\",\n            type: FormFieldType.datepicker,\n            controlType: DatepickerComponent,\n            required: false,\n            width: \"30%\",\n            value: this.journalData ? this.journalData.end_year : \"\",\n          },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"frequency\",\n            label: \"Frecuencia\",\n            type: FormFieldType.text,\n            controlType: InputTextComponent,\n            required: false,\n            startHint: new HintValue(HintPosition.start, \"\"),\n            width: \"30%\",\n            value: this.journalData ? this.journalData.frequency : \"\",\n          },\n          // {\n          //   // TODO: el top level de unesco de materias....\n          //   name: \"cover\",\n          //   label: \"Cobertura Temática\",\n          //   type: FormFieldType.select_expr,\n          //   required: true,\n          //   width: \"45%\",\n          //   extraContent: {\n          //     multiple: false,\n          //     observable: this.taxonomyService.getTermsTreeByVocab(\n          //       VocabulariesInmutableNames.SUBJECTS,\n          //       0\n          //     ),\n          //     getOptions: (response: any) => {\n          //       const opts: SelectOption[] = [];\n          //       response.data.tree.term_node.forEach((node: TermNode) => {\n          //         opts.push({\n          //           value: node.term,\n          //           label: node.term.description,\n          //         });\n          //       });\n          //       return opts;\n          //     },\n          //     selectionChange: (term) => {\n          //       this.journalCover = new SourceClasification();\n          //       this.journalCover.description = term.description;\n          //       this.journalCover.id = term.uuid;\n          //       this.journalCover.vocabulary = term.vocabulary_id;\n\n          //     },\n          //   },\n          // },\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"subjects\",\n            label: \"Materias\",\n            type: FormFieldType.vocabulary_tree,\n            controlType: VocabularyTreeComponent,\n            required: false,\n            width: \"80%\",\n            extraContent: {\n              multiple: true,\n              selectedTermsIds: this.journalData\n                ? this.journalData.classifications.map(\n                    (termSource) => termSource.id\n                  )\n                : null,\n              vocab: VocabulariesInmutableNames.SUBJECTS,\n              level: 1,\n            },\n          },\n          {\n            formControl: InputUrlComponent.getFormControlByDefault(),\n            name: \"facebook\",\n            label: \"Facebook\",\n            type: FormFieldType.url,\n            controlType: InputUrlComponent,\n            required: false,\n            width: \"33%\",\n            value: this.journalData\n              ? this.journalData.socialNetworks.facebook\n              : \"\",\n          },\n          {\n            formControl: InputUrlComponent.getFormControlByDefault(),\n            name: \"twitter\",\n            label: \"Twitter\",\n            type: FormFieldType.url,\n            controlType: InputUrlComponent,\n            required: false,\n            width: \"33%\",\n            value: this.journalData\n              ? this.journalData.socialNetworks.twitter\n              : \"\",\n          },\n          {\n            formControl: InputUrlComponent.getFormControlByDefault(),\n            name: \"linkedin\",\n            label: \"LinkedIN\",\n            type: FormFieldType.url,\n            controlType: InputUrlComponent,\n            required: false,\n            width: \"33%\",\n            value: this.journalData\n              ? this.journalData.socialNetworks.linkedin\n              : \"\",\n          }\n        ],\n      };\n      // {\n      //   title: \"Redes Sociales\",\n      //   description: \"\",\n      //   iconName: \"\",\n      //   formSection: this.informationFormGroup,\n      //   formSectionContent: [\n      //     {\n      //       name: \"facebook\",\n      //       label: \"Facebook\",\n      //       type: FormFieldType.url,\n      //       required: false,\n      //       width: \"33%\",\n      //       value: this.journalData\n      //         ? this.journalData.socialNetworks.facebook\n      //         : \"\",\n      //     },\n      //     {\n      //       name: \"twitter\",\n      //       label: \"Twitter\",\n      //       type: FormFieldType.url,\n      //       required: false,\n      //       width: \"33%\",\n      //       value: this.journalData\n      //         ? this.journalData.socialNetworks.twitter\n      //         : \"\",\n      //     },\n      //     {\n      //       name: \"linkedin\",\n      //       label: \"LinkedIN\",\n      //       type: FormFieldType.url,\n      //       required: false,\n      //       width: \"33%\",\n      //       value: this.journalData\n      //         ? this.journalData.socialNetworks.linkedin\n      //         : \"\",\n      //     },\n      //   ],\n      // },\n\n  }\n\n  initStep2() {\n    this.organizationFormGroup = this.formBuilder.group({\n      institutions: new FormControl(\"\"),\n    });\n  }\n\n  initStep3() {\n    this.indexesFormGroup = this.formBuilder.group({});\n  }\n  indexerStepper() {\n    // console.log(this.journalData);\n\n    // this.indexes = this.journalData.classifications.filter(\n    //   (value) => value.vocabulary == VocabulariesInmutableNames.INDEXES\n    // );\n    // console.log(this.indexes);\n  }\n\n  initStepFinal() {\n    this.finalFormGroup = this.formBuilder.group({});\n    this.finalPanel =\n      {\n        name: 'finalPanel',\n        label: '',\n        description: \"\",\n        iconName: \"\",\n        formSection: this.finalFormGroup,\n        controlType: ContainerPanelComponent,\n        formSectionContent: [\n          {\n            formControl: InputTextComponent.getFormControlByDefault(),\n            name: \"comment\",\n            label: \"Puede agregar aquí un comentario.\",\n            type: FormFieldType.textarea,\n            controlType: TextareaComponent,\n            required: false,\n            startHint: new HintValue(HintPosition.start, \"\"),\n            width: \"100%\",\n            minWidth: \"100%\",\n            value: this.journalData ? this.journalData._save_info.comment : \"\",\n          },\n        ],\n      };\n  }\n\n  private fillJournalFields() {\n    // this.journalVersion.source_type = this.informationFormGroup.value['source_type'];\n\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.issn_p,\n      this.identifiersFormGroup.value.issn_p\n    );\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.issn_e,\n      this.identifiersFormGroup.value.issn_e\n    );\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.issn_l,\n      this.identifiersFormGroup.value.issn_l\n    );\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.prnps,\n      this.identifiersFormGroup.value.rnps_p\n    );\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.ernps,\n      this.identifiersFormGroup.value.rnps_e\n    );\n\n    // this.journalVersion.issn.deepcopy(\n    //   this.identifiersFormGroup.value\n    // );\n    // this.journalVersion.rnps.deepcopy(\n    //   this.identifiersFormGroup.value\n    // );\n\n    console.log(this.informationFormGroup)\n    this.journalData.deepcopy(this.informationFormGroup.value);\n    this.journalData.socialNetworks.deepcopy(this.informationFormGroup.value);\n\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.url,\n      this.informationFormGroup.value.url\n    );\n    this.journalData.setIdentifierValue(\n      IdentifierSchemas.oaiurl,\n      this.informationFormGroup.value.oaiurl\n    );\n\n    this.journalData.source_type = this.informationFormGroup.value[\n      \"source_type\"\n    ];\n\n    const indexes = this.journalData.classifications.filter(\n      (value) => value.vocabulary == VocabulariesInmutableNames.INDEXES\n    );\n    this.journalData.classifications = [];\n\n    if (this.informationFormGroup.value[\"licence\"]){\n        this.informationFormGroup.value[\"licence\"].forEach((term: Term) => {\n        const ts = new SourceClasification();\n        ts.description = term.description;\n        ts.id = term.uuid;\n        ts.vocabulary = term.vocabulary_id;\n        this.journalData.classifications.push(ts);\n      });\n    }\n    // this.informationFormGroup.value[\"cover\"].forEach((term) => {\n    //   const ts = new SourceClasification();\n    //   ts.description = term.description;\n    //   ts.id = term.uuid;\n    //   ts.vocabulary = term.vocabulary_id;\n    //   this.journalData.classifications.push(ts);\n    // });\n\n    if (this.informationFormGroup.value[\"subjects\"]){\n      this.informationFormGroup.value[\"subjects\"].forEach((term) => {\n        const ts = new SourceClasification();\n        ts.description = term.description;\n        ts.id = term.uuid;\n        ts.vocabulary = term.vocabulary_id;\n        this.journalData.classifications.push(ts);\n      });\n\n    }\n\n    console.log(indexes);\n    this.journalData.classifications = this.journalData.classifications.concat(\n      indexes\n    );\n    // this.journalData.organizations = this.source.data.organizations;\n\n    // this.organizationFormGroup.value[\n    //   \"institutions\"\n    // ].forEach((panel: JournalInstitutionsPanel) => {\n    //   const ts = new SourceClasification();\n    //   ts.deepcopy(panel.inst);\n    //   ts.term_id = panel.inst.term.id;\n    //   ts.source_id = this.journalVersion.source_id;\n    //   this.journalVersion.classifications.push(ts);\n\n    // }\n    // );\n\n    // this.institutions.forEach(inst => {\n    //   this.journalVersion.classifications.push(inst);\n    // });\n    // console.log(this.indexesPanel);\n    // this.indexesPanel.forEach(panel => {\n    //   const ts = new SourceClasification();\n    //   const term: Term = panel.value;\n    //   ts.description = term.description;\n    //   ts.id = term.uuid;\n    //   ts.vocabulary = term.vocabulary_id;\n    //   ts.data['url'] = this.indexesFormGroup.value['url_' + ts.id];\n    //   ts.data['initial_cover'] = this.indexesFormGroup.value[\n    //     'initial_cover_' + ts.id\n    //   ];\n    //   ts.data['end_cover'] = this.indexesFormGroup.value[\n    //     'end_cover_' + ts.id\n    //   ];\n    //   this.journalData.classifications.push(ts);\n    // });\n\n    this.journalData._save_info.comment = this.finalFormGroup.value[\"comment\"];\n    this.journalVersion.comment = this.finalFormGroup.value[\"comment\"];\n    this.journalVersion.data.deepcopy(this.journalData);\n\n    console.log(this.identifiersFormGroup);\n    console.log(this.informationFormGroup);\n    console.log(this.organizationFormGroup);\n    console.log(this.indexesFormGroup);\n    console.log(this.journalData);\n  }\n\n  public finishStepper() {\n    console.log(this.journalData);\n    // console.log(this.journalVersion, this)\n    this.fillJournalFields();\n\n    console.log(this.journalData);\n    this.journalEditDone.emit(this.journalVersion);\n  }\n  public cancelStepper() {\n    this.editCanceled.emit(true);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SourceClasification } from '../../entities/public-api';\n\n/**\n * This component share the same scss that `JournalViewComponent`.\n * His goal is show a list of `terms`\n */\n@Component({\n    selector: 'toco-journal-view-term',\n    templateUrl: './journal-view-term.component.html',\n    styleUrls: ['./journal-view.component.scss']\n})\nexport class JournalViewTermComponent implements OnInit {\n\n    @Input() public title: string;\n\n    @Input() public vocab_id: number;\n\n    @Input() public terms: Array<SourceClasification>;\n\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        if (this.terms == undefined) this.terms = new Array<SourceClasification>(0);\n\n        if (this.vocab_id == undefined) this.vocab_id = 0;\n\n        if (this.title == undefined) this.title = '';\n    }\n}\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\nimport { TaxonomyService } from '../../../backend/public-api';\nimport { SourceData, TermNode, Term, SourceClasification, VocabulariesInmutableNames } from '../../../entities/public-api';\nimport { PanelContent_Depr, FormContainerAction, InputTextComponent, FormFieldType, SelectComponent, SelectOption, InputUrlComponent, HintValue, HintPosition } from '../../../forms/public-api';\n\n\n@Component({\n  selector: \"toco-source-indexes\",\n  templateUrl: './source-indexes.component.html',\n  styleUrls: ['./source-indexes.component.scss'],\n})\nexport class SourceIndexesComponent implements OnInit {\n\n  @Input()\n  public sourceData: SourceData;\n  @Input()\n  public editable: boolean = true;\n\n  /*\n    el arbol entero de los indexes\n    el primer nivel se considera que es una clasificacion del index, por ejemplo\n        {\n          \"children\": {...}\n          \"term\": {\n            \"clasified_ids\": [],\n            \"class_ids\": [],\n            \"data\": null,\n            \"description\": \"WoS / Scopus\",\n            \"id\": 4355,\n            \"name\": \"http://miar.ub.edu/databases/GRUPO/G\",\n            \"parent_id\": null,\n            \"uuid\": \"a4aae8a2-b65d-4313-b666-5ef4170fc549\",\n            \"vocabulary_id\": \"INDEXES\"\n          }\n        }\n    en el segundo nivel (children) estan los indices(bases de datos) que realmente clasifican a las fuentes\n  */\n  databases: TermNode[] = null;\n\n  /*\n    cada elemento de este array tiene:\n    dbclass, que es un termino del primer nivel de databases,\n    dblist, son las clasificaciones de las fuentes con los correspondientes datos,\n      los terminos correspondientes de los elementos de dblist son hijos de dbclass en databses\n  */\n  selectedDatabases: Array<{ dbclass: Term, dblist: SourceClasification[] }> = null;\n\n  constructor(public dialog: MatDialog, private service: TaxonomyService) { }\n\n\n  ngOnInit() {\n    this.service.getTermsTreeByVocab(VocabulariesInmutableNames.INDEXES, 1).subscribe(\n      (response) => {\n        if (response.data.tree.term_node) {\n          this.databases = response.data.tree.term_node;\n          this.initIndexes();\n        }\n      },\n      (err: any) => {\n        console.log(\n          'ERROR: ' + err + '.'\n        );\n      },\n\n      () => {\n      }\n    );\n  }\n\n  public initIndexes(){\n\n    this.selectedDatabases = new Array(this.databases.length);\n    this._setSelectedDatabses();\n    this._setIndexesToSource();\n    console.log('******* complete process');\n  }\n\n  /**\n   * divide los source.classifications que son de INDEXES\n   * en el arreglo selectedDatabases, cuyos elementos tienen\n   * dbclass, que es el primer nivel\n   * dblist, que son los SourceClassification seleccionados e hijos de dbclass\n   */\n  private _setSelectedDatabses() {\n    for (let i = 0; i < this.databases.length; i++) {\n      this.selectedDatabases[i] = {\n        dbclass: this.databases[i].term,\n        dblist: this.sourceData.classifications.filter(\n          value =>\n            value.vocabulary == VocabulariesInmutableNames.INDEXES &&\n            this.databases[i].children.find(db => db.term.uuid == value.id) != undefined\n        )\n      };\n    }\n    for (let i = 0; i < this.databases.length; i++) {\n      for (let k = 0; k < this.selectedDatabases[i].dblist.length; k++) {\n        const element = this.selectedDatabases[i].dblist[k];\n        if (!this.selectedDatabases[i].dblist[k].data){\n          this.selectedDatabases[i].dblist[k].data = {};\n        }\n        if (!this.selectedDatabases[i].dblist[k].data['url']){\n          this.selectedDatabases[i].dblist[k].data['url']='';\n        }\n        if (!this.selectedDatabases[i].dblist[k].data['initial_cover']){\n          this.selectedDatabases[i].dblist[k].data['initial_cover']='';\n        }\n        if (!this.selectedDatabases[i].dblist[k].data['end_cover']){\n          this.selectedDatabases[i].dblist[k].data['end_cover']='';\n        }\n\n      }\n\n    }\n  }\n\n  /**\n   * mantiene la lista sourceData.classification bien formada en relacion con lo que hay en selectedDatabases\n   */\n  private _setIndexesToSource() {\n    // filtra las clasificaciones que no sean indexes\n    this.sourceData.classifications = this.sourceData.classifications.filter(\n      value => value.vocabulary != VocabulariesInmutableNames.INDEXES\n    );\n\n\n    this.selectedDatabases.forEach(element => {\n      // por cada elemento en selectedDatabases, si tiene algun elemento en dblist\n      // entonces dbclass y dblist tambien son parte de sourceData.classifications\n      if (element.dblist.length > 0) {\n        const parent = new SourceClasification();\n        parent.id = element.dbclass.uuid;\n        parent.description = element.dbclass.description;\n        parent.vocabulary = element.dbclass.vocabulary_id;\n        this.sourceData.classifications.push(parent);\n        this.sourceData.classifications = this.sourceData.classifications.concat(element.dblist);\n\n      }\n    });\n    console.log(this.sourceData);\n\n  }\n\n  public addIndexAction(dbclassIndex: number) {\n    const dbclass = this.selectedDatabases[dbclassIndex].dbclass;\n    const options: TermNode[] = this.databases[dbclassIndex].children.filter(\n      value =>\n        this.selectedDatabases[dbclassIndex].dblist.find(db => db.id == value.term.uuid) == undefined\n    );\n    if (options.length > 0) {\n      this.dialog.open(SourceEditAddIndexComponent, {\n        data: {\n          dbclass: this.selectedDatabases[dbclassIndex].dbclass,\n          options: options,\n          editing: null,\n          addIndex: (result: SourceClasification) => {\n            this.dialog.closeAll();\n            this.selectedDatabases[dbclassIndex].dblist = this.selectedDatabases[dbclassIndex].dblist.filter(\n              value => value.id != result.id);\n            this.selectedDatabases[dbclassIndex].dblist.push(result);\n            this._setIndexesToSource();\n          },\n        },\n      });\n    }\n\n  }\n\n  public editIndexAction(dbclassIndex: number, editing: SourceClasification) {\n    const dbclass = this.selectedDatabases[dbclassIndex].dbclass;\n    if (editing) {\n      // this.selectedDatabases[dbclassIndex].dblist = this.selectedDatabases[dbclassIndex].dblist.filter(\n      //   value => value.id != editing.id\n      // );\n\n      const options: TermNode[] = this.databases[dbclassIndex].children.filter(\n        value =>\n          this.selectedDatabases[dbclassIndex].dblist.find(db => db.id == value.term.uuid) == undefined ||\n          value.term.uuid == editing.id\n      );\n      if (options.length > 0 || editing) {\n        this.dialog.open(SourceEditAddIndexComponent, {\n          data: {\n            dbclass: this.selectedDatabases[dbclassIndex].dbclass,\n            options: options,\n            editing: editing,\n            addIndex: (result: SourceClasification) => {\n              this.dialog.closeAll();\n              // console.log('----------------------------',this.selectedDatabases[dbclassIndex].dblist);\n\n              const newSelected = [];\n              this.selectedDatabases[dbclassIndex].dblist.forEach(element => {\n                if (element.id != result.id && element.id != editing.id){\n                  newSelected.push(element);\n                }\n              });\n              this.selectedDatabases[dbclassIndex].dblist = newSelected;\n              // this.selectedDatabases[dbclassIndex].dblist = this.selectedDatabases[dbclassIndex].dblist.filter(\n              //   value => (value.id == result.id && value.id == editing.id));\n\n              // console.log('++++++++++++++++++++++',this.selectedDatabases[dbclassIndex].dblist);\n\n              this.selectedDatabases[dbclassIndex].dblist.push(result);\n              // console.log('*********************',this.selectedDatabases[dbclassIndex].dblist);\n              this._setIndexesToSource();\n            },\n          },\n        });\n      }\n    }\n  }\n  deleteIndexAction(dbclassIndex: number, toDelete: SourceClasification) {\n    // console.log('DELETE', toDelete);\n\n    this.selectedDatabases[dbclassIndex].dblist = this.selectedDatabases[dbclassIndex].dblist.filter(value => value.id != toDelete.id);\n    this._setIndexesToSource();\n  }\n}\n\n@Component({\n  selector: \"toco-source-addindex\",\n  styleUrls: ['./source-indexes.component.scss'],\n  template: `\n    <toco-form-container\n      #indexPanelContainer\n      [panelsContent]=\"indexPanel\"\n      [useAccordion]=\"false\"\n      fxLayout=\"row\"\n      [formGroup]=\"indexFormGroup\"\n      [action]=\"addIndexAction\"\n      [actionLabel]=\"'OK'\"\n      [deleteValuesAfterAction]=\"false\"\n    ></toco-form-container>\n  `,\n})\nexport class SourceEditAddIndexComponent implements OnInit {\n  indexPanel: PanelContent_Depr[] = null;\n  indexFormGroup: FormGroup;\n\n  addIndexAction: FormContainerAction;\n\n  dbclass: Term;\n  options: TermNode[];\n  editing: SourceClasification = null;\n  addIndex;\n\n  constructor(\n    private service: TaxonomyService,\n    private _formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    // console.log(data);\n\n    this.dbclass = data.dbclass;\n    this.options = data.options;\n    if (data.editing) {\n      this.editing = data.editing;\n    }\n    this.addIndex = data.addIndex;\n\n\n  }\n\n  ngOnInit() {\n    this.indexFormGroup = this._formBuilder.group({});\n    if (this.dbclass) {\n      this.indexPanel = [\n        {\n          title: (this.editing) ? 'Editar' : 'Adicionar',\n          description: '',\n          iconName: '',\n          formSection: this.indexFormGroup,\n          formSectionContent: [\n            {\n              formControl: InputTextComponent.getFormControlByDefault(),\n              name: 'indexes',\n              label: this.dbclass.description,\n              type: FormFieldType.select_expr,\n              controlType: SelectComponent,\n              required: true,\n              width: '100%',\n              value: (this.editing) ? this.editing.id : null,\n              extraContent: {\n                multiple: false,\n                getOptions: (response: any) => {\n                  const opts: SelectOption[] = [];\n                  this.options.forEach((node: TermNode) => {\n                    opts.push({\n                      value: node.term.uuid,\n                      label: node.term.description,\n                    });\n                  });\n                  return opts;\n                },\n                selectionChange: (value) => {\n                  console.log(value);\n                }\n              }\n            },\n            {\n              formControl: InputUrlComponent.getFormControlByDefault(),\n              name: 'url',\n              label: 'URL',\n              type: FormFieldType.url,\n              controlType: InputUrlComponent,\n              required: false,\n              startHint: new HintValue(\n                HintPosition.start,\n                'URL de la revista en el índice.'\n              ),\n              width: '100%',\n              value: (this.editing) ? [this.editing.data['url']] : '',\n            },\n            {\n              formControl: InputTextComponent.getFormControlByDefault(),\n              name: 'initial_cover',\n              label: 'Cobertura inicio',\n              type: FormFieldType.text,\n              controlType: InputTextComponent,\n              required: false,\n              startHint: new HintValue(HintPosition.start, ''),\n              width: '45%',\n              value: (this.editing) ? [this.editing.data['initial_cover']] : '',\n            },\n            {\n              formControl: InputTextComponent.getFormControlByDefault(),\n              name: 'end_cover',\n              label: 'Cobertura',\n              type: FormFieldType.text,\n              controlType: InputTextComponent,\n              required: false,\n              startHint: new HintValue(HintPosition.start, ''),\n              width: '45%',\n              value: (this.editing) ? [this.editing.data['end_cover']] : '',\n            },\n          ],\n        },\n      ];\n    }\n\n\n    this.addIndexAction = {\n      doit: (data: any) => {\n        if (this.indexFormGroup.valid) {\n          const result = new SourceClasification();\n          // console.log(this.indexFormGroup);\n\n          if (this.indexFormGroup.controls['indexes'].value) {\n            const node = this.options.find(value => value.term.uuid == this.indexFormGroup.controls['indexes'].value);\n            if (node) {\n              result.vocabulary = node.term.vocabulary_id;\n              result.description = node.term.description;\n              result.id = node.term.uuid;\n              result.data = {\n                url: this.indexFormGroup.controls['url'].value,\n                initial_cover: this.indexFormGroup.controls['initial_cover'].value,\n                end_cover: this.indexFormGroup.controls['end_cover'].value,\n              };\n              this.addIndex(result);\n            }\n          }\n        }\n\n      },\n    };\n  }\n}\n","import { Component, OnInit, Input, Inject } from \"@angular/core\";\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material\";\nimport { OrganizationServiceNoAuth } from '../../../backend/public-api';\nimport { MessageHandler, StatusCode, HandlerComponent } from '../../../core/public-api';\nimport { SourceData, Organization, SourceOrganizationRole, SourceOrganization, OrganizationRelationships, Relationship } from '../../../entities/public-api';\n\n\n@Component({\n  selector: \"toco-source-organizations\",\n  templateUrl: \"./source-organizations.component.html\",\n  styleUrls: [\"./source-organizations.component.scss\"],\n})\nexport class SourceOrganizationsComponent implements OnInit {\n  @Input()\n  public sourceData: SourceData;\n\n  @Input()\n  public editable: boolean = true;\n\n  @Input()\n  public topMainOrganization: Organization = null;\n\n  public roles = SourceOrganizationRole;\n  constructor(\n    public dialog: MatDialog,\n    private orgService: OrganizationServiceNoAuth\n  ) {}\n\n  ngOnInit() {\n    console.log(this.sourceData.organizations);\n    this.sourceData.organizations = this.sourceData.organizations.filter(\n      (element) => element && element.role\n    );\n    console.log(this.sourceData.organizations);\n  }\n\n  addOrg(cuban = true, topMain = false) {\n    if (topMain && this.topMainOrganization) {\n      this.dialog.open(SourceOrganizationSelectTopDialog, {\n        width: \"500px\",\n        data: {\n          topMainOrganization: this.topMainOrganization,\n          selectOrg: (org: Organization, parents: Array<Organization>) => {\n            this.addOrgToSource(org, SourceOrganizationRole.MAIN.value);\n            parents.forEach((element) => {\n              this.addOrgToSource(\n                element,\n                SourceOrganizationRole.COLABORATOR.value\n              );\n            });\n          },\n        },\n      });\n    } else {\n      this.dialog.open(SourceOrganizationSelectDialog, {\n        width: \"500px\",\n        data: {\n          filter: cuban ? { type: \"country\", value: \"Cuba\" } : null,\n          canSelectRole: this.topMainOrganization == null,\n          selectOrg: (\n            org: Organization,\n            role,\n            parents: Array<Organization>\n          ) => {\n            this.addOrgToSource(org, role);\n            parents.forEach((element) => {\n              this.addOrgToSource(\n                element,\n                SourceOrganizationRole.COLABORATOR.value\n              );\n            });\n          },\n        },\n      });\n    }\n  }\n  private addOrgToSource(org: Organization, role) {\n    if (!this.sourceData.organizations.find((o) => o.id == org.id)) {\n      let selected = new SourceOrganization();\n      selected.deepcopy(org);\n      selected.role = role;\n      this.sourceData.organizations.push(selected);\n      if (SourceOrganizationRole.MAIN.value == role) {\n        this.setAsMain(org);\n      }\n    }\n  }\n  setAsMain(organization: Organization) {\n    this.sourceData.organizations.forEach((element) => {\n      if (organization.id == element.id) {\n        element.role = SourceOrganizationRole.MAIN.value;\n      } else {\n        element.role = SourceOrganizationRole.COLABORATOR.value;\n      }\n    });\n  }\n\n  removeInst(index) {\n    const organization = this.sourceData.organizations[index];\n    const m = new MessageHandler(null, this.dialog);\n    const child = this.childToRemove(organization);\n    if (child == null) {\n      let parents = this.getOrgToDelete(organization);\n      let toDelete = [];\n      let msg = \"\";\n      for (let i = 0; i < parents.length; i++) {\n        const element = parents[i];\n        toDelete.push(this.sourceData.organizations[element]);\n        msg += this.sourceData.organizations[element].name + \", \";\n      }\n      toDelete.push(organization);\n      console.log(toDelete);\n      if(toDelete.length>0){\n        m.showMessage(\n          StatusCode.OK,\n          msg,\n          HandlerComponent.dialog,\n          \"Se eliminó también: \"\n        );\n      }\n\n      let orgs = [];\n      for (let i = 0; i < this.sourceData.organizations.length; i++) {\n        if (\n          !toDelete.find((o) => o.id == this.sourceData.organizations[i].id)\n        ) {\n          orgs.push(this.sourceData.organizations[i]);\n        }\n      }\n      console.log(orgs);\n      this.sourceData.organizations = orgs;\n      // this.sourceData.organizations = this.sourceData.organizations.filter(\n      //   (o) => o.id != organization.id\n      // );\n    } else {\n      m.showMessage(\n        StatusCode.OK,\n        child.name,\n        HandlerComponent.dialog,\n        \"Para eliminar este elemento debe eliminar:\"\n      );\n    }\n  }\n\n  private childToRemove(org: Organization) {\n    // se puede eliminar si no tiene hijos en el sourceData.organizations\n    let result = true;\n\n    if (org.relationships) {\n      for (let index = 0; index < org.relationships.length; index++) {\n        const element = org.relationships[index];\n        if (element.type == OrganizationRelationships.CHILD.value) {\n          const childIndex = this.getIndexByPid(element.identifiers[0].value);\n          if (childIndex != null) {\n            return this.sourceData.organizations[childIndex];\n          }\n        }\n      }\n      return null;\n    }\n  }\n  // removeInst(index) {\n  //   let toDelete = []\n  //   toDelete.push(index);\n  //   toDelete.concat(this.getOrgToDelete(this.sourceData.organizations[index]));\n  //   let orgs = [];\n  //   for (let i = 0; i < this.sourceData.organizations.length; i++) {\n  //     if(!toDelete.find((o) => o == i)){\n  //       orgs.push(this.sourceData.organizations[i]);\n  //     }\n  //   }\n  //   this.sourceData.organizations = orgs;\n  // }\n\n  private getOrgToDelete(org: Organization) {\n    let toDelete = [];\n    if (org.relationships) {\n      org.relationships.forEach((element) => {\n        if (element.type == OrganizationRelationships.PARENT.value) {\n          const parentIndex = this.getIndexByPid(element.identifiers[0].value);\n          if (parentIndex) {\n            toDelete.push(parentIndex);\n            toDelete.concat(\n              this.getOrgToDelete(this.sourceData.organizations[parentIndex])\n            );\n          }\n        }\n      });\n    }\n\n    return toDelete;\n  }\n\n  private getIndexByPid(pid) {\n    for (let index = 0; index < this.sourceData.organizations.length; index++) {\n      const element = this.sourceData.organizations[index];\n      for (\n        let pidindex = 0;\n        pidindex < element.identifiers.length;\n        pidindex++\n      ) {\n        const identifier = element.identifiers[pidindex];\n        console.log(identifier.value + \"==\" + pid);\n        if (identifier.value == pid) {\n          console.log(identifier.value + \"==\" + pid + \"  iguales!!!\");\n          return index;\n        }\n      }\n    }\n    return null;\n  }\n}\n\n@Component({\n  selector: \"toco-source-organizations-select-top-main\",\n  template: `<mat-dialog-content class=\"height-auto\">\n    <ng-container *ngIf=\"toSelect\"\n      >{{ topMainOrganization.name }}\n      <br />\n      <mat-form-field>\n        <mat-label>Seleccione la Organización Principal: </mat-label>\n        <mat-select [(value)]=\"selected\" required>\n          <mat-option\n            *ngFor=\"let item of toSelect; let index = index\"\n            value=\"{{ index }}\"\n            >{{ item.label }}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n\n      <br />\n      <mat-label *ngIf=\"selected >= 0\">{{\n        toSelect[selected].label\n      }}</mat-label>\n      <br />\n    </ng-container>\n    <br />\n    <button mat-raised-button (click)=\"ok()\">OK</button>\n  </mat-dialog-content>`,\n})\nexport class SourceOrganizationSelectTopDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<SourceOrganizationSelectTopDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private orgService: OrganizationServiceNoAuth\n  ) {}\n\n  public topMainOrganization: Organization = null;\n  public toSelect: Array<Relationship> = null;\n  public selected = -1;\n\n  ngOnInit(): void {\n    this.topMainOrganization = this.data.topMainOrganization;\n    this.toSelect = new Array<Relationship>();\n    this.topMainOrganization.relationships.forEach((element) => {\n      if (element.type == OrganizationRelationships.CHILD.value) {\n        this.toSelect.push(element);\n      }\n    });\n    console.log(this.toSelect);\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public ok() {\n    // let selected = new SourceOrganization()\n    // selected.organization = org;\n    // selected.role = SourceOrganizationRole.MAIN.value;\n    if (this.selected >= 0) {\n      console.log(this.toSelect[this.selected]);\n      this.orgService\n        .getOrganizationByPID(this.toSelect[this.selected].identifiers[0].value)\n        .subscribe({\n          next: (response) => {\n            this.data.selectOrg(response.metadata, [this.topMainOrganization]);\n            this.dialogRef.close();\n          },\n        });\n    }\n  }\n}\n\n@Component({\n  selector: \"toco-source-organizations-select-dialog\",\n  template: `<mat-dialog-content class=\"height-auto\">\n    <toco-org-search\n      [orgFilter]=\"data.filter\"\n      (selectedOrg)=\"selectedOrg($event)\"\n      [placeholder]=\"placeholder\"\n    >\n    </toco-org-search>\n    <br />\n    <mat-label *ngIf=\"org\">{{ org.name }}</mat-label>\n    <br />\n    <mat-form-field *ngIf=\"canSelectRole\">\n      <mat-label>Rol</mat-label>\n      <mat-select [(value)]=\"role\" required>\n        <mat-option *ngFor=\"let item of roles\" value=\"{{ item.value }}\">{{\n          item.label\n        }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <br />\n\n    <ng-container *ngIf=\"parents.length > 0\">\n      <mat-label>Se añadirá también: </mat-label>\n      <ng-container *ngFor=\"let item of parents\">\n        <br />\n        <mat-label>{{ item.name }}</mat-label>\n        <br />\n      </ng-container>\n      <br />\n    </ng-container>\n\n    <button mat-raised-button (click)=\"ok()\">OK</button>\n  </mat-dialog-content>`,\n})\nexport class SourceOrganizationSelectDialog implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<SourceOrganizationSelectDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private orgService: OrganizationServiceNoAuth\n  ) {}\n\n  public roles = [\n    { label: \"Principal\", value: \"MAIN\" },\n    { label: \"Colaborador\", value: \"COLABORATOR\" },\n  ];\n  public role = null;\n  public org: Organization;\n  public parents: Array<Organization> = new Array<Organization>();\n  placeholder = \"Buscar una organización\";\n  public canSelectRole = true;\n\n  ngOnInit(): void {\n    console.log(this.data);\n    this.canSelectRole = this.data.canSelectRole;\n    if (this.data.filter) {\n      this.placeholder = \"Buscar una organización cubana\";\n    }\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public selectedOrg(org?: Organization): void {\n    console.log(org);\n    this.org = org;\n    this.addParent(this.org);\n  }\n  private addParent(child: Organization) {\n    child.relationships.forEach((p) => {\n      if (p.type == OrganizationRelationships.PARENT.value) {\n        if (p.identifiers.length > 0 && p.identifiers[0].value) {\n          this.orgService\n            .getOrganizationByPID(p.identifiers[0].value)\n            .subscribe({\n              next: (response) => {\n                console.log(response);\n                this.parents.push(response.metadata);\n                this.addParent(response.metadata);\n              },\n            });\n        }\n      }\n    });\n  }\n  public ok() {\n    // let selected = new SourceOrganization()\n    // selected.organization = org;\n    // selected.role = SourceOrganizationRole.MAIN.value;\n    if (this.canSelectRole) {\n      if (this.role) {\n        this.data.selectOrg(this.org, this.role, this.parents);\n        this.dialogRef.close();\n      }\n    } else {\n      this.data.selectOrg(\n        this.org,\n        SourceOrganizationRole.COLABORATOR.value,\n        this.parents\n      );\n      this.dialogRef.close();\n    }\n  }\n}\n","import { Component, OnInit, OnChanges, Input, ViewChild } from \"@angular/core\";\nimport { MatSnackBar } from '@angular/material';\nimport { SourceService } from '../../backend/public-api';\nimport { IdentifierSchemas } from '../../entities/common';\nimport { JournalVersion, JournalData, SourceTypes, SourceSystems, SourceClasification, VocabulariesInmutableNames } from '../../entities/public-api';\nimport { SourceIndexesComponent } from '../source-edit/source-indexes/source-indexes.component';\nimport { SourceOrganizationsComponent } from '../source-edit/source-organizations/source-organizations.component';\n\n/**\n * This component share the same scss that `JournalViewComponent`.\n * His goal, shows a Journal\n */\n@Component({\n  selector: \"toco-journal-view-info\",\n  templateUrl: \"./journal-view-info.component.html\",\n  styleUrls: [\"./journal-view.component.scss\"],\n})\nexport class JournalViewInfoComponent implements OnInit, OnChanges {\n  @Input() public journalVersion: JournalVersion;\n  @Input() public showVersionLabel: boolean = true;\n  public journalData: JournalData;\n\n  public tipos = SourceTypes;\n  public sistemas = SourceSystems;\n\n  /** TODO: In the future databaseTerms and subjectTerms will be changes by\n   *  miarTerms and subjectsUnescoTerms\n   *  public miarTerms: Array<SourceClasification>;\n   *  public subjectsUnescoTerms: Array<SourceClasification>;\n   */\n  public institutionTerms: Array<SourceClasification>;\n  public dataBaseTerms: Array<SourceClasification>;\n  public groupTerms: Array<SourceClasification>;\n  public provinceTerms: Array<SourceClasification>;\n  public subjectTerms: Array<SourceClasification>;\n  public licenceTerms: Array<SourceClasification>;\n\n  public vocabularies: typeof VocabulariesInmutableNames;\n  public panelOpenState = false;\n\n  public IdentifierSchemas = IdentifierSchemas;\n\n  @ViewChild(SourceOrganizationsComponent, { static: false })\n  orgs: SourceOrganizationsComponent;\n\n  @ViewChild(SourceIndexesComponent, { static: false })\n  indexes: SourceIndexesComponent;\n\n\n  constructor(\n    private _sourveService: SourceService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.loadJournalData();\n  }\n  ngOnChanges(): void {\n    console.log(\"changes....\");\n    this.loadJournalData();\n  }\n  loadJournalData() {\n    if (this.journalData == undefined)\n      this.journalData = new JournalData();\n\n    this.journalData.deepcopy(this.journalVersion.data);\n\n    this.dataBaseTerms = new Array<SourceClasification>();\n    this.groupTerms = new Array<SourceClasification>();\n    this.institutionTerms = new Array<SourceClasification>();\n    this.licenceTerms = new Array<SourceClasification>();\n    this.provinceTerms = new Array<SourceClasification>();\n    this.subjectTerms = new Array<SourceClasification>();\n\n    this.vocabularies = VocabulariesInmutableNames;\n\n    if (this.journalData.classifications) {\n      this.journalData.classifications.forEach(\n        (term: SourceClasification) => {\n          switch (term.vocabulary.toString()) {\n            case VocabulariesInmutableNames.CUBAN_INTITUTIONS:\n            case VocabulariesInmutableNames.EXTRA_INSTITUTIONS:\n              this.institutionTerms.push(term);\n              break;\n            case VocabulariesInmutableNames.INDEXES:\n              this.dataBaseTerms.push(term);\n              break;\n            case VocabulariesInmutableNames.INDEXES_CLASIFICATION:\n              this.groupTerms.push(term);\n              break;\n            case VocabulariesInmutableNames.LICENCES:\n              this.licenceTerms.push(term);\n              break;\n            case VocabulariesInmutableNames.CUBAN_PROVINCES:\n              this.provinceTerms.push(term);\n              break;\n            case VocabulariesInmutableNames.SUBJECTS:\n              this.subjectTerms.push(term);\n              break;\n          }\n        }\n      );\n    }\n  }\n\n\n  getIdentifier(idtype: IdentifierSchemas) {\n      var r = this.journalData\n      ? this.journalData.getIdentifierValue(idtype)\n      : \"\";\n\n    return r;\n  }\n\n  editingJournalChange(newVersion: JournalVersion): void {\n    console.log(\"*****llego....\", newVersion, this.journalData);\n\n    this.loadJournalData();\n    this.orgs.ngOnInit();\n    this.indexes.initIndexes();\n  }\n}\n\n\n@Component({\n    selector: \"toco-journal-view-info-field\",\n    styleUrls: [\"./journal-view.component.scss\"],\n    template: `\n    <mat-label style=\"font-weight: bold;\">{{label}}: </mat-label>\n    <mat-label *ngIf=\"value\">\n      {{ value }}\n    </mat-label>\n    <mat-label\n      *ngIf=\"!value\"\n      class=\"text-muted text-through\"\n      >{{emptyLabel}}\n    </mat-label\n    >`\n  })\n  export class JournalViewInfoFieldComponent {\n    @Input()\n    label: string;\n    @Input()\n    value: string;\n    @Input()\n    emptyLabel: string = 'Vacío';\n  }\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IdentifierSchemas } from '../../entities/common';\nimport { JournalVersion, JournalData } from '../../entities/public-api';\nimport { JournalDataType } from './journal-view.component';\n\n\n\n/**\n* This component share the same scss that `JournalViewComponent`.\n* His goal, handle the actions and how show a specific data of a `JournalData`\n*/\n@Component({\n    selector: 'toco-journal-view-version-field',\n    templateUrl: './journal-view-version-field.component.html',\n    styleUrls: ['./journal-view.component.scss']\n})\nexport class JournalViewFieldComponent implements OnInit {\n\n    @Input() public editingJournal: JournalVersion;\n\n    @Input() public currentJournal: JournalVersion;\n\n    @Input() public type: number;\n\n    @Output()\n    editingJournalChange = new EventEmitter<JournalVersion>();\n\n\n    public journalDataType = JournalDataType;\n    public IdentifierSchemas = IdentifierSchemas;\n\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        if (this.editingJournal.data == undefined) this.editingJournal.data = new JournalData()\n\n        if (this.currentJournal.data == undefined) this.currentJournal.data = new JournalData();\n\n        if (this.type == undefined) this.type = JournalDataType.default;\n    }\n\n    /**\n * Replaces a `Journal` property by a equal property in `JournalData`.\n * @param type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.\n * @param concat is a `boolean`, by default in `false`. If his value is `true` means the fields will be concated and not replaced.\n * @NOTE The `terms` of a `Journal` can NOT replace because will be the same information and not have sense, only we can merge.\n */\n    public replace(type: number, concat: boolean = false) {\n        switch (type) {\n            case JournalDataType.description:\n                concat ?\n                    this.editingJournal.data.description += ' ' + this.currentJournal.data.description :\n                    this.editingJournal.data.description = this.currentJournal.data.description;\n                break;\n            case JournalDataType.email:\n                concat ?\n                    this.editingJournal.data.email += ' ' + this.currentJournal.data.email :\n                    this.editingJournal.data.email = this.currentJournal.data.email;\n                break;\n            case JournalDataType.end_year:\n                concat ?\n                    this.editingJournal.data.end_year += ' ' + this.currentJournal.data.end_year :\n                    this.editingJournal.data.end_year = this.currentJournal.data.end_year;\n                break;\n            case JournalDataType.facebook:\n                concat ?\n                    this.editingJournal.data.socialNetworks.facebook += ' ' + this.currentJournal.data.socialNetworks.facebook :\n                    this.editingJournal.data.socialNetworks.facebook = this.currentJournal.data.socialNetworks.facebook;\n                break;\n            case JournalDataType.frequency:\n                concat ?\n                    this.editingJournal.data.frequency += ' ' + this.currentJournal.data.frequency :\n                    this.editingJournal.data.frequency = this.currentJournal.data.frequency;\n                break;\n                case JournalDataType.issnP:\n                  concat ?\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.issn_p,\n                      this.editingJournal.data.getIdentifierValue(IdentifierSchemas.issn_p) +\n                      ' ' +\n                      this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_p)) :\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.issn_p,\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_p));\n                  break;\n                case JournalDataType.issnE:\n                concat ?\n                    this.editingJournal.data.setIdentifierValue(\n                      IdentifierSchemas.issn_e,\n                        this.editingJournal.data.getIdentifierValue(IdentifierSchemas.issn_e) +\n                        ' ' +\n                        this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_e)) :\n                    this.editingJournal.data.setIdentifierValue(\n                      IdentifierSchemas.issn_e,\n                      this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_e));\n                break;\n            case JournalDataType.issnL:\n                concat ?\n                this.editingJournal.data.setIdentifierValue(\n                  IdentifierSchemas.issn_l,\n                    this.editingJournal.data.getIdentifierValue(IdentifierSchemas.issn_l) +\n                    ' ' +\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_l)) :\n                this.editingJournal.data.setIdentifierValue(\n                  IdentifierSchemas.issn_l,\n                  this.currentJournal.data.getIdentifierValue(IdentifierSchemas.issn_l));\n                break;\n                case JournalDataType.rnpsP:\n                  concat ?\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.prnps,\n                      this.editingJournal.data.getIdentifierValue(IdentifierSchemas.prnps) +\n                      ' ' +\n                      this.currentJournal.data.getIdentifierValue(IdentifierSchemas.prnps)) :\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.prnps,\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.prnps));\n                  break;\n              case JournalDataType.rnpsE:\n                  concat ?\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.ernps,\n                      this.editingJournal.data.getIdentifierValue(IdentifierSchemas.ernps) +\n                      ' ' +\n                      this.currentJournal.data.getIdentifierValue(IdentifierSchemas.ernps)) :\n                  this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.ernps,\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.ernps));\n                  break;\n            case JournalDataType.end_year:\n                concat ?\n                    this.editingJournal.data.end_year += ' ' + this.currentJournal.data.end_year :\n                    this.editingJournal.data.end_year = this.currentJournal.data.end_year;\n                break;\n            case JournalDataType.linkedin:\n                concat ?\n                    this.editingJournal.data.socialNetworks.linkedin += ' ' + this.currentJournal.data.socialNetworks.linkedin :\n                    this.editingJournal.data.socialNetworks.linkedin = this.currentJournal.data.socialNetworks.linkedin;\n                break;\n            case JournalDataType.logo:\n                concat ?\n                    this.editingJournal.data.logo += ' ' + this.currentJournal.data.logo :\n                    this.editingJournal.data.logo = this.currentJournal.data.logo;\n                break;\n            case JournalDataType.purpose:\n                concat ?\n                    this.editingJournal.data.purpose += ' ' + this.currentJournal.data.purpose :\n                    this.editingJournal.data.purpose = this.currentJournal.data.purpose;\n                break;\n            case JournalDataType.seriadas_cubanas:\n                concat ?\n                    this.editingJournal.data.seriadas_cubanas += ' ' + this.currentJournal.data.seriadas_cubanas :\n                    this.editingJournal.data.seriadas_cubanas = this.currentJournal.data.seriadas_cubanas;\n                break;\n            case JournalDataType.shortname:\n                concat ?\n                    this.editingJournal.data.shortname += ' ' + this.currentJournal.data.shortname :\n                    this.editingJournal.data.shortname = this.currentJournal.data.shortname;\n                break;\n            case JournalDataType.start_year:\n                concat ?\n                    this.editingJournal.data.start_year += ' ' + this.currentJournal.data.start_year :\n                    this.editingJournal.data.start_year = this.currentJournal.data.start_year;\n                break;\n            case JournalDataType.subtitle:\n                concat ?\n                    this.editingJournal.data.subtitle += ' ' + this.currentJournal.data.subtitle :\n                    this.editingJournal.data.subtitle = this.currentJournal.data.subtitle;\n                break;\n            case JournalDataType.title:\n                concat ?\n                    this.editingJournal.data.title += ' ' + this.currentJournal.data.title :\n                    this.editingJournal.data.title = this.currentJournal.data.title;\n                break;\n            case JournalDataType.twitter:\n                concat ?\n                    this.editingJournal.data.socialNetworks.twitter += ' ' + this.currentJournal.data.socialNetworks.twitter :\n                    this.editingJournal.data.socialNetworks.twitter = this.currentJournal.data.socialNetworks.twitter;\n                break;\n            case JournalDataType.url:\n                concat ?\n                this.editingJournal.data.setIdentifierValue(\n                  IdentifierSchemas.url,\n                    this.editingJournal.data.getIdentifierValue(IdentifierSchemas.url) +\n                    ' ' +\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.url)) :\n                this.editingJournal.data.setIdentifierValue(\n                  IdentifierSchemas.url,\n                  this.currentJournal.data.getIdentifierValue(IdentifierSchemas.url));\n                break;\n            case JournalDataType.oaiurl:\n                concat ?\n                this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.oaiurl,\n                    this.editingJournal.data.getIdentifierValue(IdentifierSchemas.oaiurl) +\n                    ' ' +\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.oaiurl)) :\n                this.editingJournal.data.setIdentifierValue(\n                    IdentifierSchemas.oaiurl,\n                    this.currentJournal.data.getIdentifierValue(IdentifierSchemas.oaiurl));\n                break;\n        }\n        this.editingJournalChange.emit(this.editingJournal);\n    }\n\n\n}\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { MessageHandler, StatusCode } from '../../core/public-api';\nimport { JournalVersion, SourceClasification, VocabulariesInmutableNames, SourceOrganization } from '../../entities/public-api';\nimport { JournalDataType } from './journal-view.component';\n\n\n@Component({\n  selector: \"toco-journal-view-version\",\n  templateUrl: \"./journal-view-version.component.html\",\n  styleUrls: [\"./journal-view.component.scss\"],\n})\nexport class JournalViewVersionComponent implements OnInit, OnChanges {\n  @Input() public currentJournal: JournalVersion;\n\n  @Input() public type: number;\n\n  @Input()\n  public editingJournal: JournalVersion;\n\n  public journalDataType = JournalDataType;\n\n  public currentInstitutionTerms: Array<SourceClasification>;\n  public currentDataBaseTerms: Array<SourceClasification>;\n  public currentGroupTerms: Array<SourceClasification>;\n  public currentProvinceTerms: Array<SourceClasification>;\n  public currentSubjectTerms: Array<SourceClasification>;\n  public currentLicenceTerms: Array<SourceClasification>;\n\n  vocabularies;\n  public panelOpenState = false;\n\n  currentJournalChecked: boolean = false;\n\n  @Output()\n  editingJournalChange = new EventEmitter<JournalVersion>();\n\n  constructor(private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    if (this.currentJournal == undefined)\n      this.currentJournal = new JournalVersion();\n    this.loadJournalData();\n\n    if (this.type == undefined) this.type = JournalDataType.default;\n  }\n\n  ngOnChanges(): void {\n    console.log(\"***////****////***///\");\n    this.ngOnInit();\n  }\n\n  loadJournalData() {\n    this.currentDataBaseTerms = new Array<SourceClasification>();\n    this.currentGroupTerms = new Array<SourceClasification>();\n    this.currentInstitutionTerms = new Array<SourceClasification>();\n    this.currentLicenceTerms = new Array<SourceClasification>();\n    this.currentProvinceTerms = new Array<SourceClasification>();\n    this.currentSubjectTerms = new Array<SourceClasification>();\n\n    this.vocabularies = VocabulariesInmutableNames;\n\n    if (this.currentJournal.data.classifications) {\n      this.currentJournal.data.classifications.forEach(\n        (termSource: SourceClasification) => {\n          switch (termSource.vocabulary.toString()) {\n            case VocabulariesInmutableNames.CUBAN_INTITUTIONS:\n              this.currentInstitutionTerms.push(termSource);\n              break;\n            case VocabulariesInmutableNames.INDEXES:\n              this.currentDataBaseTerms.push(termSource);\n              break;\n            case VocabulariesInmutableNames.INDEXES_CLASIFICATION:\n              this.currentGroupTerms.push(termSource);\n              break;\n            case VocabulariesInmutableNames.LICENCES:\n              this.currentLicenceTerms.push(termSource);\n              break;\n            case VocabulariesInmutableNames.CUBAN_PROVINCES:\n              this.currentProvinceTerms.push(termSource);\n              break;\n            case VocabulariesInmutableNames.SUBJECTS:\n              this.currentSubjectTerms.push(termSource);\n              break;\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Changes the field `reviewed` of a `Journal`, that means the user saw these version\n   * and consider it not has more information.\n   */\n  markAsViewed() {\n    if (this.currentJournalChecked) {\n      this.currentJournal.data.reviewed = true;\n      // TODO: hacer el request al backend de marcar la version como vista o\n      const m = new MessageHandler(this._snackBar);\n      m.showMessage(StatusCode.OK, \"Revisión marcada como vista!!!\");\n    }\n  }\n\n  public fieldEditingJournalChange() {\n    this.editingJournalChange.emit(this.editingJournal);\n  }\n\n  public replace() {\n    this.editingJournal = this.currentJournal;\n    // this.editingJournal.data.classifications = [];\n    // this.editingJournal.data.classifications = this.currentJournal.data.classifications;\n    this.editingJournalChange.emit(this.editingJournal);\n    // // this.currentJournal.data.classifications.forEach((termSource: SourceClasification) => {\n\n    // //     this.editingJournal.data.classifications.push(termSource);\n\n    // // });\n    console.log(\"editingJournal remplazado\", this.editingJournal);\n  }\n\n  /**\n   * Concats a `Journal` property by a equal property in `JournalData`.\n   * @param type is a `JournalDataType` enum, that means, `type` has all properties of a `Journal` enumerated as identifyer.\n   * @param termId is a `Term` identifyer, only needs if `type` is `JournalDataType.term`.\n   * @NOTE this function call `replace(..., true)`\n   */\n  public concat(type: JournalDataType, termSource: SourceClasification) {\n    if (type == JournalDataType.term) {\n      let notFound = true;\n      for (\n        let index = 0;\n        index < this.editingJournal.data.classifications.length;\n        index++\n      ) {\n        const element = this.editingJournal.data.classifications[index];\n        if (element.id == termSource.id) {\n          this.editingJournal.data.classifications[index].data =\n            termSource.data;\n          notFound = false;\n        }\n      }\n      if (notFound) {\n        this.editingJournal.data.classifications.push(termSource);\n      }\n      this.editingJournalChange.emit(this.editingJournal);\n    }\n  }\n\n  public replaceSubjects() {\n    this.replaceClassifications(VocabulariesInmutableNames.SUBJECTS);\n  }\n\n  public replaceIndexes() {\n    this.replaceClassifications(VocabulariesInmutableNames.INDEXES);\n  }\n\n  public replaceClassifications(vocab: string) {\n    let found = false;\n    let newts: SourceClasification[] = [];\n\n    this.editingJournal.data.classifications.forEach((ts) => {\n      if (ts.vocabulary != vocab) {\n        newts.push(ts);\n      }\n    });\n\n    this.currentJournal.data.classifications.forEach((ts) => {\n      if (ts.vocabulary == vocab) {\n        newts.push(ts);\n      }\n    });\n    this.editingJournal.data.classifications = newts;\n\n    this.editingJournalChange.emit(this.editingJournal);\n  }\n\n  public replaceOrganizations() {\n    let found = false;\n    let newts: SourceOrganization[] = [];\n\n    this.currentJournal.data.organizations.forEach((ts) => {\n      newts.push(ts);\n    });\n\n    this.editingJournal.data.organizations = newts;\n\n    this.editingJournalChange.emit(this.editingJournal);\n  }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, ComponentFactoryResolver } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\n\nimport { FilterComponent } from '../../filters/public-api';\nimport { FilterItem } from '../../filters/public-api';\nimport { BooleanFilterComponent } from '../../filters/public-api';\nimport { FilterContainerService } from '../../filters/public-api';\nimport { FilterContainerComponent } from '../../filters/public-api';\nimport { MessageHandler, StatusCode } from '../../core/public-api';\n\nimport { CatalogService, TaxonomyService } from '../../backend/public-api';\nimport { Environment } from '../../core/env';\nimport { VocabulariesInmutableNames } from '../../entities/public-api';\n\n@Component({\n  selector: 'toco-catalog-filters-container',\n  templateUrl: './catalog-filters.component.html',\n  styleUrls: ['./catalog-filters.component.scss']\n})\nexport class CatalogFiltersComponent extends FilterContainerComponent {\n\n  constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n    protected childrenService: FilterContainerService,\n    protected service: CatalogService,\n    private taxonomyService: TaxonomyService,\n    private _snackBar: MatSnackBar,\n    private env: Environment) {\n    super(componentFactoryResolver, childrenService)\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.addOperator();\n\n    // tslint:disable-next-line: no-use-before-declare\n    default_filters.forEach(filter => {\n      this.filters_data.push(filter);\n    });\n\n    this.service.getJournalsVocab().pipe(\n      catchError(error => {\n        const m = new MessageHandler(this._snackBar);\n        m.showMessage(StatusCode.serverError, error.message);\n        return of(null);\n      })\n    )\n      .subscribe(response => {\n        if (response) {\n          response.data.vocabularies.forEach(vocab => {\n            if (VocabulariesInmutableNames.CUBAN_INTITUTIONS === vocab.id\n              && this.env.topOrganizationPID !== '') {\n              console.log(this.env.topOrganizationPID);\n              this.taxonomyService.getTermByUUID(this.env.topOrganizationPID).subscribe(termsResponse => {\n                this.filters_data.push(\n                  {\n                    index: this.filters_data.length,\n                    field: 'terms',\n                    type: 'tree',\n                    placeholder: vocab.human_name,\n                    name: vocab.human_name,\n                    idVocab: vocab.id,\n                    selectOptions: termsResponse.data.term_node.children,\n                    is_enabled: true\n                  });\n              });\n            } else {\n              this.service.getTerminosByVocab(vocab.id).subscribe(termsResponse => {\n                this.filters_data.push(\n                  {\n                    index: this.filters_data.length,\n                    field: 'terms',\n                    type: 'select-autocomplete',\n                    placeholder: vocab.human_name,\n                    name: vocab.human_name,\n                    idVocab: vocab.id,\n                    selectOptions: termsResponse.data.terms,\n                    is_enabled: true\n                  });\n\n              });\n            }\n\n          });\n        } else {\n          const m = new MessageHandler(this._snackBar);\n          m.showMessage(StatusCode.serverError, \"No puedo cargar los vocabularios\");\n        }\n      });\n  }\n\n  addOperator() {\n    const f = new FilterItem(BooleanFilterComponent, { field: 'op', value: true, name: ['AND', 'OR'], is_enabled: false, index: -1 });\n    // this.current_filters.push(f);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(f.component);\n    const viewContainerRef = this.adHost.viewContainerRef;\n    // viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<FilterComponent>componentRef.instance).data = f.data;\n  }\n\n}\n\nconst default_filters =\n  [\n    {\n      index: 0,\n      field: 'title',\n      type: 'search',\n      placeholder: 'Título',\n      name: 'Título',\n      is_enabled: true\n    },\n    {\n      index: 1,\n      field: 'issn',\n      type: 'text',\n      placeholder: 'ISSN',\n      name: 'ISSN',\n      is_enabled: true\n    }/*,\n        {\n            index: 2,\n            field: 'e_issn',\n            type: 'text',\n            placeholder: 'eISSN',\n            name: 'eISSN',\n            is_enabled: true\n        },\n        {\n            index: 3,\n            field: 'i_issn',\n            type: 'text',\n            placeholder: 'iISSN',\n            name: 'iISSN',\n            is_enabled: true\n        }*/,\n    {\n      index: 2,\n      field: 'rnps',\n      type: 'number',\n      placeholder: 'RNPS',\n      name: 'RNPS',\n      is_enabled: true\n    }/*,\n        {\n            index: 5,\n            field: 'term',\n            type: 'select',\n            placeholder: 'Términos',\n            name: 'Términos',\n            is_enabled: true\n        } */\n  ];\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { merge, of as observableOf } from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MetadataService, MessageHandler, StatusCode } from '../../core/public-api';\nimport { Journal, JournalData, ISSN, JournalVersion } from '../../entities/public-api';\nimport { FilterHttpMap, FiltersService } from '../../filters/public-api';\n\nimport { Environment } from '../../core/env';\n\nimport { CatalogService } from '../../backend/public-api';\nimport { CatalogFiltersComponent } from '../catalog-filters/catalog-filters.component';\nimport { MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { JournalViewInfoComponent } from '../../sources/journal-view/journal-view-info.component';\nimport { ScrollStrategyOptions } from '@angular/cdk/overlay';\n\n@Component({\n  selector: 'toco-catalog',\n  templateUrl: './catalog.component.html',\n  styleUrls: ['./catalog.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class CatalogComponent implements OnInit {\n\n  // journalList: Journal[] = [];\n  loading = true;\n  private hasErrors = false;\n  dataSource = new MatTableDataSource<Journal>();\n  columnsToDisplay = ['title', 'rnps', 'p-issn', 'url'];\n  expandedElement: Journal;\n  length = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 15, 20];\n  pageEvent: PageEvent;\n  params: Array<FilterHttpMap>;\n\n  sceibaHost = '';\n\n  layoutPosition = [\n    {\n      name: 'Derecha',\n      layout: 'row-reverse',\n      aling: 'center baseline',\n      width: '22'\n    },\n    {\n      name: 'Izquierda',\n      layout: 'row',\n      aling: 'center baseline',\n      width: '22'\n    },\n    {\n      name: 'Arriba',\n      layout: 'column',\n      aling: 'center center',\n      width: '90'\n    },\n    {\n      name: 'Abajo',\n      layout: 'column-reverse',\n      aling: 'center center',\n      width: '90'\n    }\n  ];\n  currentlayout = this.layoutPosition[1];\n\n  constructor(private service: CatalogService,\n    private metadata: MetadataService,\n    private filterService: FiltersService,\n    private env: Environment,\n    private _snackBar: MatSnackBar,\n    public dialog: MatDialog) {\n    this.sceibaHost = env.sceibaHost + '/catalog';\n    env.topOrganizationPID\n  }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(CatalogFiltersComponent, { static: true }) filter_component: CatalogFiltersComponent;\n\n  ngOnInit() {\n\n    this.metadata.setStandardMeta(\"Catálogo de Revistas Científicas\", \"\", \"\");\n    this.paginator.firstPage();\n    this.paginator.pageSize = 5;\n\n    try {\n\n      this.fetchJournalData();\n\n      this.filterService.paramsChanged.pipe(\n        catchError(error => {\n          const m = new MessageHandler(this._snackBar);\n          m.showMessage(StatusCode.serverError, error.message);\n          return observableOf([]);\n        })\n      )\n        .subscribe(params => {\n          this.params = params;\n          this.fetchJournalData();\n        });\n    }\n    catch (err) {\n      const m = new MessageHandler(this._snackBar);\n      m.showMessage(StatusCode.serverError, err.message);\n    }\n\n  }\n\n  // onPaginatorChanged(){\n  //   this.filterService.changeFilter('count',this.paginator.pageSize, false);\n  //   this.filterService.changeFilter('page',this.paginator.pageIndex);\n  // }\n\n  public fetchJournalData() {\n    const arr = new Array<Journal>();\n\n    merge().pipe(\n      startWith({}),\n      switchMap(() => {\n        //this.loading = true;\n        return this.service!.getJournalsPage(this.paginator.pageSize, this.paginator.pageIndex, this.params);\n      }),\n      map(response => {\n        // Flip flag to show that loading has finished.\n        this.loading = false;\n\n        this.length = response.data.sources.count;\n\n        response.data.sources.data.forEach(item => {\n          const j = new Journal();\n          j.id = item.id;\n          j.uuid = item.uuid;\n          const info = new JournalData();\n          info.url = item.data != null ? item.data.url : '';\n          info.title = item.name;\n          info.subtitle = item.subtitle;\n          info.shortname = item.shortname;\n          const issn = new ISSN();\n          issn.e = item.data != null ? item.data.issn.e : '';\n          issn.l = item.data != null ? item.data.issn.l : '';\n          issn.p = item.data != null ? item.data.issn.p : '';\n          info.issn = issn;\n          info.rnps = item.data != null ? item.data.rnps : '';\n          info.logo = item.data != null ? item.data.logo : '';\n          info.purpose = item.purpose;\n          info.description = item.data != null ? item.data.description : '';\n          j.data = info;\n          arr.push(j);\n        });\n        return arr;\n      }),\n      catchError(error => {\n        this.loading = false;\n        this.hasErrors = true;\n        const m = new MessageHandler(this._snackBar);\n        m.showMessage(StatusCode.serverError, error.message);\n        // Catch if the GitHub API has reached its rate limit. Return empty data.\n        // this.isRateLimitReached = true;\n        return observableOf([]);\n\n      })\n    ).subscribe(data => this.dataSource.data = data);\n\n  }\n\n  public onScrollUp() {\n    // console.log(\"scrolled up!!\");\n  }\n\n  public isEmpty() {\n    if (this.dataSource.data.length === 0 && this.hasErrors) {\n      //this.loading = false;\n      return true;\n    }\n    return false;\n  }\n\n  public isLoading() {\n    return this.loading;\n  }\n\n  public openme(): boolean {\n    const a = navigator.userAgent.match(/Android/i);\n    const b = navigator.userAgent.match(/BlackBerry/i);\n    const apple = navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    const o = navigator.userAgent.match(/Opera Mini/i);\n    const i = navigator.userAgent.match(/IEMobile/i);\n    if (a != null || b != null || apple != null || o != null || i != null) { return false; }\n    return true;\n  }\n\n  public changeLayoutPosition(index: number) {\n    this.currentlayout = this.layoutPosition[index];\n  }\n\n  viewJournal(uuid: string): void {\n\n    this.service.getSourceByUUID(uuid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.status == \"success\") {\n          let journalVersion = new JournalVersion();\n          journalVersion.deepcopy(response.data.sources);\n          const dialogRef = this.dialog.open(DialogCatalogJournalInfoDialog, {\n            data: {\n              journalVersion: journalVersion,\n              journalUUID: uuid\n            }\n          });\n\n          dialogRef.afterClosed();\n        } else {\n          const m = new MessageHandler(this._snackBar);\n          m.showMessage(StatusCode.serverError, 'No fue posible encontrar la Revista');\n        }\n      },\n      (error) => {\n        console.log('error');\n      },\n      () => { }\n    );\n\n\n  }\n}\n\n@Component({\n  selector: 'dialog-catalog-journal-info',\n  template: `<mat-dialog-content class=\"height-auto\">\n                    <toco-journal-view-info\n                        [journalVersion]=\"data.journalVersion\"\n                    >\n                    </toco-journal-view-info>\n                </mat-dialog-content>`,\n})\nexport class DialogCatalogJournalInfoDialog implements OnInit {\n\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogCatalogJournalInfoDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    console.log(this.data);\n\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { merge, of as observableOf } from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MetadataService } from '../../core/public-api';\nimport { Journal, JournalData, ISSN } from '../../entities/public-api';\nimport { FilterHttpMap, FiltersService } from '../../filters/public-api';\n\nimport { Environment } from '../../core/env';\n\nimport { CatalogService } from '../../backend/public-api';\nimport { CatalogFiltersComponent } from '../catalog-filters/catalog-filters.component';\n\n@Component({\n    selector: 'toco-sources-list',\n    templateUrl: './sources-list.component.html',\n    styleUrls: ['./sources-list.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\n            state('expanded', style({ height: '*' })),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n    ],\n})\nexport class SourcesListComponent implements OnInit\n{\n    journalList: Journal[] = [];\n    private loading = true;\n    dataSource = new MatTableDataSource<Journal>();\n    columnsToDisplay = ['title', 'rnps', 'p-issn'];\n    expandedElement: Journal;\n    length = 0;\n    pageSize = 5;\n    pageSizeOptions: number[] = [5, 10, 15, 20];\n    pageEvent: PageEvent;\n    params: Array<FilterHttpMap>;\n    sceibaHost = '';\n    layoutPosition = [\n        {\n            name: 'Derecha',\n            layout: 'row-reverse',\n            aling: 'center baseline',\n            width: '22'\n        },\n        {\n            name: 'Izquierda',\n            layout: 'row',\n            aling: 'center baseline',\n            width: '22'\n        },\n        {\n            name: 'Arriba',\n            layout: 'column',\n            aling: 'center center',\n            width: '90'\n        },\n        {\n            name: 'Abajo',\n            layout: 'column-reverse',\n            aling: 'center center',\n            width: '90'\n        }\n    ];\n    currentlayout = this.layoutPosition[1];\n\n    constructor(private service: CatalogService, private metadata: MetadataService, private filterService: FiltersService, private env: Environment) {\n        this.sceibaHost = env.sceibaHost + '/catalog';\n    }\n\n    @ViewChild(MatPaginator, { static: true })\n    paginator: MatPaginator;\n\n    @ViewChild(CatalogFiltersComponent, { static: true })\n    filter_component: CatalogFiltersComponent;\n\n    ngOnInit() {\n        this.metadata.setStandardMeta(\"Catálogo de Revistas Científicas\", \"\", \"\");\n        this.paginator.firstPage();\n        this.paginator.pageSize = 5;\n        this.service.getJournalsCount().subscribe(response => {\n            this.length = response.data.count;\n        });\n        this.fetchJournalData();\n        this.filterService.paramsChanged.subscribe(params => {\n            this.params = params;\n            this.fetchJournalData();\n        });\n    }\n\n    // onPaginatorChanged(){\n    //   this.filterService.changeFilter('count',this.paginator.pageSize, false);\n    //   this.filterService.changeFilter('page',this.paginator.pageIndex);\n    // }\n\n    fetchJournalData() {\n        this.loading = true;\n        // this.dataSource.data = this.service.getJournalsPage(this.count, this.page);\n        const arr = new Array<Journal>();\n\n        merge().pipe(\n            startWith({}),\n            switchMap(() => {\n            this.loading = true;\n            return this.service!.getJournalsPage(this.paginator.pageSize, this.paginator.pageIndex, this.params);\n        }),\n        map(response => {\n            // Flip flag to show that loading has finished.\n            this.loading = false;\n            // this.isRateLimitReached = false;\n            // this.resultsLength = response.total_count;\n            this.length = response.data.sources.count;\n            response.data.sources.data.forEach(item => {\n                const j = new Journal();\n                j.id = item.id;\n                j.uuid = item.uuid;\n                const info = new JournalData();\n                info.url = item.data != null ? item.data.url : '';\n                info.title = item.name;\n                info.subtitle = item.subtitle;\n                info.shortname = item.shortname;\n                const issn = new ISSN();\n                issn.e = item.data != null ? item.data.issn.e : '';\n                issn.l = item.data != null ? item.data.issn.l : '';\n                issn.p = item.data != null ? item.data.issn.p : '';\n                info.issn = issn;\n                info.rnps = item.data != null ? item.data.rnps : '';\n                info.logo = item.data != null ? item.data.logo : '';\n                info.purpose = item.purpose;\n                info.description = item.data != null ? item.data.description : '';\n                j.data = info;\n                arr.push(j);\n            });\n            return arr;\n        }),\n        catchError(error => {\n            this.loading = false;\n            console.log('ERRORRR ' + error);\n            // Catch if the GitHub API has reached its rate limit. Return empty data.\n            // this.isRateLimitReached = true;\n            return observableOf([]);\n        })\n        ).subscribe(data => this.dataSource.data = data);\n    }\n\n    onScrollUp() {\n        // console.log(\"scrolled up!!\");\n    }\n\n    isEmpty() {\n        if (this.journalList.length == 0) {\n            this.loading = false;\n            return true;\n        }\n        return false;\n    }\n\n    isLoading() {\n        return this.loading;\n    }\n\n    openme(): boolean\n    {\n        const a = navigator.userAgent.match(/Android/i);\n        const b = navigator.userAgent.match(/BlackBerry/i);\n        const apple = navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        const o = navigator.userAgent.match(/Opera Mini/i);\n        const i = navigator.userAgent.match(/IEMobile/i);\n\n        if (a != null || b != null || apple != null || o != null || i != null)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    changeLayoutPosition(index: number)\n    {\n        this.currentlayout = this.layoutPosition[index];\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\n\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TocoFormsModule } from '../forms/public-api';\nimport { SourceService, TaxonomyService } from '../backend/public-api';\n\nimport { JournalViewComponent } from './journal-view/journal-view.component';\nimport { JournalEditComponent } from './source-edit/journal-edit/journal-edit.component';\n\nimport { JournalViewTermComponent } from './journal-view/journal-view-version-term.component';\nimport { JournalViewInfoComponent, JournalViewInfoFieldComponent } from './journal-view/journal-view-info.component';\nimport { JournalViewFieldComponent } from './journal-view/journal-view-version-field.component';\nimport { JournalViewVersionComponent } from './journal-view/journal-view-version.component';\nimport { CoreModule } from '../core/public-api';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\n\nimport { CatalogFiltersComponent } from './catalog-filters/catalog-filters.component';\nimport { CatalogComponent, DialogCatalogJournalInfoDialog } from './catalog/catalog.component';\nimport { SourcesListComponent } from './sources-list/sources-list.component';\nimport { SourceOrganizationsComponent, SourceOrganizationSelectDialog, SourceOrganizationSelectTopDialog } from './source-edit/source-organizations/source-organizations.component';\nimport { OrganizationsModule } from '../organizations/public-api';\nimport { SourceIndexesComponent, SourceEditAddIndexComponent } from './source-edit/source-indexes/source-indexes.component';\n\n@NgModule({\n    declarations: [\n        JournalViewComponent,\n        JournalViewTermComponent,\n        JournalViewInfoComponent,\n        JournalViewInfoFieldComponent,\n        JournalViewFieldComponent,\n        JournalEditComponent,\n        SourceEditAddIndexComponent,\n        JournalViewVersionComponent,\n        CatalogComponent,\n        CatalogFiltersComponent,\n        SourcesListComponent,\n        DialogCatalogJournalInfoDialog,\n        SourceOrganizationsComponent,\n        SourceOrganizationSelectDialog,\n        SourceOrganizationSelectTopDialog,\n        SourceIndexesComponent\n    ],\n    entryComponents: [\n        SourceEditAddIndexComponent,\n        DialogCatalogJournalInfoDialog,\n        SourceOrganizationSelectDialog,\n        SourceOrganizationSelectTopDialog\n    ],\n    imports: [\n        SharedModule,\n        CoreModule,\n        ReactiveFormsModule,\n        TocoFormsModule,\n        OrganizationsModule\n    ],\n\n    exports: [\n        JournalViewComponent,\n        JournalEditComponent,\n        JournalViewInfoComponent,\n        CatalogComponent,\n        SourcesListComponent\n    ],\n\n    providers: [\n        SourceService,\n        TaxonomyService,\n        {\n            provide: STEPPER_GLOBAL_OPTIONS,\n            useValue: { displayDefaultIndicatorType: false }\n          }\n    ]\n})\nexport class SourcesModule\n{ }\n","\nimport { Component, OnInit, Inject, Output, OnDestroy, EventEmitter } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { of, PartialObserver, Observable } from 'rxjs';\nimport { catchError, finalize, startWith, map } from 'rxjs/operators';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { MessageHandler, StatusCode, Response } from '../../core/public-api';\nimport { Vocabulary } from '../../entities/public-api';\nimport { FormContainerComponent, PanelContent_Depr, FormFieldType, FormContainerAction, HintValue, HintPosition } from '../../forms/public-api';\n\nimport { TaxonomyService } from '../../backend/public-api';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\n\n\n\n@Component({\n    selector: 'toco-vocabulary-dialog',\n    templateUrl: './vocabulary-dialog.html'\n})\nexport class VocabularyDialogComponent implements OnInit {\n\n    public panels: PanelContent_Depr[];\n    public formGroup: FormGroup;\n    public action: FormContainerAction;\n    public actionLabel = 'Aceptar';\n    public hasService = false;\n    vocab: Vocabulary;\n    accept;\n\n    constructor(\n        private service: TaxonomyService,\n        private _formBuilder: FormBuilder,\n        public dialogRef: MatDialogRef<FormContainerComponent>,\n        public _snackBar: MatSnackBar,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        if (data.accept) {\n            this.accept = data.accept;\n            this.hasService = true;\n            this.vocab = new Vocabulary();\n            if (data.vocab === null) {\n                this.vocab.isNew = true;\n            } else {\n                this.vocab.deepcopy(data.vocab);\n                this.actionLabel = 'Actualizar';\n            }\n        }\n\n    }\n\n    ngOnInit(): void {\n        if (this.hasService) {\n\n            this.formGroup = this._formBuilder.group({});\n            this.panels = [\n                {\n                    title: this.vocab.isNew ? 'Nuevo Vocabulario' : 'Editar Vocabulario',\n                    description: '',\n                    iconName: '',\n                    formSection: this.formGroup,\n                    formSectionContent: [\n                        {\n                            name: 'name',\n                            label: 'Identificador',\n                            type: FormFieldType.identifier,\n                            required: true,\n                            width: '100%',\n                            value: this.vocab.name,\n                            startHint: new HintValue(HintPosition.start, 'Un identificador es una secuencia de letras')\n                        },\n                        {\n                            name: 'human_name',\n                            label: 'Nombre',\n                            type: FormFieldType.text,\n                            required: false,\n                            width: '100%',\n                            value: this.vocab.human_name,\n                            startHint: new HintValue(HintPosition.start, '')\n                        },\n                        {\n                            name: 'description',\n                            label: 'Descripción',\n                            type: FormFieldType.textarea,\n                            required: false,\n                            width: '100%',\n                            value: this.vocab.description,\n                            startHint: new HintValue(HintPosition.start, '')\n                        }\n                    ]\n                }\n            ];\n            this.action = {\n                doit: (data: any) => {\n                    if (this.formGroup.valid) {\n                        this.vocab.name = this.formGroup.value['name'];\n                        this.vocab.human_name = this.formGroup.value['human_name'];\n                        this.vocab.description = this.formGroup.value['description'];\n\n                        this.accept(this.vocab);\n\n                    } else {\n                        const m = new MessageHandler(this._snackBar);\n                        m.showMessage(StatusCode.OK, 'El identificador no es válido.')\n                    }\n                }\n              }\n        }\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    acceptAction() {\n\n\n    }\n}\n\n@Component({\n    selector: 'toco-vocabularies',\n    templateUrl: './vocabularies.component.html',\n    styleUrls: ['./vocabularies.component.scss']\n})\nexport class VocabulariesComponent implements OnInit, OnDestroy {\n\n    private vocabulariesChangeObserver: PartialObserver<Response<any>> = {\n        next: (result: Response<any>) => {\n            this.dialog.closeAll();\n            this.loadVocabularies();\n            const voc = new Vocabulary();\n            voc.deepcopy(result.data.vocabulary);\n            this.selectVocab(voc);\n            const m = new MessageHandler(this._snackBar);\n            m.showMessage(StatusCode.OK, result.message);\n        },\n\n        error: (err: any) => {\n            console.log('error: ' + err + '.');\n        },\n\n        complete: () => {\n            console.log('complete.');\n        }\n    };\n\n    public vocabCtrl = new FormControl();\n    public filteredVocabularies: Observable<Vocabulary[]>;\n\n    @Output()\n    public selectedVocab: EventEmitter<Vocabulary> = new EventEmitter();\n\n    public currentVocab: Vocabulary = null;\n\n    public vocabularies: Vocabulary[] = [];\n\n    loading = false;\n\n    @Output() emiterShowTerms: EventEmitter<Vocabulary> = new EventEmitter();\n\n    constructor(private service: TaxonomyService,\n        private oautheStorage: OAuthStorage,\n        public dialog: MatDialog,\n        private _snackBar: MatSnackBar) { }\n\n    ngOnInit() {\n        this.getAuthenticatedUserPermissions();\n        this.loadVocabularies();\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    selectVocab(item: Vocabulary) {\n        this.currentVocab = item;\n    }\n\n    loadVocabularies() {\n        this.loading = true;\n        this.service.getVocabularies().pipe(\n            catchError((err: HttpErrorResponse) => {\n                const m = new MessageHandler(this._snackBar);\n                m.showMessage(StatusCode.serverError, err.message);\n                // TODO: Maybe you must set a better return.\n                return of(null);\n            }),\n            finalize(() => this.loading = false)\n        )\n            .subscribe(response => {\n                if (response) {\n                    this.vocabularies = response.data.vocabularies;\n                    this.filteredVocabularies = this.vocabCtrl.valueChanges\n                        .pipe<string, Vocabulary[]>(\n                            startWith(''),\n                            map(value => {\n                                return this.vocabularies.filter(vocab => vocab.name.toLowerCase().includes(value.toLowerCase()));\n                            })\n                        );\n                } else {\n                    this.vocabularies = [];\n                }\n            });\n    }\n\n    newVocab(): void {\n        this.openVocabDialog(null);\n    }\n\n    editVocab(vocab: any) {\n        this.openVocabDialog(vocab);\n    }\n\n    private openVocabDialog(vocab: Vocabulary) {\n\n        const dialogRef = this.dialog.open(VocabularyDialogComponent, {\n            data: {\n                vocab: vocab,\n                accept: (voc: Vocabulary) => {\n                    this.dialog.closeAll();\n                    if (voc.isNew){\n                        this.service.newVocabulary(voc).pipe().subscribe(this.vocabulariesChangeObserver);\n                    } else {\n                        this.service.editVocabulary(voc).pipe().subscribe(this.vocabulariesChangeObserver);\n                    }\n                }\n            }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('dialog closed');\n        });\n    }\n\n    deleteVocab(vocab: Vocabulary) {\n    }\n\n    onSelectionChange(){\n        this.selectedVocab.emit(this.currentVocab);\n    }\n\n    getAuthenticatedUserPermissions() {\n        this.service.getCurrentUserPermissions().pipe(\n            catchError(err => {\n                const m = new MessageHandler(this._snackBar);\n                m.showMessage(StatusCode.serverError, err.message);\n                // TODO: Maybe you must set a better return.\n                return of(null);\n            })\n        )\n            .subscribe(request => {\n                if (request.status == 'success') {\n                    var permJson = JSON.stringify(request.data.permissions.actions);\n                    this.oautheStorage.setItem('user_permissions', permJson);\n                }\n            });\n    }\n\n    hasPermission(permission: string, id?: string): boolean {\n\n        const userPermission = JSON.parse(this.oautheStorage.getItem('user_permissions'));\n        if (!userPermission) {\n            return false;\n        }\n        switch (permission) {\n            case 'add':\n                if (userPermission.taxonomy_full_editor_actions === null)\n                    return true;\n\n                return false;\n\n            case 'edit':\n                if (userPermission.taxonomy_full_editor_actions === null)\n                    return true;\n\n                if (userPermission.vocabulary_editor_actions) {\n                    const arr: Array<string> = userPermission.vocabulary_editor_actions;\n\n                    if (arr.includes(id)) {\n                        return true\n                    }\n\n                }\n                else if (userPermission.taxonomy_full_editor_actions) {\n                    return true;\n                }\n\n                return false;\n\n            default:\n                return false;\n        }\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n */\n\nimport { Component, OnInit, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nimport {\n\tPanelContent_Depr,\n\tFormFieldType,\n\tFormContainerAction,\n\tHintValue,\n\tHintPosition,\n\tInputContent,\n\tActionContent\n} from \"../../forms/public-api\";\nimport {\n\tTerm,\n\tVocabulary,\n\tTermInstitutionData,\n\tEntityBase,\n\tTermIndexData,\n\tVocabulariesInmutableNames\n} from \"../../entities/public-api\";\n\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { FormFieldContent_Experimental } from '../../forms/experimental/form-field.control.experimental';\n\n@Component({\n\tselector: \"toco-term-generic\",\n\ttemplateUrl: \"./term-generic.component.html\",\n\tstyleUrls: [\"./term-generic.component.scss\"]\n})\nexport class TermGenericComponent implements OnInit {\n\tpublic panels: PanelContent_Depr[] = [];\n\tpublic formGroup: FormGroup;\n\tpublic action: FormContainerAction;\n\tpublic actionLabel = \"Adicionar\";\n\t// term: Term;\n\thasService = false;\n\taccept;\n\tvocab: Vocabulary;\n\n\tpublic constructor(\n\t\tprivate _formBuilder: FormBuilder,\n\t\tpublic _snackBar: MatSnackBar,\n\t\t@Inject(MAT_DIALOG_DATA) private data: any\n\t)\n\t{\n\t\tif (data.accept && data.currentVocab)\n\t\t{\n\t\t\tthis.accept = data.accept;\n\t\t\tthis.hasService = true;\n\t\t\tthis.vocab = data.currentVocab;\n\n\t\t\tif (data.term)\n\t\t\t{\n\t\t\t\tthis.actionLabel = \"Actualizar\";\n\n\t\t\t\tif (!this.data.term.data)\n\t\t\t\t{\n\t\t\t\t\tthis.data.term.data = this._getTermDataObject();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.data.term = new Term();\n\t\t\t\tthis.data.term.isNew = true;\n\t\t\t\tthis.data.term.vocabulary_id = data.currentVocab.id;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic ngOnInit(): void\n\t{\n\t\tthis.formGroup = this._formBuilder.group({});\n\n\t\tthis.panels = [\n\t\t\t{\n\t\t\t\ttitle: \"Término\",\n\t\t\t\tdescription: \"\",\n\t\t\t\ticonName: \"\",\n\t\t\t\tformSection: this.formGroup,\n\t\t\t\tformSectionContent: this._getContent()\n\t\t\t}\n\t\t];\n\n\t\tthis.action = {\n\t\t\tdoit(data: any): void {\n\t\t\t\tif (this.formGroup.valid)\n\t\t\t\t{\n\t\t\t\t\t// get the result from formGroup\n\t\t\t\t\tconst result = new Term();\n\t\t\t\t\tresult.deepcopy(this.data.term);\n\t\t\t\t\tresult.deepcopy(this.formGroup.value);\n\t\t\t\t\tresult.data = this._getTermDataObject();\n\t\t\t\t\tresult.data.deepcopy(this.formGroup.value);\n\n\t\t\t\t\t// Set the parent term, if any\n\t\t\t\t\tconst parent = this.formGroup.value[\"parent_id\"];\n\t\t\t\t\tif (parent && parent[0]) {\n\t\t\t\t\t\tresult.parent_id = parent[0].id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.parent_id = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the term is an index, then set miar_class and group_mes\n\t\t\t\t\t// clasifications\n\t\t\t\t\tif (this.vocab.id == VocabulariesInmutableNames.INDEXES) {\n\t\t\t\t\t\tresult.class_ids = [];\n\n\t\t\t\t\t\tconst miar = this.formGroup.value[\"miar_class\"];\n\t\t\t\t\t\tconst mes = this.formGroup.value[\"group_mes\"];\n\n\t\t\t\t\t\tif (miar && miar[0]) {\n\t\t\t\t\t\t\tresult.class_ids.push(miar[0].id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (mes && mes[0]) {\n\t\t\t\t\t\t\tresult.class_ids.push(mes[0].id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.accept(result as Term);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n    /**\n     * Returns the panel's content.\n     */\n\tprivate _getContent(): (InputContent | ActionContent | FormFieldContent_Experimental)[]\n\t{\n\t\t// TODO: use TermHelper\n\t\tswitch (this.vocab.id) {\n\t\t\tcase VocabulariesInmutableNames.CUBAN_INTITUTIONS:\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tlabel: \"Nombre\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: this.data.term.name ? this.data.term.name : null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"grid\",\n\t\t\t\t\t\tlabel: \"Identificador GRID\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.grid ? this.data.term.data.grid : null,\n\t\t\t\t\t\twidth: \"50%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"description\",\n\t\t\t\t\t\tlabel: \"Descripción\",\n\t\t\t\t\t\ttype: FormFieldType.textarea,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.description\n\t\t\t\t\t\t\t? this.data.term.description\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"email\",\n\t\t\t\t\t\tlabel: \"Email\",\n\t\t\t\t\t\ttype: FormFieldType.email,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: this.data.term.data.email ? this.data.term.data.email : null,\n\t\t\t\t\t\twidth: \"45%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"website\",\n\t\t\t\t\t\tlabel: \"Sitio Web Oficial\",\n\t\t\t\t\t\ttype: FormFieldType.url,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.website\n\t\t\t\t\t\t\t? this.data.term.data.website\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"45%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"address\",\n\t\t\t\t\t\tlabel: \"Dirección\",\n\t\t\t\t\t\ttype: FormFieldType.textarea,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.address\n\t\t\t\t\t\t\t? this.data.term.data.address\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"parent_id\",\n\t\t\t\t\t\tlabel: \"Jerarquía Institucional (Institución Superior)\",\n\t\t\t\t\t\ttype: FormFieldType.vocabulary,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\textraContent: {\n\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\tselectedTermsIds: this.data.term.parent_id\n\t\t\t\t\t\t\t\t? [this.data.term.parent_id]\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tvocab: this.vocab.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\tcase VocabulariesInmutableNames.INDEXES:\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tlabel: \"Nombre\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalue: this.data.term.name ? this.data.term.name : null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"url\",\n\t\t\t\t\t\tlabel: \"URL\",\n\t\t\t\t\t\ttype: FormFieldType.url,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.url ? this.data.term.data.url : null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"abrev\",\n\t\t\t\t\t\tlabel: \"Identificadores\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.abrev ? this.data.term.data.abrev : null,\n\t\t\t\t\t\twidth: \"30%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"initial_cover\",\n\t\t\t\t\t\tlabel: \"Cobertura inicio\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.initial_cover\n\t\t\t\t\t\t\t? this.data.term.data.initial_cover\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"30%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"end_cover\",\n\t\t\t\t\t\tlabel: \"Cobertura\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.data.end_cover\n\t\t\t\t\t\t\t? this.data.term.data.end_cover\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"30%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"description\",\n\t\t\t\t\t\tlabel: \"Descripción\",\n\t\t\t\t\t\ttype: FormFieldType.textarea,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\tvalue: this.data.term.description\n\t\t\t\t\t\t\t? this.data.term.description\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"miar_class\",\n\t\t\t\t\t\tlabel: \"Tipología de sistemas de indización\",\n\t\t\t\t\t\ttype: FormFieldType.vocabulary,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\textraContent: {\n\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\tselectedTermsIds: this.data.term.class_ids\n\t\t\t\t\t\t\t\t? this.data.term.class_ids\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tvocab: VocabulariesInmutableNames.INDEXES_CLASIFICATION\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: \"48%\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"group_mes\",\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\t\"Grupos, Categorías según criterios de “calidad” de las publicaciones \",\n\t\t\t\t\t\ttype: FormFieldType.vocabulary,\n\t\t\t\t\t\tstartHint: new HintValue(HintPosition.start, \"\"),\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\textraContent: {\n\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\tselectedTermsIds: this.data.term.class_ids\n\t\t\t\t\t\t\t\t? this.data.term.class_ids\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tvocab: VocabulariesInmutableNames.INDEXES_CLASIFICATION\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: \"48%\"\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"name\",\n\t\t\t\t\t\tlabel: \"Nombre\",\n\t\t\t\t\t\ttype: FormFieldType.text,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tvalue: this.data.term.name ? this.data.term.name : null\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"description\",\n\t\t\t\t\t\tlabel: \"Descripción\",\n\t\t\t\t\t\ttype: FormFieldType.textarea,\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tvalue: this.data.term.description\n\t\t\t\t\t\t\t? this.data.term.description\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"parent_id\",\n\t\t\t\t\t\tlabel: \"Término Padre\",\n\t\t\t\t\t\ttype: FormFieldType.vocabulary,\n\t\t\t\t\t\tstartHint: new HintValue(HintPosition.start, \"\"),\n\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\textraContent: {\n\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\tselectedTermsIds: this.data.term.parent_id\n\t\t\t\t\t\t\t\t? [this.data.term.parent_id]\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tvocab: this.vocab.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: \"50%\"\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t}\n\t}\n\n\tprivate _getTermDataObject(): EntityBase\n\t{\n\t\tswitch (this.vocab.id)\n\t\t{\n\t\t\tcase VocabulariesInmutableNames.CUBAN_INTITUTIONS:\n\t\t\t\treturn new TermInstitutionData();\n\n\t\t\tcase VocabulariesInmutableNames.INDEXES:\n\t\t\t\treturn new TermIndexData();\n\n\t\t\tdefault:\n\t\t\t\treturn new EntityBase();\n\t\t}\n\t}\n}\n","\nimport { Component, OnInit, OnDestroy, Input, OnChanges } from '@angular/core';\nimport { of as observableOf, PartialObserver, Subscription, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { MessageHandler, StatusCode, Response } from '../../core/public-api';\nimport { Vocabulary, Term, TermNode } from '../../entities/public-api';\n\nimport { TaxonomyService } from '../../backend/public-api';\nimport { TermGenericComponent } from '../term-generic/term-generic.component';\n\nimport { OAuthStorage } from 'angular-oauth2-oidc';\n\n/**\n * Flattened tree node that has been created from a TermNode through the flattener. Flattened\n * nodes include level index and whether they can be expanded or not.\n */\nexport interface FlatTreeNode {\n    name: string;\n    level: number;\n    expandable: boolean;\n}\n\n@Component({\n    selector: 'toco-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit, OnChanges, OnDestroy {\n\n\n    loading: Boolean = false;\n\n    /** The TreeControl controls the expand/collapse state of tree nodes.  */\n    treeControl: FlatTreeControl<FlatTreeNode>;\n\n    /** The TreeFlattener is used to generate the flat list of items from hierarchical data. */\n    treeFlattener: MatTreeFlattener<TermNode, FlatTreeNode>;\n\n    /** The MatTreeFlatDataSource connects the control and flattener to provide data. */\n    dataSource: MatTreeFlatDataSource<TermNode, FlatTreeNode>;\n\n    private termsTreeObserver: PartialObserver<Response<any>> = {\n        next: (response: Response<any>) => {\n            this.dataSource.data = response.data.tree.term_node;\n            this.loading = !this.loading;\n        },\n\n        error: (err: any) => {\n            console.log('error: ' + err + '.');\n        },\n\n        complete: () => {\n            console.log('complete');\n        }\n    };\n\n    private termChangeObserver: PartialObserver<Response<any>> = {\n        next: (response: Response<any>) => {\n            this.loading = !this.loading;\n            this.service.getTermsTreeByVocab(this.currentVocab.id).subscribe(this.termsTreeObserver);\n            this.dialog.closeAll();\n            const m = new MessageHandler(this._snackBar);\n            m.showMessage(StatusCode.OK, response.message);\n        },\n\n        error: (err: any) => {\n            console.log('error: ' + err + '.');\n        },\n\n        complete: () => {\n            console.log('complete');\n        }\n    };\n\n    @Input()\n    currentVocab: Vocabulary = null;\n\n    constructor(private service: TaxonomyService,\n        private oautheStorage: OAuthStorage,\n        public dialog: MatDialog,\n        private _snackBar: MatSnackBar) {\n        this.treeFlattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable,\n            this.getChildren);\n\n        this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n        this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    }\n\n    ngOnInit(): void {\n\n        if (!this.oautheStorage.getItem('user_permission')) {\n            this.getAuthenticatedUserPermissions();\n        }\n    }\n    ngOnChanges() {\n        if (this.currentVocab != null) {\n            this.loading = true;\n            this.service.getTermsTreeByVocab(this.currentVocab.id)\n                .subscribe(\n                    (response: Response<any>) => {\n                        this.dataSource.data = response.data.tree.term_node;\n                    },\n                    (err: any) => {\n                        console.log('error: ' + err + '.');\n                    },\n                    () => {\n                        this.loading = false;\n                    }\n                );\n        }\n    }\n    ngOnDestroy(): void {\n\n    }\n\n    /** Transform the data to something the tree can read. */\n    transformer(node: TermNode, level: number) {\n        return {\n            name: node.term.identifier,\n            term: node.term,\n            level: level,\n            expandable: (node.children.length > 0)\n        };\n    }\n\n    /** Get the level of the node */\n    getLevel(node: FlatTreeNode) {\n        return node.level;\n    }\n\n    /** Get whether the node is expanded or not. */\n    isExpandable(node: FlatTreeNode) {\n        return node.expandable;\n    }\n\n    /** Get whether the node has children or not. */\n    hasChild(index: number, node: FlatTreeNode) {\n        return node.expandable;\n    }\n\n    /** Get the children for the node. */\n    getChildren(node: TermNode) {\n        return observableOf(node.children);\n    }\n\n    addTerm() {\n        this.openTermDialog(null);\n    }\n    editTerm(node: any) {\n        this.openTermDialog(node.term);\n    }\n\n\n    private openTermDialog(term: Term) {\n\n        const dialogRef = this.dialog.open(TermGenericComponent, {\n            data: {\n                term: term,\n                terms: this.dataSource.data,\n                currentVocab: this.currentVocab,\n                accept: (term: Term) => {\n                    this.dialog.closeAll();\n                    if (term.isNew){\n                        this.service.newTerm(term).pipe().subscribe(this.termChangeObserver);\n                    } else {\n                        this.service.editTerm(term).pipe().subscribe(this.termChangeObserver);\n                    }\n                }\n            }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('dialog closed');\n        });\n    }\n\n    deleteTerm(node: TermNode) {\n        console.log(node);\n    }\n\n    getAuthenticatedUserPermissions() {\n        this.service.getCurrentUserPermissions().pipe(\n            catchError(err => {\n                const m = new MessageHandler(this._snackBar);\n                m.showMessage(StatusCode.serverError, err.message);\n                // TODO: Maybe you must set a better return.\n                return of(null);\n            })\n        )\n            .subscribe(request => {\n                if (request.status == 'success') {\n                    var permJson = JSON.stringify(request.data.permissions.actions);\n                    this.oautheStorage.setItem('user_permissions', permJson);\n                }\n            });\n    }\n\n    hasPermission(permission: string, id?: string): boolean {\n\n        const userPermission = JSON.parse(this.oautheStorage.getItem('user_permissions'));\n        if (!userPermission) {\n            return false;\n        }\n        switch (permission) {\n            case 'add':\n                if (userPermission.taxonomy_full_editor_actions === null)\n                    return true;\n\n                return false;\n\n            case 'edit':\n                if (userPermission.taxonomy_full_editor_actions === null)\n                    return true;\n\n                if (userPermission.vocabulary_editor_actions) {\n                    const arr: Array<string> = userPermission.vocabulary_editor_actions;\n\n                    if (arr.includes(id)) {\n                        return true\n                    }\n\n                }\n                else if (userPermission.taxonomy_full_editor_actions) {\n                    return true;\n                }\n\n                return false;\n\n            default:\n                return false;\n        }\n    }\n}\n","/*\n *   Copyright (c) 2020 Universidad de Pinar del Río \"Hermanos Saíz Montes de Oca\"\n *   All rights reserved.\n\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Vocabulary } from '../../entities/public-api';\n\n\n@Component({\n    selector: 'toco-taxonomy',\n    templateUrl: './taxonomy.component.html',\n    styleUrls: ['./taxonomy.component.scss']\n})\nexport class TaxonomyComponent implements OnInit, OnDestroy{\n\n    vocabs = { title: 'Vocabularios', cols: 1, rows: 1 };\n    terms = { title: 'Terminos de', cols: 1, rows: 2 };\n\n    current_vocab = {name: '', description: ''};\n\n    currentVocab: Vocabulary;\n\n    constructor()\n    { }\n\n    ngOnInit(): void {\n    }\n    vocabChange(vocab: Vocabulary){\n        this.currentVocab = vocab;\n    }\n    ngOnDestroy(): void {\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TaxonomyService } from '../../backend/public-api';\nimport { Term } from '../../entities/public-api';\n\n@Component({\n  selector: 'toco-terms-viewer',\n  templateUrl: './terms-viewer.component.html',\n  styleUrls: ['./terms-viewer.component.scss']\n})\nexport class TermsViewerComponent implements OnInit {\n  /**\n   * receive vocab_id and a list of terms ids. \n   * show in a chiplist the terms of vocab_id\n   */\n\n  @Input()\n  vocabulary_id = null;\n  @Input()\n  ids: number[] = null;\n  \n  terms: Term[] = []\n  constructor(private taxonomyService: TaxonomyService) { }\n\n  ngOnInit() {\n    if (this.vocabulary_id){\n      console.log(this.ids)\n      this.taxonomyService.getTermListByIDs(this.ids)\n      .subscribe(\n        (response)=>{\n          console.log(response);\n          \n          if(response.data.term){\n            response.data.term.forEach(term => {\n              if (term.vocabulary_id == this.vocabulary_id){\n                this.terms.push(term);\n              }\n            });\n          }\n        },\n        (error)=>{},\n        ()=>{}\n      );\n    }\n  }\n\n}\n","\n\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/public-api';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TocoFormsModule } from '../forms/public-api';\n\nimport { VocabulariesComponent, VocabularyDialogComponent } from './vocabularies/vocabularies.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { TaxonomyComponent } from './taxonomy/taxonomy.component';\nimport { TermGenericComponent } from './term-generic/term-generic.component';\nimport { TermsViewerComponent } from './terms-viewer/terms-viewer.component';\n\n@NgModule({\n    declarations: [\n        VocabulariesComponent,\n        VocabularyDialogComponent,\n        TermsComponent,\n        TaxonomyComponent,\n        TermGenericComponent,\n        TermsViewerComponent\n    ],\n\n    entryComponents: [\n        VocabularyDialogComponent,\n        TermGenericComponent\n    ],\n\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        TocoFormsModule\n    ],\n\n    exports: [\n        TaxonomyComponent,\n        VocabulariesComponent,\n        TermsViewerComponent\n    ],\n\n    providers: [\n    ]\n})\nexport class TaxonomyModule\n{ }\n\n\n","import { Term, VocabulariesInmutableNames } from \"../entities/public-api\";\nimport { PanelContent, FormFieldType, HintValue, HintPosition } from \"../forms/public-api\";\n\nexport class TermHelper {\n  public static getPanelContentToEdit(term: Term) {\n    // console.log(term);\n\n    let result = null;\n    if (term) {\n      switch (term.vocabulary_id) {\n        case VocabulariesInmutableNames.CUBAN_INTITUTIONS:\n          result = [\n            {\n              name: \"name\",\n              label: \"Nombre\",\n              type: FormFieldType.text,\n              required: true,\n              value: term.identifier ? term.identifier : null,\n              width: \"100%\"\n            },\n            {\n              name: \"grid\",\n              label: \"Identificador GRID\",\n              type: FormFieldType.text,\n              required: false,\n              value: term.data[\"grid\"] ? term.data[\"grid\"] : null,\n              width: \"50%\"\n            },\n            {\n              name: \"description\",\n              label: \"Descripción\",\n              type: FormFieldType.textarea,\n              required: false,\n              value: term.description ? term.description : null,\n              width: \"100%\"\n            },\n            {\n              name: \"email\",\n              label: \"Email\",\n              type: FormFieldType.email,\n              required: true,\n              value: term.data[\"email\"] ? term.data[\"email\"] : null,\n              width: \"45%\"\n            },\n            {\n              name: \"website\",\n              label: \"Sitio Web Oficial\",\n              type: FormFieldType.url,\n              required: false,\n              value: term.data[\"website\"] ? term.data[\"website\"] : null,\n              width: \"45%\"\n            },\n            {\n              name: \"address\",\n              label: \"Dirección\",\n              type: FormFieldType.textarea,\n              required: false,\n              value: term.data[\"address\"] ? term.data[\"address\"] : null,\n              width: \"100%\"\n            },\n            {\n              name: \"parent_id\",\n              label: \"Jerarquía Institucional (Institución Superior)\",\n              type: FormFieldType.vocabulary,\n              required: false,\n              extraContent: {\n                multiple: false,\n                selectedTermsIds: term.parent_id ? [term.parent_id] : null,\n                vocab: term.vocabulary_id\n              },\n              width: \"100%\"\n            }\n          ];\n          break;\n        case VocabulariesInmutableNames.INDEXES:\n          result = [\n            {\n              name: \"name\",\n              label: \"Nombre\",\n              type: FormFieldType.text,\n              required: true,\n              value: term.identifier ? term.identifier : null,\n              width: \"100%\"\n            },\n            {\n              name: \"url\",\n              label: \"URL\",\n              type: FormFieldType.url,\n              required: false,\n              value: term.data[\"url\"] ? term.data[\"url\"] : null,\n              width: \"100%\"\n            },\n            {\n              name: \"abrev\",\n              label: \"Identificadores\",\n              type: FormFieldType.text,\n              required: false,\n              value: term.data[\"abrev\"] ? term.data[\"abrev\"] : null,\n              width: \"30%\"\n            },\n            {\n              name: \"initial_cover\",\n              label: \"Cobertura inicio\",\n              type: FormFieldType.text,\n              required: false,\n              value: term.data[\"initial_cover\"]\n                ? term.data[\"initial_cover\"]\n                : null,\n              width: \"30%\"\n            },\n            {\n              name: \"end_cover\",\n              label: \"Cobertura\",\n              type: FormFieldType.text,\n              required: false,\n              value: term.data[\"end_cover\"] ? term.data[\"end_cover\"] : null,\n              width: \"30%\"\n            },\n            {\n              name: \"description\",\n              label: \"Descripción\",\n              type: FormFieldType.textarea,\n              required: false,\n              value: term.description ? term.description : null,\n              width: \"100%\"\n            },\n            {\n              name: \"miar_class\",\n              label: \"Tipología de sistemas de indización\",\n              type: FormFieldType.vocabulary,\n              required: false,\n              extraContent: {\n                multiple: false,\n                selectedTermsIds: term.class_ids ? term.class_ids : null,\n                vocab: VocabulariesInmutableNames.INDEXES_CLASIFICATION\n              },\n              width: \"48%\"\n            },\n            {\n              name: \"group_mes\",\n              label:\n                \"Grupos, Categorías según criterios de “calidad” de las publicaciones \",\n              type: FormFieldType.vocabulary,\n              startHint: new HintValue(HintPosition.start, \"\"),\n              required: false,\n              extraContent: {\n                multiple: false,\n                selectedTermsIds: term.class_ids ? term.class_ids : null,\n                vocab: VocabulariesInmutableNames.INDEXES_CLASIFICATION\n              },\n              width: \"48%\"\n            }\n          ];\n          break;\n        default:\n          result = [\n            {\n              name: \"name\",\n              label: \"Nombre\",\n              type: FormFieldType.text,\n              required: true,\n              width: \"100%\",\n              value: term.identifier ? term.identifier : null\n            },\n            {\n              name: \"description\",\n              label: \"Descripción\",\n              type: FormFieldType.textarea,\n              required: false,\n              width: \"100%\",\n              value: term.description ? term.description : null\n            },\n            {\n              name: \"parent_id\",\n              label: \"Término Padre\",\n              type: FormFieldType.vocabulary,\n              startHint: new HintValue(HintPosition.start, \"\"),\n              required: false,\n              extraContent: {\n                multiple: false,\n                selectedTermsIds: term.parent_id ? [term.parent_id] : null,\n                vocab: term.vocabulary_id\n              },\n              width: \"50%\"\n            }\n          ];\n      }\n    }\n    return result;\n  }\n}\n"],"names":["tslib_1.__extends","tslib_1.__values","User","VocabularyComponentExtraContent","SelectOption","TreeFilterData","MatTableDataSource","observableOf","MatPaginator","routes","MatButtonModule","MatMenuModule","MatIconModule","MatBadgeModule","MatTableModule","MatPaginatorModule","MatDividerModule","MatTooltipModule","MatAutocompleteModule","MatChipsModule","MAT_DIALOG_DATA","default_filters","MatDialogRef","MatSnackBar","MatDialog","FlatTreeNode","MatTreeFlattener","MatTreeFlatDataSource"],"mappings":"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"}