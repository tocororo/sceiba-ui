{"version":3,"file":"angular-oauth2-oidc-jwks.mjs","sources":["../../../projects/angular-oauth2-oidc-jwks/src/lib/jwks-validation-handler.ts","../../../projects/angular-oauth2-oidc-jwks/src/angular-oauth2-oidc-jwks.ts"],"sourcesContent":["import * as rs from 'jsrsasign';\nimport {\n  AbstractValidationHandler,\n  ValidationParams,\n} from 'angular-oauth2-oidc';\n\n/**\n * Validates the signature of an id_token against one\n * of the keys of an JSON Web Key Set (jwks).\n *\n * This jwks can be provided by the discovery document.\n */\nexport class JwksValidationHandler extends AbstractValidationHandler {\n  /**\n   * Allowed algorithms\n   */\n  allowedAlgorithms: string[] = [\n    'HS256',\n    'HS384',\n    'HS512',\n    'RS256',\n    'RS384',\n    'RS512',\n    'ES256',\n    'ES384',\n    'PS256',\n    'PS384',\n    'PS512',\n  ];\n\n  /**\n   * Time period in seconds the timestamp in the signature can\n   * differ from the current time.\n   */\n  gracePeriodInSec = 600;\n\n  validateSignature(params: ValidationParams, retry = false): Promise<any> {\n    if (!params.idToken) throw new Error('Parameter idToken expected!');\n    if (!params.idTokenHeader)\n      throw new Error('Parameter idTokenHandler expected.');\n    if (!params.jwks) throw new Error('Parameter jwks expected!');\n\n    if (\n      !params.jwks['keys'] ||\n      !Array.isArray(params.jwks['keys']) ||\n      params.jwks['keys'].length === 0\n    ) {\n      throw new Error('Array keys in jwks missing!');\n    }\n\n    // console.debug('validateSignature: retry', retry);\n\n    let kid: string = params.idTokenHeader['kid'];\n    let keys: object[] = params.jwks['keys'];\n    let key: object;\n\n    let alg = params.idTokenHeader['alg'];\n\n    if (kid) {\n      key = keys.find((k) => k['kid'] === kid /* && k['use'] === 'sig' */);\n    } else {\n      let kty = this.alg2kty(alg);\n      let matchingKeys = keys.filter(\n        (k) => k['kty'] === kty && k['use'] === 'sig'\n      );\n\n      /*\n            if (matchingKeys.length == 0) {\n                let error = 'No matching key found.';\n                console.error(error);\n                return Promise.reject(error);\n            }*/\n      if (matchingKeys.length > 1) {\n        let error =\n          'More than one matching key found. Please specify a kid in the id_token header.';\n        console.error(error);\n        return Promise.reject(error);\n      } else if (matchingKeys.length === 1) {\n        key = matchingKeys[0];\n      }\n    }\n\n    if (!key && !retry && params.loadKeys) {\n      return params\n        .loadKeys()\n        .then((loadedKeys) => (params.jwks = loadedKeys))\n        .then((_) => this.validateSignature(params, true));\n    }\n\n    if (!key && retry && !kid) {\n      let error = 'No matching key found.';\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    if (!key && retry && kid) {\n      let error =\n        'expected key not found in property jwks. ' +\n        'This property is most likely loaded with the ' +\n        'discovery document. ' +\n        'Expected key id (kid): ' +\n        kid;\n\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    let keyObj = rs.KEYUTIL.getKey(key);\n    let validationOptions = {\n      alg: this.allowedAlgorithms,\n      gracePeriod: this.gracePeriodInSec,\n    };\n    let isValid = rs.KJUR.jws.JWS.verifyJWT(\n      params.idToken,\n      keyObj,\n      validationOptions\n    );\n\n    if (isValid) {\n      return Promise.resolve();\n    } else {\n      return Promise.reject('Signature not valid');\n    }\n  }\n\n  private alg2kty(alg: string) {\n    switch (alg.charAt(0)) {\n      case 'R':\n        return 'RSA';\n      case 'E':\n        return 'EC';\n      default:\n        throw new Error('Cannot infer kty from alg: ' + alg);\n    }\n  }\n\n  calcHash(valueToHash: string, algorithm: string): Promise<string> {\n    let hashAlg = new rs.KJUR.crypto.MessageDigest({ alg: algorithm });\n    let result = hashAlg.digestString(valueToHash);\n    let byteArrayAsString = this.toByteArrayAsString(result);\n    return Promise.resolve(byteArrayAsString);\n  }\n\n  toByteArrayAsString(hexString: string) {\n    let result = '';\n    for (let i = 0; i < hexString.length; i += 2) {\n      let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\n      let num = parseInt(hexDigit, 16);\n      result += String.fromCharCode(num);\n    }\n    return result;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}